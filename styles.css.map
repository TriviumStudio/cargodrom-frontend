{"version":3,"file":"styles.css","mappings":";;;AAAA;EACE,sBAAsB;EACtB,4BAAyC;EACzC;4CACuD;EACvD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,yBAAsC;EACtC;yCACoD;EACpD,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA,4DAA4D;AAC5D,oHAAoH;AACpH,OAAO,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,6CAA6C,EAAE,iBAAiB,CAAC;AAC7G,OAAO,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,mBAAmB,EAAE;AACjE,SAAS,kBAAkB,EAAE,mCAAmC,EAAE;;AAElE,yBAAyB,eAAe,CAAC,YAAY,CAAC;AACtD,sEAAsE,eAAe,EAAmD,mBAAmB,EAAE,gBAAgB,EAAE;AAC/K,qDAAqD,sBAAsB,EAAE;;AAE7E,OAAO,kCAAkC,EAAE,WAAW,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,eAAe,EAAE;;;AAGhM,UAAU,YAAY,GAAG;AACzB,WAAW,UAAU,gBAAgB,EAAE,YAAY,EAAE,CAAC;AACtD,eAAe,YAAY,EAAE,aAAa,EAAE,sBAAsB,GAAG;;AAErE,WAAW,qDAAkE,EAAE,sBAAsB,GAAG,aAAa,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,YAAY,EAAE;AACnL,aAAa,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,kBAAkB,EAAE;AAC/E,kBAAkB,gCAAgC,EAAE,uBAAuB,EAAE,aAAa,EAAE,mBAAmB,EAAE;AACjH,mBAAmB,qBAAqB,EAAE,8CAA2D,EAAE,YAAY,EAAE,YAAY,EAAE;AACnI,kBAAkB,YAAY,EAAE;AAChC,sBAAsB,oBAAoB,EAAE;AAC5C,uBAAuB,oBAAoB,EAAE,aAAa,EAAE,qBAAqB,GAAG,eAAe,EAAE,iBAAiB,GAAG;AACzH,0BAA0B,oBAAoB,EAAE;AAChD,2BAA2B,WAAW,EAAE;AACxC,kCAAkC,UAAU,EAAE;AAC9C,8CAA8C,kBAAkB,EAAE;AAClE,mEAAmE,mBAAmB,EAAE,yBAAyB,EAAE,eAAe,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,WAAW,EAAE;AAC9O,yBAAyB,eAAe,EAAE,iBAAiB,EAAE,UAAU,EAAE,yBAAyB,EAAE,cAAc,EAAE;AACpH,yBAAyB,eAAe,EAAE;AAC1C,kBAAkB,cAAc,EAAE,oBAAoB,EAAE,eAAe,EAAE;AACzE,sBAAsB,mBAAmB,EAAE;AAC3C,sBAAsB,gBAAgB,EAAE,mBAAmB,EAAE;AAC7D,mBAAmB,cAAc,EAAE;AACnC,qBAAqB,cAAc,EAAE;AACrC,4BAA4B,eAAe,EAAE;AAC7C,mBAAmB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,gDAA6D,EAAE,kBAAkB,EAAE,eAAe,EAAE;AAC9K,WAAW,6BAA6B,EAAE;;AAE1C,kCAAkC,cAAc,EAAE,gBAAgB,EAAE;AACpE,0BAA0B,aAAa,EAAE;;AAEzC,UAAU,sCAAsC,EAAE,UAAU,EAAE,kBAAkB,EAAE;;AAElF,aAAa,aAAa,EAAE,8BAA8B,EAAE,8BAA8B,EAAE,YAAY,EAAE,qCAAqC,EAAE;AACjJ,iBAAiB,eAAe,EAAE,aAAa,GAAG;AAClD,wBAAwB,YAAY,EAAE;;AAEtC;EACE,yEAAsF;EACtF,qCAAqC;AACvC;AACA,gGAAgG;AAChG,mBAAmB,eAAe,EAAE,eAAe,EAAE,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,sFAAsF,EAAE,qBAAqB,EAAE,8BAA8B,EAAE,cAAc,EAAE;AACzQ;EACE,kBAAkB,eAAe,EAAE,eAAe,CAAC;AACrD;AACA,uBAAuB,kBAAkB,EAAE,gBAAgB,EAAE,YAAY,CAAC;AAC1E,iDAAiD;AACjD,4BAA4B,6BAA6B,EAAE,YAAY,EAAE;AACzE,oDAAoD,EAAE,yBAAyB,YAAY,EAAE;AAC7F,+DAA+D;AAC/D,uBAAuB,oCAAoC,EAAE,kCAAkC,CAAC;AAChG,6BAA6B,mBAAmB,EAAE;AAClD,gCAAgC,iCAAiC,EAAE;AACnE,mCAAmC;AACnC,+BAA+B,eAAe,EAAE,iBAAiB,EAAE;AACnE,4BAA4B;AAC5B,8BAA8B;AAC9B,+BAA+B;AAC/B,kCAAkC;AAClC,+BAA+B;AAC/B,+BAA+B;AAC/B,8BAA8B;;AAE9B,kBAAkB,YAAY,EAAE;;AAEhC,uBAAuB,eAAe,EAAE,eAAe,EAAE;AACzD,kCAAkC,cAAc,EAAE,gBAAgB,EAAE;AACpE,2CAA2C,eAAe,EAAE,8BAA8B,CAAC,YAAY,EAAE,kBAAkB,EAAE;AAC7H,+CAA+C;;AAE/C,iBAAiB,sFAAsF,EAAE,eAAe,EAAE,aAAa,EAAE,mBAAmB,EAAE;AAC9J,kDAAkD,EAAE,uBAAuB,YAAY,EAAE;AACzF,qBAAqB,gBAAgB,EAAE,cAAc,GAAG;AACxD,sDAAsD;AACtD,8BAA8B,wBAAwB,EAAE;AACxD,qBAAqB,kBAAkB,EAAE;AACzC,0BAA0B,8BAA8B;AACxD,qBAAqB,kBAAkB,EAAE;AACzC,+BAA+B,kBAAkB,EAAE,UAAU,EAAE,SAAS,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE;AAChP,qCAAqC,aAAa,EAAE;AACpD,+BAA+B;AAC/B,sDAAsD;;AAEtD,aAAa,2CAA2C,EAAE,4BAA4B,EAAE,oCAAoC,CAAC;AAC7H,qBAAqB,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,WAAW,CAAC;;AAE/G,kBAAkB,YAAY,EAAE;AAChC,oBAAoB,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,mBAAmB,GAAG,iBAAiB,EAAE,qBAAqB,EAAE;AACnJ,qBAAqB,kBAAkB,EAAE,kBAAkB,EAAE,eAAe,EAAE;AAC9E,4BAA4B,WAAW,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,mDAAgE,EAAE,WAAW,EAAE;AACxK,wBAAwB,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,EAAE,eAAe,EAAE;AAClH,mBAAmB,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE;AAC1F,yBAAyB,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE;;AAEjI,oBAAoB,8BAA8B,EAAE,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,sBAAsB,GAAG;;AAEnI,mBAAmB,YAAY,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,mBAAmB,EAAE,qBAAqB,EAAE;AACpL,yBAAyB,YAAY,EAAE;AACvC,uBAAuB,oBAAoB,EAAE;;AAE7C,gBAAgB,aAAa,EAAE,kBAAkB,EAAE,mCAAmC,EAAE;AACxF,uBAAuB,YAAY,EAAE,aAAa,EAAE,mBAAmB,EAAE;AACzE,sBAAsB,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE;;AAE7F,qCAAqC,YAAY,EAAE;AACnD,2BAA2B,qBAAqB,EAAE,sBAAsB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAE,sBAAsB,EAAE;AACzN,0QAA0Q;AAC1Q,iCAAiC,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,4BAA4B,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,eAAe,EAAE,kBAAkB,EAAE;AACrN,yCAAyC,kBAAkB,EAAE,eAAe;AAC5E,sCAAsC,0BAA0B,EAAE;AAClE,gDAAgD,0BAA0B,EAAE;AAC5E,kCAAkC,aAAa,EAAE,kBAAkB,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE;AAC9I,4CAA4C,cAAc,EAAE;AAC5D,wCAAwC,YAAY,EAAE;AACtD,wCAAwC,WAAW,EAAE,wBAAwB,EAAE,YAAY,EAAE,qBAAqB,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,EAAE,4DAAyE,EAAE;AAC3O,6CAA6C;AAC7C,6CAA6C,yBAAyB,EAAE;AACxE,iCAAiC,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE;AACxE,iCAAiC,cAAc,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,cAAc,EAAE;AAC1M,2CAA2C,SAAS,EAAE,YAAY,EAAE,sCAAsC,EAAE;AAC5G,yCAAyC,cAAc,EAAE,iBAAiB,EAAE,gBAAgB,GAAG,cAAc,GAAG;AAChH,gCAAgC,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE;AAChF,gCAAgC,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe,EAAE,6BAA6B,EAAE;AACvM,sCAAsC,WAAW,EAAE,mBAAmB,GAAG;AACzE,yCAAyC,eAAe,EAAE,YAAY,EAAE;AACxE,yCAAyC;AACzC,+CAA+C;AAC/C,yCAAyC,WAAW,EAAE,mBAAmB,IAAI;AAC7E,+CAA+C,mBAAmB,EAAE;;AAEpE,aAAa,eAAe,EAAE,iBAAiB,EAAE;AACjD,oBAAoB,eAAe,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,cAAc,EAAE,kBAAkB,EAAE,yCAAyC,EAAE,eAAe,EAAE,sBAAsB,EAAE;AAClS,4BAA4B,gBAAgB,EAAE;AAC9C,wBAAwB,iBAAiB,EAAE,mBAAmB,EAAE,WAAW,EAAE,8CAA8C,EAAE;AAC7H,yBAAyB,iEAA8E,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE;AAChJ,8BAA8B,yBAAyB,EAAE,0CAA0C,EAAE;AACrG,oCAAoC;AACpC,kBAAkB,cAAc,EAAE;AAClC,yGAAyG;AACzG,qEAAqE,aAAa,EAAE;;AAEpF,cAAc;AACd,eAAe,yBAAyB,EAAE,eAAe,EAAE,iBAAiB,EAAE,WAAW,EAAE;AAC3F,YAAY,iBAAiB,EAAE,mBAAmB,EAAE,WAAW,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE;AACzJ,eAAe,qBAAqB,EAAE;AACtC,aAAa,yCAAyC,GAAG;AACzD,eAAe,gCAAgC,GAAG;AAClD,cAAc,kBAAkB,EAAE;AAClC,cAAc,kBAAkB,EAAE;AAClC,cAAc,iBAAiB,EAAE;AACjC,cAAc,iBAAiB,EAAE;AACjC,YAAY,uBAAuB,EAAE,gCAAgC,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,YAAY,EAAE;AAC/H,eAAe,uBAAuB,GAAG;AACzC,cAAc,yCAAyC,EAAE;AACzD,iBAAiB,mBAAmB,EAAE;AACtC,eAAe,cAAc,EAAE;AAC/B,oBAAoB,cAAc,EAAE;AACpC,aAAa,cAAc,EAAE;AAC7B,kBAAkB,cAAc,EAAE;AAClC,kBAAkB,cAAc,EAAE;AAClC,eAAe,cAAc,EAAE;AAC/B,uBAAuB,cAAc,EAAE;AACvC,oBAAoB,cAAc,EAAE;AACpC,YAAY,iBAAiB,EAAE;AAC/B,eAAe,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE;AACjE,uBAAuB,gBAAgB,EAAE;AACzC,mBAAmB,wDAAqE,EAAE;AAC1F,oBAAoB,wDAAqE,EAAE;AAC3F,yBAAyB,wDAAqE,EAAE;AAChG,oBAAoB,yDAAsE,EAAE;AAC5F,oBAAoB,yDAAsE,EAAE;AAC5F,kBAAkB,yDAAsE,EAAE;AAC1F,uBAAuB,yDAAsE,EAAE;AAC/F,mBAAmB,wDAAqE,EAAE;;AAE1F,cAAc,mBAAmB,EAAE;AACnC,mBAAmB,qBAAqB,EAAE,mBAAmB,EAAE,UAAU,EAAE,YAAY,EAAE,mBAAmB,EAAE;AAC9G,uBAAuB,mBAAmB,GAAG;AAC7C,aAAa,mBAAmB,EAAE;AAClC,iBAAiB,iBAAiB,EAAE;AACpC,iBAAiB,iBAAiB,EAAE;AACpC,oBAAoB,WAAW,EAAE;AACjC,kBAAkB,cAAc,EAAE,iBAAiB,EAAE;AACrD,QAAQ,mBAAmB,CAAC;AAC5B,4DAA4D;;;AAG5D,mBAAmB,qBAAqB,EAAE,2BAA2B,EAAE;AACvE,UAAU,aAAa,EAAE,sBAAsB,GAAG;AAClD,gBAAgB,aAAa,EAAE;AAC/B,gBAAgB,aAAa,EAAE,aAAa,EAAE,sBAAsB,EAAE;AACtE;EACE,gBAAgB,aAAa,EAAE,aAAa,EAAE;AAChD;AACA,qBAAqB,cAAc,EAAE;AACrC,uBAAuB,mBAAmB,EAAE,eAAe,EAAE,iBAAiB,EAAE;AAChF,sBAAsB,cAAc,EAAE;AACtC,sBAAsB,gBAAgB,EAAE;;AAExC,gCAAgC,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE;AACrF,wCAAwC,iBAAiB,EAAE;AAC3D,gCAAgC,aAAa,EAAE;AAC/C,uCAAuC,kBAAkB,EAAE,gCAAgC,EAAE;AAC7F,+CAA+C,oBAAoB,EAAE,wBAAwB,EAAE;AAC/F,sCAAsC;;AAEtC,qBAAqB,eAAe,EAAE,iBAAiB,EAAE,WAAW,EAAE,uBAAuB,EAAE,eAAe,EAAE;AAChH,4BAA4B,gBAAgB,EAAE;AAC9C,0BAA0B,qBAAqB,EAAE,gBAAgB,EAAE;AACnE,4BAA4B,WAAW,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,6BAA6B,EAAE,eAAe,EAAE;AAChK,gCAAgC,cAAc,EAAE;AAChD,kCAAkC,wCAAqD,EAAE;AACzF,2BAA2B,8BAA8B,EAAE;AAC3D,kCAAkC,sCAAmD,EAAE,WAAW,EAAE;AACpG,wBAAwB,kCAAkC,EAAE;AAC5D,2BAA2B,eAAe,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,eAAe,EAAE,iDAA8D,EAAE,0BAA0B,EAAE;AAChM,iCAAiC,WAAW,EAAE,kBAAkB,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,EAAE,yDAAsE,EAAE,gBAAgB,EAAE,yBAAyB,GAAG;AACzP,4CAA4C,oBAAoB,EAAE;AAClE,qBAAqB,gBAAgB,EAAE;;AAEvC,qBAAqB,qBAAqB,EAAE,sBAAsB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,GAAG;AAC5L,2BAA2B,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,eAAe,EAAE;AAC5H,uCAAuC;AACvC,4BAA4B,aAAa,EAAE,kBAAkB,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE;AAC3I,kCAAkC,YAAY,EAAE;AAChD,kCAAkC,WAAW,EAAE,YAAY,EAAE,qBAAqB,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,yDAAsE,EAAE;AACxM,uCAAuC;AACvC,uCAAuC,wBAAwB,EAAE;AACjE,2BAA2B,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE;AAClE,2BAA2B,cAAc,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,cAAc,EAAE;AACxM,mCAAmC,cAAc,EAAE,iBAAiB,EAAE,gBAAgB,GAAG,cAAc,GAAG;AAC1G,0BAA0B,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE;AAC1E,0BAA0B,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe,EAAE,6BAA6B,EAAE;AACjM,gCAAgC,WAAW,EAAE,mBAAmB,GAAG;AACnE,mCAAmC,eAAe,EAAE,YAAY,EAAE;AAClE,mCAAmC;AACnC,yCAAyC;AACzC,mCAAmC,WAAW,EAAE,mBAAmB,EAAE;AACrE,yCAAyC,mBAAmB,EAAE;;AAE9D,iBAAiB,aAAa,EAAE,sBAAsB,EAAE,8BAA8B,EAAE,kCAAkC;AAC1H,sBAAsB,aAAa,EAAE,WAAW,EAAE,eAAe,EAAE;AACnE,wBAAwB,YAAY,EAAE;AACtC,6BAA6B,WAAW,EAAE;AAC1C,yEAAyE;AACzE,+BAA+B,iBAAiB,EAAE;AAClD,6BAA6B,eAAe,EAAE;AAC9C,wBAAwB,eAAe,EAAE,yBAAyB,EAAE;AACpE,oCAAoC,oBAAoB,EAAE,6BAA6B,EAAE,kBAAkB,EAAE,eAAe,EAAE,cAAc,EAAE,uBAAuB,EAAE,WAAW,EAAE,sBAAsB,EAAE;AAC5M,0CAA0C,aAAa,EAAE;AACzD,wBAAwB,WAAW,EAAE;;AAErC,4BAA4B,qBAAqB,EAAE,sBAAsB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,GAAG;AACnM,kCAAkC,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,uBAAuB,EAAE,yBAAyB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,eAAe,EAAE;AACnN,uCAAuC,0BAA0B,EAAE;AACnE,mCAAmC,aAAa,EAAE,kBAAkB,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE;AAC/I,yCAAyC,YAAY,EAAE;AACvD,yCAAyC,WAAW,EAAE,YAAY,EAAE,qBAAqB,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,yDAAsE,EAAE;AAC/M,8CAA8C;AAC9C,8CAA8C,wBAAwB,EAAE;AACxE,kCAAkC,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE;AACzE,kCAAkC,cAAc,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,cAAc,EAAE;AAC3M,0CAA0C,cAAc,EAAE,iBAAiB,EAAE,gBAAgB,GAAG,cAAc,GAAG;AACjH,iCAAiC,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE;AACjF,iCAAiC,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe,EAAE,6BAA6B,EAAE;AACxM,uCAAuC,WAAW,EAAE,mBAAmB,GAAG;AAC1E,0CAA0C,eAAe,EAAE,YAAY,EAAE;AACzE,0CAA0C;AAC1C,gDAAgD;AAChD,0CAA0C,WAAW,EAAE,mBAAmB,EAAE;AAC5E,gDAAgD,mBAAmB,EAAE;AACrE,eAAe,YAAY,EAAE;AAC7B,mBAAmB,qBAAqB,EAAE;AAC1C,mCAAmC,iBAAiB,EAAE;;;AAGtD,aAAa,cAAc,EAAE,aAAa,EAAE,iBAAiB,EAAE;AAC/D,kBAAkB,aAAa,EAAE,mBAAmB,EAAE;AACtD,sBAAsB,gBAAgB,EAAE;AACxC,yBAAyB,YAAY,EAAE;AACvC,2CAA2C,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;AAClH,8BAA8B,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EAAE;AACpF,kBAAkB,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE;;AAEtE,cAAc,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,YAAY,EAAE,WAAW,EAAE,uBAAuB,EAAE,6BAA6B,GAAG;AAC3J,cAAc,qBAAqB,EAAE,mBAAmB,EAAE,eAAe,EAAE;AAC3E,YAAY,mBAAmB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE;AAC9E,mBAAmB,+CAA4D,EAAE;;AAEjF,WAAW,uBAAuB,EAAE;AACpC,kBAAkB,wCAAqD,EAAE;;AAEzE,SAAS,qBAAqB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,eAAe,EAAE,sBAAsB,EAAE,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,kBAAkB,EAAE,WAAW,EAAE,eAAe,EAAE,qCAAqC,EAAE;AAC5Q,kBAAkB,gBAAgB,EAAE;AACpC,gBAAgB,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,6BAA6B,EAAE,SAAS,EAAE;AACrG,gBAAgB,cAAc,EAAE,eAAe,EAAE;AACjD,qBAAqB,yCAAsD,EAAE;AAC7E,aAAa,gBAAgB,EAAE;AAC/B,iBAAiB,mBAAmB,EAAE;AACtC,qBAAqB,wCAAqD,EAAE;AAC5E,gBAAgB,mBAAmB,GAAG;AACtC,uBAAuB,2CAAwD,EAAE;AACjF,oBAAoB;AACpB,oBAAoB,yCAAsD,EAAE;AAC5E,cAAc,gBAAgB,EAAE,cAAc,EAAE;AAChD,qBAAqB,yCAAsD,EAAE;AAC7E,cAAc,gBAAgB,EAAE,cAAc,EAAE;AAChD,qBAAqB,yCAAsD,EAAE;AAC7E,aAAa,gBAAgB,EAAE,cAAc,EAAE;AAC/C,uBAAuB,2CAAwD,EAAE;AACjF,uBAAuB,2CAAwD,EAAE;AACjF,qBAAqB,2CAAwD,EAAE;AAC/E,yBAAyB,yCAAsD,EAAE;AACjF,uBAAuB,2CAAwD,EAAE;AACjF,wBAAwB,8CAA2D,EAAE;AACrF,0BAA0B,0CAAuD,EAAE;;;;AAInF,oBAAoB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,EAAE,oBAAoB,EAAE;AACjH,4BAA4B,mBAAmB,EAAE;AACjD,2BAA2B,uBAAuB,EAAE,eAAe,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE;AACnI,+BAA+B,mBAAmB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,0BAA0B,EAAE;AAC5H,gCAAgC,qBAAqB,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,eAAe,EAAE;AACzH,kCAAkC,qBAAqB,EAAE,gBAAgB,EAAE,WAAW,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE;;;AAGlJ,cAAc,yBAAyB,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,oCAAoC,CAAC;AAC1I,2BAA2B,uBAAuB,EAAE,eAAe,EAAE,aAAa,EAAE;AACpF,0CAA0C,6BAA6B,EAAE;AACzE,uCAAuC,iBAAiB,EAAE;AAC1D,sCAAsC,oBAAoB,EAAE;AAC5D,kCAAkC,YAAY,EAAE,cAAc,EAAE;AAChE,iCAAiC,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE;AACtH,iCAAiC,WAAW,EAAE;AAC9C,mCAAmC,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,qBAAqB,EAAE;AACrI,yCAAyC,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE,sDAAmE,EAAE;AAC/L,qBAAqB,qBAAqB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE;AACxF,0BAA0B,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,iDAA8D,EAAE;AACjK,iCAAiC,gBAAgB,EAAE;AACnD,8BAA8B,0CAAuD;AACrF,6BAA6B,iBAAiB,EAAE;AAChD,oBAAoB,qDAAkE,EAAE,kBAAkB,EAAE,cAAc,EAAE;AAC5H,qBAAqB,sDAAmE,EAAE,kBAAkB,EAAE,cAAc,EAAE;AAC9H,uBAAuB,wDAAqE,EAAE,kBAAkB,EAAE,cAAc,EAAE;AAClI,mBAAmB,qDAAkE,EAAE,kBAAkB,EAAE,cAAc,EAAE;AAC3H,oBAAoB,sDAAmE,EAAE,kBAAkB,EAAE,cAAc,EAAE;;AAE7H,gBAAgB,aAAa,EAAE;AAC/B,wBAAwB,kBAAkB,EAAE,eAAe,EAAE;AAC7D,oCAAoC,6BAA6B,EAAE;AACnE,oCAAoC,iBAAiB,EAAE;AACvD,mCAAmC,oBAAoB,EAAE;AACzD,2BAA2B,sCAAsC;AACjE,gCAAgC,aAAa,EAAE;AAC/C,qCAAqC,oBAAoB,EAAE;AAC3D,oDAAoD,gBAAgB,EAAE;AACtE,2CAA2C,UAAU,EAAE;AACvD,wDAAwD,iBAAiB,EAAE;AAC3E,2DAA2D,gBAAgB,EAAE;AAC7E,+CAA+C,YAAY,EAAE;AAC7D,+CAA+C,UAAU,EAAE;;AAE3D,4BAA4B,UAAU,EAAE;AACxC,4BAA4B,YAAY,EAAE;AAC1C,4BAA4B,UAAU,EAAE;AACxC,4BAA4B,UAAU,EAAE;AACxC,4BAA4B,YAAY,EAAE;AAC1C,6BAA6B,YAAY,EAAE;AAC3C,4BAA4B,cAAc,EAAE,cAAc,EAAE;AAC5D,4BAA4B,cAAc,EAAE,cAAc,EAAE;AAC5D,6BAA6B,cAAc,EAAE,cAAc,EAAE;AAC7D,yBAAyB,WAAW,EAAE;AACtC,yBAAyB,WAAW,EAAE;AACtC,yBAAyB,WAAW,EAAE;AACtC,yBAAyB,WAAW,EAAE;AACtC,0BAA0B,YAAY,EAAE;AACxC,2BAA2B,WAAW,EAAE,YAAY,EAAE;AACtD,4BAA4B,WAAW,EAAE;AACzC,2BAA2B,cAAc,EAAE;AAC3C,0BAA0B,eAAe,EAAE,iBAAiB,EAAE,6BAA6B,EAAE,yBAAyB,EAAE,kBAAkB,EAAE;AAC5I,8BAA8B,gBAAgB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE;AAC5F;;iEAEiE;;AAEjE,uBAAuB,mBAAmB,EAAE,6BAA6B,EAAE,qBAAqB,EAAE,uBAAuB,EAAE;AAC3H,4BAA4B,aAAa,EAAE;AAC3C,iCAAiC,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE;AACtH,kCAAkC,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,GAAG;AACzH,8CAA8C;AAC9C,6CAA6C,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE,0DAAuE,EAAE;AACvM,8CAA8C;AAC9C,mDAAmD;AACnD,iCAAiC,aAAa,EAAE;;AAEhD,gCAAgC,aAAa,EAAE;AAC/C,oCAAoC,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,wBAAwB,EAAE;AAC3O,2CAA2C,cAAc,EAAE,eAAe,EAAE;AAC5E,mDAAmD,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE;AAC5K,mDAAmD,cAAc,EAAE;AACnE,wDAAwD,cAAc,EAAE;;AAExE,6BAA6B,aAAa,EAAE;AAC5C,iCAAiC,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,wBAAwB,EAAE,kBAAkB,EAAE;AAC3O,wCAAwC,cAAc,EAAE,eAAe,GAAG;AAC1E,gDAAgD,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAE;AAC7L,gDAAgD,cAAc,EAAE;;AAEhE,yBAAyB,iBAAiB,EAAE;AAC5C,0BAA0B,iBAAiB,EAAE;AAC7C,sCAAsC,cAAc,EAAE;;AAEtD;;;;;;;;;;;;;;;;;iEAiBiE;;AAEjE,2BAA2B,aAAa,EAAE;AAC1C,+BAA+B,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE,qBAAqB,EAAE;AAC/M,sCAAsC,cAAc,EAAE,eAAe,EAAE;AACvE,sCAAsC,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,iBAAiB,EAAE;AAC9L,8CAA8C,UAAU,EAAE;AAC1D,8CAA8C,cAAc,EAAE,iBAAiB,EAAE;AACjF,mDAAmD,cAAc,EAAE;;AAEnE,kCAAkC,aAAa,EAAE;AACjD,sCAAsC,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,EAAE;AACvO,6CAA6C,cAAc,EAAE,eAAe,EAAE;AAC9E,6CAA6C,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE,kBAAkB,EAAE;AAC3N,sDAAsD,UAAU,EAAE,mBAAmB,EAAE;AACvF,qDAAqD,cAAc,EAAE,iBAAiB,EAAE;AACxF,0DAA0D,cAAc,EAAE;;;;;;;AAO1E,YAAY,gBAAgB,EAAE;;AAE9B,MAAM,WAAW,EAAE,yBAAyB,EAAE,sCAAsC,EAAE,gBAAgB,EAAE;AACxG,SAAS,mBAAmB,EAAE,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,WAAW,EAAE,sBAAsB,EAAE,kBAAkB,EAAE;AAChJ,YAAY,mBAAmB,EAAE;AACjC,WAAW,8BAA8B,EAAE;AAC3C,cAAc,8BAA8B,EAAE;AAC9C,kBAAkB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;;AAE/I,+CAA+C,cAAc,EAAE;AAC/D,0CAA0C,cAAc,EAAE;AAC1D,sCAAsC,cAAc,EAAE,UAAU,EAAE;AAClE,qCAAqC,cAAc,EAAE,UAAU,EAAE;;AAEjE,YAAY,aAAa,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,YAAY,EAAE,sBAAsB,EAAE,mBAAmB,EAAE;AACpI,WAAW,WAAW,EAAE,YAAY,EAAE,6BAA6B,EAAE,mBAAmB,EAAE;AAC1F,eAAe,8CAA2D,EAAE;AAC5E,gBAAgB,+CAA4D,EAAE;AAC9E,eAAe,8CAA2D,EAAE;AAC5E,gBAAgB,+CAA4D,EAAE;AAC9E,SAAS,uBAAuB,EAAE,kBAAkB,EAAE;AACtD,SAAS,kBAAkB,EAAE;AAC7B,SAAS,mBAAmB,EAAE;AAC9B,YAAY,YAAY,EAAE,gBAAgB,EAAE;AAC5C,WAAW,WAAW,EAAE;AACxB,4BAA4B,eAAe,EAAE,gBAAgB,EAAE;AAC/D,cAAc,gCAAgC,EAAE,gBAAgB,EAAE;AAClE,iBAAiB,mBAAmB,EAAE;AACtC,0BAA0B,8BAA8B,EAAE;AAC1D,yBAAyB,+BAA+B,EAAE;AAC1D,gBAAgB,8BAA8B,EAAE;AAChD,qBAAqB,aAAa,EAAE;AACpC,kCAAkC,YAAY,EAAE,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE;AACpG,sBAAsB,WAAW,EAAE,YAAY,EAAE,yDAAsE,EAAE,eAAe,EAAE,mBAAmB,EAAE;;;;;;AAM/J,aAAa,qBAAqB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE;AAC3E,0BAA0B,gBAAgB,EAAE;AAC5C,kBAAkB,aAAa,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,6BAA6B,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,sBAAsB,EAAE,eAAe,EAAE;AAC3P,sBAAsB,YAAY,EAAE;AACpC,6BAA6B,qBAAqB,EAAE;AACpD,sCAAsC,aAAa,EAAE;;AAErD,UAAU,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,EAAE,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,eAAe,EAAE,gBAAgB,EAAE;AAC7Q,eAAe,aAAa,EAAE;AAC9B,cAAc,gBAAgB,EAAE;;AAEhC,wBAAwB,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE;;AAE/F,aAAa,mBAAmB,GAAG;AACnC,iBAAiB,aAAa,EAAE,6BAA6B,EAAE,eAAe,EAAE,YAAY,EAAE;AAC9F,4BAA4B,gCAAgC,EAAE;AAC9D,kCAAkC,cAAc,EAAE,iBAAiB,EAAE,YAAY,EAAE;AACnF,+BAA+B,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,yDAAsE,EAAE;;AAEnJ,gBAAgB,qBAAqB,EAAE,WAAW,EAAE,4BAA4B,EAAE,eAAe,EAAE,8DAA2E,EAAE;AAChL,gBAAgB,qBAAqB,EAAE,WAAW,EAAE,4BAA4B,EAAE,eAAe,EAAE,8DAA2E,EAAE;AAChL,qBAAqB,qBAAqB,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,eAAe,EAAE,oBAAoB,EAAE;AACrK,4BAA4B,oDAAiE,EAAE;;AAE/F,0BAA0B,gBAAgB,EAAE;AAC5C,wCAAwC,gBAAgB,EAAE;;AAE1D,2BAA2B,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE;AACxG,iCAAiC,WAAW,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE;AAC3H,8BAA8B,eAAe,EAAE,iBAAiB,EAAE;AAClE,kCAAkC,cAAc,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,qBAAqB,EAAE;AACnI,8BAA8B,gBAAgB,EAAE,iBAAiB,EAAE;;AAEnE,0BAA0B,gBAAgB,EAAE;AAC5C,8BAA8B,gBAAgB,EAAE;;AAEhD,YAAY,yBAAyB,EAAE,WAAW,EAAE;AACpD,eAAe,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,yBAAyB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,wBAAwB,EAAE,SAAS,EAAE;AAC1N,mBAAmB,mBAAmB,EAAE;AACxC,iBAAiB,iBAAiB,EAAE;AACpC,gBAAgB,WAAW,EAAE;AAC7B,gBAAgB,YAAY,EAAE;AAC9B,gBAAgB,iBAAiB,EAAE,cAAc,EAAE;AACnD,qBAAqB,iBAAiB,EAAE;AACxC,0BAA0B,gBAAgB,EAAE;AAC5C,eAAe,gCAAgC,EAAE,wBAAwB,EAAE;AAC3E,mBAAmB,mBAAmB,EAAE;AACxC,0BAA0B,gBAAgB,EAAE;AAC5C,iBAAiB,WAAW,EAAE,YAAY,EAAE,qBAAqB,EAAE,yDAAsE,EAAE,eAAe,EAAE;;;;;;AAM5J,cAAc,sBAAsB,EAAE;AACtC,0BAA0B;AAC1B,qBAAqB,sCAAsC,EAAE,6BAA6B,EAAE;AAC5F,oCAAoC,8BAA8B,EAAE;AACpE,oCAAoC,8BAA8B,EAAE;AACpE,mCAAmC,+BAA+B,EAAE;AACpE,sCAAsC,gCAAgC,EAAE;;AAExE,iBAAiB,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,eAAe,EAAE;AACzJ,2BAA2B,iDAA8D,EAAE,0BAA0B,EAAE,qBAAqB,EAAE,uBAAuB,GAAG;;AAExK,aAAa,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,6BAA6B,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,EAAE,kBAAkB,EAAE;AAC3L,kBAAkB,yCAAsD,EAAE;AAC1E,oBAAoB,2CAAwD,EAAE;AAC9E,sBAAsB,6CAA0D,EAAE;AAClF,iBAAiB,iBAAiB,EAAE,qBAAqB,EAAE,YAAY,EAAE;AACzE,iBAAiB,iBAAiB,EAAE,qBAAqB,EAAE,YAAY,EAAE;AACzE,iBAAiB,6CAA0D,EAAE;;;AAG7E,0BAA0B;AAC1B,yBAAyB,WAAW,EAAE,YAAY,GAAG,qBAAqB,EAAE,mBAAmB,EAAE;AACjG,gCAAgC,+DAA4E,GAAG;AAC/G,iCAAiC,gEAA6E,EAAE;AAChH,mBAAmB,8BAA8B,EAAE;;;AAGnD,eAAe;AACf,YAAY,sBAAsB,EAAE;AACpC,eAAe,qBAAqB,EAAE,YAAY,EAAE,mBAAmB,EAAE;AACzE,kBAAkB,gBAAgB,EAAE,yBAAyB,EAAE;AAC/D,uBAAuB,aAAa,EAAE,gCAAgC,EAAE;AACxE,0BAA0B,uBAAuB,EAAE;AACnD,iCAAiC,cAAc,EAAE;AACjD,wCAAwC,YAAY,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,WAAW,EAAE,iBAAiB,EAAE,kBAAkB,EAAE;AACjR,gCAAgC,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EAAE;AACtF,mCAAmC,8BAA8B,EAAE;AACnE,wBAAwB,uBAAuB,EAAE,mBAAmB,EAAE,aAAa,GAAG;AACtF,gBAAgB,YAAY,EAAE,cAAc,EAAE,yBAAyB,EAAE,kBAAkB,EAAE;AAC7F,oBAAoB,yBAAyB,EAAE,kBAAkB,EAAE,YAAY,EAAE;AACjF,uBAAuB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE;AACnG,4BAA4B,cAAc,EAAE;AAC5C,0BAA0B,aAAa,EAAE,mBAAmB,EAAE;AAC9D,+BAA+B,gBAAgB,EAAE,yBAAyB,EAAE,kBAAkB,EAAE;AAChG,gCAAgC,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE,WAAW,EAAE,kBAAkB,EAAE,cAAc,EAAE;AACxJ,+BAA+B,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,kBAAkB,EAAE;AACvG,mCAAmC,cAAc,EAAE;AACnD,0CAA0C,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE,yDAAsE,GAAG;AACxN,iCAAiC,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE;AACxG,uCAAuC,cAAc,EAAE;AACvD,mBAAmB,YAAY,EAAE,cAAc,EAAE;AACjD,wBAAwB,uBAAuB,EAAE,mBAAmB,EAAE,WAAW,EAAE;AACnF,4BAA4B,uBAAuB,EAAE,gCAAgC,EAAE;AACvF,kCAAkC,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE;AACtF,8BAA8B,eAAe,EAAE,iBAAiB,EAAE;AAClE,mCAAmC,iBAAiB,EAAE;AACtD,8BAA8B,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EAAE;AACpF,yBAAyB,uBAAuB,EAAE,aAAa,EAAE;AACjE,sBAAsB,sBAAsB,EAAE,aAAa,EAAE;AAC7D,0BAA0B,UAAU,EAAE;AACtC,6BAA6B,cAAc,EAAE;AAC7C,6BAA6B,cAAc,EAAE,eAAe,EAAE;AAC9D,kCAAkC,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,yCAAsD,EAAE,qBAAqB,EAAE;AACnK,yCAAyC,gBAAgB,EAAE;AAC3D,sCAAsC,yCAAsD,GAAG;AAC/F,mCAAmC,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,eAAe,EAAE;AAC3G,kCAAkC,eAAe,EAAE;AACnD,uCAAuC,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,gCAAgC,EAAE,qBAAqB,EAAE,mBAAmB,EAAE;AACjM,8CAA8C,iBAAiB,EAAE;AACjE,2CAA2C,cAAc,EAAE,0CAAuD,EAAE;AACpH,4CAA4C,cAAc,EAAE,2CAAwD,EAAE;AACtH,4BAA4B,YAAY,EAAE;AAC1C,8BAA8B,cAAc,EAAE;AAC9C,+BAA+B,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,kBAAkB,EAAE,iBAAiB,EAAE;AAC3H,mCAAmC,cAAc,EAAE,mBAAmB,EAAE,0DAAuE,EAAE;AACjJ,8BAA8B,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,6CAA0D,EAAE,kBAAkB,EAAE;AAC1J,mCAAmC,kBAAkB,EAAE,SAAS,EAAE,WAAW,EAAE,mBAAmB,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE;AAC1O,yCAAyC,aAAa,EAAE;AACxD,gCAAgC,WAAW,EAAE,YAAY,EAAE,+CAA4D,EAAE,gBAAgB,EAAE;AAC3I,gCAAgC,WAAW,EAAE,YAAY,EAAE,8CAA2D,EAAE,gBAAgB,EAAE;AAC1I,oBAAoB,aAAa,EAAE;AACnC,0BAA0B,UAAU,EAAE,iBAAiB,EAAE;AACzD,sCAAsC,cAAc,EAAE;AACtD,4BAA4B;AAC5B,kCAAkC;AAClC,mCAAmC,gBAAgB,EAAE;AACrD,4BAA4B,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,kBAAkB,EAAE;AACpG,0BAA0B,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;;AAEjF,+BAA+B;AAC/B,qCAAqC;AACrC,sCAAsC,gBAAgB,EAAE;AACxD,+BAA+B,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,0DAAuE,EAAE;AACrL,qCAAqC,yDAAsE,EAAE;AAC7G,6BAA6B,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE;AACjF,kCAAkC,cAAc,EAAE,iBAAiB,EAAE;;AAErE,oBAAoB,qBAAqB,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE;AACzJ,yBAAyB,qBAAqB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,oCAAoC,EAAE,eAAe,EAAE;AACpJ,gCAAgC,gBAAgB,EAAE;AAClD,6BAA6B,cAAc,EAAE,gBAAgB,EAAE,4BAA4B,EAAE;;;AAG7F,SAAS,WAAW,EAAE,mBAAmB,EAAE;AAC3C,aAAa,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,+DAA4E,EAAE,eAAe,EAAE,iBAAiB,EAAE;AACjL,kBAAkB,yBAAyB,EAAE;AAC7C,gBAAgB,kBAAkB,EAAE;AACpC,yBAAyB,kBAAkB,EAAE,WAAW,EAAE,SAAS,EAAE;AACrE,6BAA6B,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,YAAY,EAAE;AAC5F,yCAAyC,cAAc,EAAE,gBAAgB,EAAE;AAC3E,sCAAsC;AACtC,wCAAwC;AACxC,qCAAqC;;;AAGrC,eAAe;AACf,eAAe,aAAa,EAAE;AAC9B,mBAAmB,cAAc,EAAE;;;AAGnC,eAAe,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE;AACzF,YAAY,eAAe,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,iCAAiC,EAAE,YAAY,EAAE;AACpH,SAAS,kBAAkB,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,+CAA+C,EAAE;AAC5H,cAAc,YAAY,EAAE,aAAa,EAAE,sBAAsB,EAAE,kBAAkB,EAAE;AACvF,eAAe,gBAAgB,EAAE,cAAc,EAAE,uBAAuB,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE;AAChI,gCAAgC,kBAAkB,EAAE,iBAAiB,EAAE;AACvE,iBAAiB,YAAY,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE;AACvI,mCAAmC;AACnC,eAAe,kBAAkB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,wDAAqE,EAAE,eAAe,EAAE;AAC9K,uBAAuB,gBAAgB,EAAE,kBAAkB,EAAE,aAAa,EAAE;AAC5E,gBAAgB,mBAAmB,EAAE,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,eAAe,EAAE;AACjJ,eAAe,kBAAkB,EAAE,QAAQ,EAAE,SAAS,EAAE,yBAAyB,EAAE,uBAAuB,EAAE;AAC5G,oBAAoB,8BAA8B,EAAE,2BAA2B,EAAE,WAAW,EAAE,wBAAwB,EAAE;AACxH,qBAAqB,8BAA8B,EAAE,0BAA0B,EAAE,YAAY,EAAE,wBAAwB,EAAE;AACzH,kBAAkB,8BAA8B,EAAE,4BAA4B,EAAE,UAAU,EAAE,mBAAmB,EAAE;AACjH,oBAAoB,8BAA8B,EAAE,yBAAyB,EAAE,aAAa,EAAE,mBAAmB,EAAE;;AAEnH,6BAA6B;AAC7B,qBAAqB,mBAAmB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE;AAC3F,gCAAgC,mBAAmB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE;;AAEvG,+BAA+B,yBAAyB,EAAE;;;;;;;;;;;AAW1D,2BAA2B,SAAS,EAAE,UAAU,EAAE;AAClD,0BAA0B,aAAa,EAAE;;;AAGzC,eAAe,SAAS,EAAE,oBAAoB,EAAE;AAChD,sBAAsB,gBAAgB,EAAE,yBAAyB,EAAE,4CAA4C,EAAE,kBAAkB,EAAE,mBAAmB,EAAE;AAC1J,4DAA4D,gBAAgB,EAAE;AAC9E,6BAA6B,sBAAsB,EAAE,eAAe,EAAE,iBAAiB,EAAE,oBAAoB,GAAG;AAChH,qCAAqC,qBAAqB,EAAE,WAAW,EAAE;AACzE,oCAAoC,qBAAqB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;AACtG,0CAA0C,gBAAgB,EAAE,6BAA6B,EAAE,oBAAoB,EAAE,oBAAoB,EAAE;;AAEvI,qBAAqB;AACrB,aAAa,YAAY,EAAE;AAC3B,sBAAsB,gBAAgB,EAAE,iBAAiB,EAAE;AAC3D,qBAAqB;AACrB,4BAA4B,gBAAgB,EAAE;AAC9C,8CAA8C,gBAAgB,EAAE;AAChE,oBAAoB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,GAAG,mBAAmB,EAAE;AACjG,0BAA0B,gBAAgB,EAAE,yBAAyB,EAAE,4CAA4C,EAAE,kBAAkB,EAAE,CAAC,aAAa,6BAA6B,EAAE,uBAAuB,EAAE;AAC/M,kBAAkB,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,EAAE;AAC9G,8BAA8B,aAAa,EAAE;AAC7C,yCAAyC,qBAAqB,EAAE;AAChE,oCAAoC,aAAa,EAAE;AACnD,kCAAkC,YAAY,EAAE;AAChD,wCAAwC,aAAa,EAAE,SAAS,EAAE;AAClE,kDAAkD,aAAa,EAAE,SAAS,GAAG;;AAE7E,+BAA+B,UAAU,CAAC;AAC1C,+BAA+B,UAAU,CAAC;AAC1C,oBAAoB;AACpB,gBAAgB,mBAAmB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,WAAW,EAAE;AACtL,cAAc,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,cAAc,EAAE,kBAAkB,EAAE;AACjH,mBAAmB,eAAe,EAAE,iBAAiB,GAAG,WAAW,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,qBAAqB,EAAE;;AAEzI,0BAA0B,qBAAqB,EAAE,sBAAsB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAE,sBAAsB,EAAE;AACxN,gCAAgC,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,qBAAqB,EAAE;AAC7H,uCAAuC,WAAW,EAAE,cAAc,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,kCAAkC,EAAE;AAClK,gCAAgC,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,4BAA4B,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,eAAe,EAAE,kBAAkB,EAAE;AAClP,qCAAqC,0BAA0B,EAAE;AACjE,iCAAiC,aAAa,EAAE,kBAAkB,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE;AAC7I,uCAAuC,YAAY,EAAE;AACrD,uCAAuC,WAAW,GAAG,YAAY,EAAE,qBAAqB,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,yDAAsE,EAAE;AAC9M,4CAA4C;AAC5C,4CAA4C,yBAAyB,EAAE;AACvE,gCAAgC,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE;AACvE,gCAAgC,cAAc,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,EAAE,sCAAsC,EAAE,cAAc,EAAE;AACzM,wCAAwC,cAAc,EAAE,iBAAiB,EAAE,gBAAgB,GAAG,cAAc,GAAG;AAC/G,+BAA+B,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE;AAC/E,+BAA+B,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe,EAAE,6BAA6B,EAAE;AACtM,qCAAqC,WAAW,EAAE,mBAAmB,GAAG;AACxE,wCAAwC,eAAe,EAAE,YAAY,EAAE;AACvE,wCAAwC;AACxC,8CAA8C;AAC9C,wCAAwC,WAAW,EAAE,mBAAmB,EAAE;AAC1E,8CAA8C,mBAAmB,EAAE;;AAEnE,2CAA2C;AAC3C,iDAAiD;AACjD,gDAAgD,gBAAgB,EAAE;;AAElE,sCAAsC,aAAa,EAAE;AACrD,2DAA2D,aAAa,EAAE;AAC1E,kDAAkD,eAAe,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,cAAc,EAAE,gBAAgB,EAAE,kBAAkB,EAAE;AAClK,uEAAuE,aAAa,EAAE,iBAAiB,EAAE;;AAEzG,wCAAwC;AACxC,8CAA8C;AAC9C,6CAA6C,gBAAgB,EAAE;;AAE/D,mCAAmC,aAAa,EAAE;AAClD,qDAAqD,aAAa,EAAE;AACpE,+CAA+C,eAAe,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,cAAc,EAAE,gBAAgB,EAAE,kBAAkB,EAAE;AAC/J,iEAAiE,aAAa,EAAE,iBAAiB,EAAE;;AAEnG,yBAAyB,aAAa,EAAE;AACxC,iCAAiC,aAAa,EAAE;AAChD,qCAAqC,cAAc,EAAE,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,wBAAwB,EAAE;AAC3O,2CAA2C,cAAc,EAAE,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE;AACxH,oDAAoD,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE;AAC7K,mDAAmD,cAAc,EAAE;AACnE,wDAAwD,cAAc,EAAE;;AAExE,sBAAsB,aAAa,EAAE;AACrC,8BAA8B,aAAa,EAAE;AAC7C,kCAAkC,cAAc,EAAE,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,wBAAwB,EAAE,kBAAkB,EAAE;AAC5P,wCAAwC,cAAc,EAAE,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE;AACrH,iDAAiD,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAE;AAC9L,gDAAgD,cAAc,EAAE;;AAEhE,wCAAwC,aAAa,EAAE;AACvD,4CAA4C,eAAe,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,EAAE;AAC7O,mDAAmD,cAAc,EAAE,eAAe,EAAE;AACpF,mDAAmD,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE,kBAAkB,EAAE;AACjO,4DAA4D,UAAU,EAAE,mBAAmB,EAAE;AAC7F,2DAA2D,cAAc,EAAE,iBAAiB,EAAE;AAC9F,gEAAgE,cAAc,EAAE;;AAEhF,eAAe;AACf,wBAAwB,eAAe,EAAE,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,cAAc,EAAE;AAC9J,gBAAgB,aAAa,EAAE;AAC/B,oBAAoB,sBAAsB,EAAE,yBAAyB,EAAE,WAAW,EAAE,YAAY,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,eAAe,EAAE;AAC1N,wBAAwB,aAAa,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,kCAAkC,EAAE,yBAAyB,EAAE;AACrJ;8BAC8B,cAAc,EAAE,WAAW,EAAE,kBAAkB,EAAE,UAAU,GAAG,UAAU,EAAE,iBAAiB,EAAE,eAAe,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,EAAE;AAC7L,+BAA+B,sBAAsB,EAAE,mBAAmB,EAAE,cAAc,EAAE;AAC5F,8BAA8B,uBAAuB,EAAE,kBAAkB,GAAG,cAAc,GAAG;AAC7F,2BAA2B,mBAAmB,EAAE,cAAc,EAAE,WAAW,EAAE,wBAAwB,EAAE,SAAS,EAAE,oBAAoB,EAAE,YAAY,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,WAAW,GAAG,+BAA+B,EAAE;;AAExP;oCACoC,aAAa,EAAE;AACnD,qCAAqC,cAAc,EAAE,uBAAuB,EAAE;;AAE9E,sCAAsC,qBAAqB,EAAE,gBAAgB,EAAE;AAC/E,wCAAwC,cAAc,EAAE;AACxD,2CAA2C,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE;AAC9G,wCAAwC,cAAc,EAAE;AACxD,oDAAoD,sBAAsB,EAAE;;AAE5E,WAAW,aAAa,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,eAAe,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE;AAC7M,kBAAkB,kBAAkB,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,8BAA8B,EAAE,WAAW,EAAE,YAAY,EAAE,gEAA6E,EAAE,eAAe,EAAE;AACjO,wBAAwB,kBAAkB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,8BAA8B,EAAE,WAAW,EAAE,oEAAiF,EAAE,eAAe,EAAE;AAC1N,oBAAoB,wBAAwB;AAC5C,gCAAgC;AAChC,iBAAiB,aAAa,EAAE;;AAEhC,sBAAsB,eAAe,EAAE,iBAAiB,EAAE,cAAc,EAAE,qBAAqB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE;;AAEnJ,kBAAkB;AAClB,+BAA+B,aAAa,EAAE,gCAAgC,EAAE;AAChF,6BAA6B,mBAAmB,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,cAAc,EAAE,uBAAuB,EAAE,eAAe,EAAE,mBAAmB,EAAE;AAC/K,0CAA0C,8BAA8B,EAAE;AAC1E,mCAAmC,+BAA+B,EAAE;AACpE,iCAAiC,mBAAmB,EAAE,gCAAgC,EAAE;AACxF,6BAA6B,gBAAgB,EAAE;AAC/C,2BAA2B,aAAa,EAAE;AAC1C,+BAA+B,cAAc,EAAE;;AAE/C,gBAAgB,cAAc,EAAE,aAAa,EAAE,SAAS,EAAE,mBAAmB,EAAE,eAAe,EAAE,cAAc,EAAE,iBAAiB,EAAE;AACnI,4BAA4B,cAAc,EAAE;AAC5C,kBAAkB,cAAc,EAAE,qBAAqB,EAAE;;AAEzD,4CAA4C;;;AAG5C;;;;;;;;;2LAS2L;;AAE3L,eAAe,aAAa,EAAE,sBAAsB,EAAE,cAAc,EAAE;;AAEtE,UAAU,wBAAwB,EAAE;AACpC,SAAS,wBAAwB,EAAE,oBAAoB,EAAE,eAAe,EAAE;;AAE1E,gCAAgC,kBAAkB,EAAE;AACpD,uBAAuB,YAAY,EAAE,kBAAkB,EAAE,YAAY,EAAE;AACvE,wBAAwB,YAAY,EAAE,kBAAkB,EAAE,YAAY,EAAE;;AAExE;EACE,iBAAiB;EACjB,oBAAoB;EACpB,iBAAiB;AACnB;;;AAGA,qBAAqB;AACrB,UAAU,mBAAmB,EAAE;;AAE/B;EACE,eAAe,EAAE,iBAAiB;EAClC;IACE,eAAe;EACjB;AACF;;;;AAIA,oBAAoB,yBAAyB,CAAC;AAC9C,sCAAsC,aAAa,EAAE,YAAY,EAAE,sBAAsB,EAAE,cAAc,EAAE;AAC3G,wBAAwB,mBAAmB,GAAG,WAAW,GAAG,mBAAmB,EAAE,8BAA8B,EAAE,UAAU,EAAE,gBAAgB,EAAE,YAAY,GAAG;AAC9J,sCAAsC,mBAAmB,GAAG;AAC5D,8CAA8C,mBAAmB,EAAE,YAAY,EAAE;AACjF,mCAAmC,iBAAiB,EAAE;AACtD,wBAAwB,gBAAgB,EAAE,mBAAmB,EAAE,8BAA8B,EAAE,gCAAgC,EAAE,UAAU,EAAE,sBAAsB,EAAE,YAAY,GAAG;AACpL,kCAAkC,+BAA+B,EAAE;AACnE,0CAA0C,mBAAmB,GAAG;AAChE,+BAA+B,aAAa,EAAE,mBAAmB,EAAE,WAAW,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,YAAY,KAAK;AACtL,sCAAsC,aAAa,EAAE,cAAc,EAAE;AACrE,qCAAqC,aAAa,EAAE,sBAAsB,EAAE,YAAY,IAAI;AAC5F,oCAAoC,gBAAgB,EAAE,gCAAgC,GAAG,YAAY,EAAE,aAAa,EAAE,mBAAmB,EAAE,uBAAuB,GAAG;AACrK,oCAAoC,aAAa,EAAE,mBAAmB,EAAE,YAAY,EAAE,mBAAmB,GAAG,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;AACjJ,2CAA2C,eAAe,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,aAAa,GAAG,YAAY,EAAE,mBAAmB,EAAE;;AAE3J;EACE,cAAc,EAAE,yBAAyB,EAAE,iBAAiB;EAC5D,sCAAsC;EACtC;8CAC4C;AAC9C;AACA;;EAEE,gBAAgB;EAChB,wBAAwB;EACxB,eAAe;EACf,yBAAyB;EACzB,yCAAyC;;EAEzC;;;;+BAI6B;AAC/B;AACA,oBAAoB,QAAQ,EAAE,aAAa,EAAE;;AAE7C,uBAAuB,WAAW,EAAE;AACpC,6BAA6B,eAAe,CAAC;;;;AAI7C,uDAAuD;AACvD,2EAA2E;AAC3E,4EAA4E;AAC5E,0EAA0E;AAC1E,sGAAsG;AACtG,oHAAoH;AACpH,4FAA4F;AAC5F,sDAAsD;AACtD,2GAA2G;AAC3G,mFAAmF;AACnF,iBAAiB,mBAAmB,GAAG,mBAAmB,GAAG,UAAU,EAAE,gBAAgB,EAAE,YAAY,EAAE,2EAA2E;AACpL,6BAA6B,iBAAiB,EAAE;AAChD,kBAAkB,mBAAmB,EAAE,kCAAkC,EAAE,UAAU,EAAE,sBAAsB,EAAE,YAAY,GAAG;AAC9H,4BAA4B,+BAA+B,EAAE;AAC7D,2CAA2C,6BAA6B,GAAG;AAC3E,yBAAyB,aAAa,EAAE,mBAAmB,EAAE,WAAW,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,YAAY,KAAK;AAChL,gCAAgC,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE;AAC7E,+BAA+B,aAAa,EAAE,sBAAsB,EAAE,YAAY,IAAI;AACtF,8BAA8B,YAAY,EAAE,gBAAgB,EAAE,4EAA4E,GAAG,YAAY,EAAE,aAAa,EAAE,mBAAmB,EAAE,uBAAuB,GAAG;AACzN,8BAA8B,aAAa,EAAE,mBAAmB,EAAE,YAAY,EAAE,mBAAmB,GAAG,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;AAC3I,qCAAqC,eAAe,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,aAAa,GAAG,YAAY,EAAE,mBAAmB,EAAE;AACrJ,gCAAgC,mBAAmB,EAAE;AACrD,wCAAwC,YAAY,EAAE,eAAe,EAAE;;AAEvE,kBAAkB,SAAS,EAAE,uBAAuB,EAAE;AACtD,kBAAkB,SAAS,EAAE,uBAAuB,EAAE;AACtD,kBAAkB,SAAS,EAAE,uBAAuB,EAAE;AACtD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,mBAAmB,UAAU,EAAE,uBAAuB,EAAE;AACxD,uBAAuB,uBAAuB,EAAE;;AAEhD,uBAAuB,kBAAkB,EAAE,uBAAuB,GAAG;AACrE,qBAAqB,gBAAgB,EAAE,qBAAqB,GAAG;AAC/D,sBAAsB,iBAAiB,EAAE,sBAAsB,GAAG;AAClE,oBAAoB,iBAAiB,EAAE;AACvC,oBAAoB,cAAc,EAAE;AACpC,uBAAuB,yBAAyB,EAAE,WAAW,EAAE;AAC/D,mBAAmB,cAAc,EAAE;AACnC,sBAAsB,yBAAyB,EAAE,WAAW,EAAE;AAC9D,qBAAqB,cAAc,EAAE;AACrC,wBAAwB,yBAAyB,EAAE,WAAW,EAAE;;AAEhE;EACE,kBAAkB;AACpB;AACA,iDAAiD,WAAW,EAAE,iBAAiB,EAAE;AACjF,wBAAwB,uBAAuB,EAAE;AACjD,4BAA4B,WAAW,EAAE,YAAY,EAAE,uDAAoE,EAAE,eAAe,EAAE,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE;;AAElL,mBAAmB,mBAAmB,EAAE;AACxC,wBAAwB,qBAAqB,EAAE,mBAAmB,EAAE,UAAU,EAAE,YAAY,EAAE,mBAAmB,EAAE;AACnH,4BAA4B,mBAAmB,GAAG;;AAElD,yBAAyB,mBAAmB,EAAE,aAAa,EAAE,mBAAmB,EAAE,QAAQ,EAAE;;AAE5F,oBAAoB,qBAAqB,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE;AACvF,4BAA4B,gBAAgB,EAAE;AAC9C,wBAAwB,wDAAqE,EAAE;AAC/F,yBAAyB,yDAAsE,EAAE;AACjG,yBAAyB,yDAAsE,EAAE;AACjG,wBAAwB,wDAAqE,EAAE;AAC/F,sBAAsB,wBAAwB,CAAC;;AAE/C,kBAAkB,cAAc,EAAE;;;AAGlC,mBAAmB;AACnB,yBAAyB,aAAa,EAAE;AACxC,gCAAgC,WAAW,EAAE,WAAW,EAAE,uDAAoE,EAAE,iBAAiB,EAAE,gBAAgB,EAAE;AACrK,wCAAwC;AACxC,+BAA+B,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,yBAAyB;CACpI;EACC,yBAAyB;AAC3B,EAAE;AACF;8FAC8F;;;AAG9F,mBAAmB;;AAEnB;EACE,2DAAwE;AAC1E;;AAEA;EACE,+DAA4E;AAC9E;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,qBAAqB;EACrB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,6BAA6B;EAC7B,yBAAyB;AAC3B;;AAEA;EACE,2BAA2B;EAC3B,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,OAAO;EACP,sBAAsB;AACxB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;EACZ,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;EACX;IACE,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,6CAA0D;IAC1D,4BAA4B;IAC5B,WAAW;IACX,YAAY;EACd;AACF;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,cAAc;EACd,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,WAAW;EACX,sBAAsB;EACtB,qBAAqB;AACvB;;;;AAIA;EACE,uBAAuB;EACvB,mBAAmB,GAAG,+BAA+B;EACrD,UAAU,YAAY,kCAAkC;EACxD,iBAAiB,CAAC,8BAA8B;EAChD,wBAAwB;EACxB,sFAAsF;AACxF;;AAEA;EACE,mBAAmB;EACnB,kBAAkB,IAAI,gCAAgC;EACtD,UAAU,YAAY,kBAAkB;EACxC,aAAa,UAAU,uBAAuB;EAC9C,6BAA6B,EAAE,wBAAwB;EACvD,sFAAsF;AACxF;;;AAGA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,gCAAgC;EAChC,cAAc;EACd,cAAc;EACd;IACE,WAAW;EACb;AACF;;;AAGA;;EAEE,eAAe;EACf,+BAA+B;AACjC;;AAEA;;;;GAIG;;AAEH;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb;IACE,+BAA+B;IAC/B,kBAAkB;IAClB;MACE,aAAa;MACb,eAAe;MACf,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,kBAAkB;IACpB;IACA;MACE,eAAe;MACf,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,cAAc;IAChB;EACF;AACF;AACA;EACE,kBAAkB;EAClB,eAAe;EACf,oDAAiE;EACjE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,kBAAkB;EAClB,8DAA2E;EAC3E,4BAA4B;EAC5B,2BAA2B;EAC3B,yBAAyB;EACzB,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,eAAe;EACf,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,UAAU;EACV,qBAAqB;EACrB,6CAA0D;EAC1D,4BAA4B;EAC5B,2BAA2B;EAC3B,yBAAyB;EACzB,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,eAAe;EACf,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,UAAU;EACV,SAAS;EACT,kCAA+C;EAC/C,4BAA4B;EAC5B,2BAA2B;EAC3B,yBAAyB;EACzB,eAAe;AACjB;;;;;AC9tCA,UAAU;AACV;EACE,qDAAqD;EACrD,yCAAyC;EACzC,kCAAkC;;EAElC,2CAA2C;EAC3C,oCAAoC;;EAEpC,wCAAwC;EACxC,4CAA4C;EAC5C,qCAAqC;AACvC;;AAEA,eAAe;AACf,oBAAoB;AACpB;EACE,kBAAkB;EAClB,QAAQ;EACR,UAAU;EACV,eAAe;AACjB;AACA;EACE,6BAA6B;EAC7B,yBAAyB;AAC3B;;AAEA,eAAe;AACf;gDACgD,qBAAqB;EACnE,iCAAiC;EACjC,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB;IACE,6BAA6B;IAC7B,kBAAkB;IAClB,eAAe,EAAE,SAAS;IAC1B,sBAAsB;IACtB,YAAY;EACd;AACF;AACA,oCAAoC,iBAAiB,CAAC;AACtD;EACE,eAAe;EACf,iBAAiB;EACjB,cAAc;EACd;IACE,kDAAkD;IAClD,iBAAiB;IACjB,kBAAkB;IAClB,eAAe,EAAE,SAAS;IAC1B,sBAAsB;IACtB,YAAY;EACd;AACF;AACA,+BAA+B;AAC/B;EACE,iDAA8D;EAC9D,WAAW,EAAE,YAAY;EACzB,2BAA2B;EAC3B,KAAK,aAAa,CAAC;AACrB;AACA;EACE,qBAAqB;AACvB;;AAEA,eAAe;AACf;EACE,gBAAgB;EAChB,gBAAgB;EAChB,mBAAmB;EACnB;IACE,aAAa;EACf;AACF;;AAEA,iBAAiB;AACjB;;;;EAIE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,UAAU;EACV,qCAAqC;AACvC;AACA;EACE,WAAW,EAAE,YAAY;EACzB,yBAAyB;EACzB,mBAAmB;EACnB,cAAc;EACd,UAAU;EACV,sBAAsB;EACtB,aAAa;EACb,uBAAuB;EACvB,SAAS;EACT,UAAU;AACZ;AACA;EACE,WAAW;EACX,cAAc;EACd,UAAU;EACV,yBAAyB;EACzB,UAAU;EACV,cAAc;AAChB;AACA;;GAEG;AACH;EACE;IACE,iBAAiB;EACnB;EACA;IACE,WAAW;EACb;AACF;AACA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,UAAU;;AAEZ;AACA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,yBAAyB;EACzB,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,yBAAyB;AAC3B;AACA;EACE,iBAAiB;EACjB,yBAAyB;AAC3B;;;;AAIA,sEAAsE;AACtE;EACE,iBAAiB,2BAA2B,CAAC;AAC/C;;AAEA,mBAAmB;AACnB,qBAAqB;AACrB;EACE,eAAe;EACf,kBAAkB;EAClB,oBAAoB;EACpB;IACE,UAAU;EACZ;AACF;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;;AAEH,aAAa;AACb,mBAAmB;AACnB;EACE,wCAAwC;EACxC,2CAA2C;EAC3C,oCAAoC;;EAEpC,yBAAyB;EACzB,wCAAwC;EACxC,sCAAsC;EACtC,oCAAoC;AACtC,C;;;;AC7NA;EACE,YAAY;EACZ;IACE,YAAY;EACd;EACA;IACE,YAAY;EACd;AACF;;AAEA;EACE,yBAAyB;EACzB,eAAe;EACf,gBAAgB;EAChB,SAAS;EACT,UAAU;EACV,4BAA4B;EAC5B,2BAA2B;AAC7B;AACA;EACE,6CAA0D;AAC5D;AACA;EACE,wCAAqD;AACvD;AACA;EACE,yCAAsD;AACxD;AACA;EACE,2CAAwD;AAC1D;;;AAGA;EACE,QAAQ;EACR,aAAa;EACb;IACE,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,YAAY;;IAEZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,kBAAkB;EACpB;;EAEA;IACE,yBAAyB;EAC3B;EACA;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;;EAEA;IACE,WAAW;IACX,cAAc;IACd,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,2BAA2B;EAC7B;EACA;IACE,yCAAsD;EACxD;EACA;IACE,wCAAqD;EACvD;EACA;IACE,2CAAwD;EAC1D;;AAEF;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB;IACE,cAAc;IACd,WAAW;IACX,YAAY;IACZ,WAAW;IACX,4BAA4B;IAC5B,2BAA2B;IAC3B,iBAAiB;EACnB;EACA;IACE,yBAAyB;IACzB,YAAY;IACZ;MACE,yCAAsD;IACxD;EACF;AACF,C;;;;ACxGA;EACE,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,QAAQ;EACR,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;AACA,4BAA4B;AAC5B,sCAAsC,UAAU,CAAC;AACjD,qBAAqB,WAAW,EAAE,YAAY,EAAE,wBAAwB,EAAE,4BAA4B,EAAE,2BAA2B,EAAE,cAAc,CAAC;AACpJ,6BAA6B,iDAA6E;AAC1G,6BAA6B,kDAA8E;AAC3G,6BAA6B,wCAAoE;AACjG,6BAA6B,sCAAkE;AAC/F,6BAA6B,yCAAqE;AAClG,6BAA6B,gDAA4E;AACzG,6BAA6B,6CAAyE;AACtG,6BAA6B,wCAAoE;AACjG,6BAA6B,yCAAqE;;AAElG;EACE,kDAAkD;EAClD,+CAA+C;EAC/C;AACF;AACA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC,C;;;;ACrCA;EACE,6CAA6C;EAC7C,sCAAsC;EACtC,uCAAuC;EACvC,4BAA4B;EAC5B,eAAe,EAAE,iBAAiB;EAClC,kBAAkB;EAClB,YAAY,EAAE,WAAW;EACzB,sBAAsB;EACtB,oBAAoB,EAAE,SAAS;AACjC;AACA;EACE,qCAAqC;AACvC;AACA;EACE,4BAAuB;EAAvB,uBAAuB;AACzB;;AAEA,wIAAwI,uBAAuB,EAAE,0BAA0B,EAAE,cAAc,EAAE;AAC7M,gFAAgF,cAAc,EAAE;AAChG,8CAA8C,gBAAgB,EAAE;AAChE,wDAAwD,mBAAmB,EAAE;AAC7E,oCAAoC,gBAAgB,EAAE,YAAY,EAAE,C;;;;ACtBpE;EACE,aAAa;AACf;AACA;;GAEG,C;;;;ACLH;;;;;;;;;;;;;;;;;;GAkBG;;;;;;AClBH,gBAAgB;ACWL;ECmEP;EAAA;EAAA;EAAA;EAAA;AFhEJ;;AGqVE;;;;;EC3PA;EACA;EACA;EACA;EAEA;ED4PE;AH9UJ;;AGiVE;;;;;ECpQA;EACA;EACA;EACA;EAEA;EDqQE;AH1UJ;;AG6UE;;;;;EC7QA;EACA;EACA;EACA;EAEA;ED8QE;AHtUJ;;AGyUE;;;;;ECtRA;EACA;EACA;EACA;EAEA;EDuRE;AHlUJ;;AGwUE;;;EC7SE;EDwTA;AH5UJ;;AG+UE;;;EC3TE;EDsUA;AHnVJ;;AGsVE;;;;EC9TA;EACA;EACA;EACA;EAEA;AJlBF;;AGkVE;;;;;ECrUA;EACA;EACA;EACA;EAEA;AJNF;AG6UI;;;;;EACE;AHvUN;;AG2UE;;;;ECjVA;EACA;EACA;EACA;EAEA;AJYF;;AGuUE;;ECxVA;EACA;EACA;EACA;EAEA;EDsVE;AHhUJ;;AGmUE;;EC9VA;EACA;EACA;EACA;EAEA;ED4VE;AH5TJ;;AG+TE;;ECpWA;EACA;EACA;EACA;EAEA;EDkWE;AHxTJ;;AG2TE;;EC1WA;EACA;EACA;EACA;EAEA;EDwWE;AHpTJ;;ACtJW;ECmEP;EAAA;EAAA;EAAA;EAAA;AF2FJ;;AC9JW;ECmEP;EAAA;AFgGJ;;ACnKW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF2GJ;;AC9KW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFwHJ;;AC3LW;ECmEP;EAAA;EAAA;EAAA;AF+HJ;;AClMW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFyIJ;;AC5MW;ECmEP;EAAA;EAAA;EAAA;EAAA;AFiJJ;;AKtME;EACE;ALyMJ;;AKtME;;EAEE;EACA;ALyMJ;;AC9NW;ECmEP;EAAA;EAAA;EAAA;EAAA;AFmKJ;;ACtOW;ECmEP;EAAA;EAAA;EAAA;EAAA;AF2KJ;;AMjNE;EJsCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFwLJ;;AOjPE;ELyDE;EAAA;EAAA;EAAA;AF+LJ;;AClQW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFqNJ;;ACxRW;ECmEP;EAAA;EAAA;EAAA;EAAA;AF6NJ;;AQ1RE;EN6DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF0OJ;;ASpPE;EPUE;EAAA;EAAA;EAAA;EAAA;AFkPJ;;AUxQE;ERsBE;EAAA;EAAA;EAAA;EAAA;AF0PJ;AWlSE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EACE,cAeO;A9B6tBf;;A8BnvBI;;EACE,cAoBG;A9BmuBT;A8BnvBI;;EAKE,mBAWG;A9BuuBT;A8BtvBM;;EACE,cAeO;A9B0uBf;;A8BpsBI;;EACE,cA/Ba;A9BuuBnB;A8BrsBI;;EACE,mBAnCa;A9B2uBnB;;A+B1vBE;EAIE;EACA;A/B0vBJ;;A+BhvBI;E7B0CA;AF0sBJ;;A+BpvBI;E7B0CA;AF8sBJ;;A+BxvBI;E7B0CA;AFktBJ;;A+B5vBI;E7B0CA;AFstBJ;;A+BhwBI;E7B0CA;AF0tBJ;;A+BpwBI;E7B0CA;AF8tBJ;;A+BxwBI;E7B0CA;AFkuBJ;;A+B5wBI;E7B0CA;AFsuBJ;;A+BhxBI;E7B0CA;AF0uBJ;;A+BpxBI;E7B0CA;AF8uBJ;;A+BxxBI;E7B0CA;AFkvBJ;;A+B5xBI;E7B0CA;AFsvBJ;;A+BhyBI;E7B0CA;AF0vBJ;;A+BpyBI;E7B0CA;AF8vBJ;;A+BxyBI;E7B0CA;AFkwBJ;;A+B5yBI;E7B0CA;AFswBJ;;A+BhzBI;E7B0CA;AF0wBJ;;A+BpzBI;E7B0CA;AF8wBJ;;A+BxzBI;E7B0CA;AFkxBJ;;A+B5zBI;E7B0CA;AFsxBJ;;A+Bh0BI;E7B0CA;AF0xBJ;;A+Bp0BI;E7B0CA;AF8xBJ;;A+Bx0BI;E7B0CA;AFkyBJ;;A+B50BI;E7B0CA;AFsyBJ;;A+Bh1BI;E7B0CA;AF0yBJ;;A+B70BI;EACE;A/Bg1BN;;AMn2BE;EJqDE;EAAA;EAAA;EAAA;EAAA;EAAA;AFuzBJ;;AgC12BE;E9BmDE;EAAA;AF4zBJ;AiC9sBI;EACE;IpBlIF;Ebm1BF;AACF;AiClwBE;E/B3EI;EWZF;EXwBA;AFs0BJ;AiCnwBM;EAJJ;IAKM;EjCswBN;AACF;AkCt0BE;ED0DA;IASM;I/BxEJ;EFg1BF;AACF;AiC5vBE;E/BjGI;EWZF;EXwBA;AFs1BJ;AgCt4BI;E9BgDA;EAAA;AF01BJ;AiC5uBI;EACE;IpBlIF;Ebi3BF;AACF;AiChyBE;E/B3EI;EWZF;EXwBA;AFo2BJ;AiCjyBM;EAJJ;IAKM;EjCoyBN;AACF;AkCp2BE;ED0DA;IASM;I/BxEJ;EF82BF;AACF;AiC1xBE;E/BjGI;EWZF;EXwBA;AFo3BJ;AgCh6BI;E9B4CA;EAAA;AFw3BJ;AiC1wBI;EACE;IpBlIF;Eb+4BF;AACF;AiC9zBE;E/B3EI;EWZF;EXwBA;AFk4BJ;AiC/zBM;EAJJ;IAKM;EjCk0BN;AACF;AkCl4BE;ED0DA;IASM;I/BxEJ;EF44BF;AACF;AiCxzBE;E/BjGI;EWZF;EXwBA;AFk5BJ;AOt9BE;ELoEE;EAAA;AFs5BJ;;ACz9BW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF87BJ;;AmC38BE;EjCaE;AFk8BJ;;AmCz8BE;;EvBkQE;EACA;EV5PA;EAAA;EAAA;EAAA;EAAA;AF68BJ;;AoCngCE;EACE,qCCHwB;ArCygC5B;;AoCngCE;EACE,aAPc;ApC6gClB;;AoCngCE;EACE,aAZc;ApCkhClB;;AsCj8BM;EACE,0BAtBkB;AtC09B1B;AsC/7BU;EACE;AtCi8BZ;AsC57BU;EACE;AtC87BZ;AsCz7BU;EACE;AtC27BZ;AsCr7BQ;EACE,0BA9CyB;AtCq+BnC;;AuCphCM;ErC2CF;EAAA;EAAA;EAAA;EAAA;EAAA;AFk/BJ;;AuCthCM;ErCoCF;EAAA;EAAA;EAAA;EAAA;EAAA;AF2/BJ;;AuC9gCQ;EACE;AvCihCV;;AuC3gCU;EACE;EACA;AvC8gCZ;;AwC1gCE;EACE,gBA7BO;AxC0iCX;;AwCtgCE;EACE;AxCygCJ;;AwCngCE;EAEE;;qEAAA;EAGA;AxCqgCJ;;AwCrkCE;EACE;EACA;AxCwkCJ;;AwC1lCE;EACE;EACA;AxC6lCJ;;AwC1lCE;EAEE;EACA;AxC4lCJ;;ACrmCW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF6iCJ;AyC1mCI;EvC6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFujCJ;AyC7mCI;EvCsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFikCJ;;ACpoCW;ECmEP;AFqkCJ;;AQ3oCE;ENsEE;EAAA;EAAA;AF2kCJ;;ASvnCE;EP4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFylCJ;AS7nCM;EPoCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFsmCJ;ASroCM;EP+BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFmnCJ;AS5oCM;EPyBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFgoCJ;;ASloCE;EPEE;AFooCJ;;AU5rCI;ERwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFyqCJ;AWjtCE;ETwCE;AF4qCJ;AU/tCM;EACE;AViuCR;AU7tCM;ER8CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF4rCJ;AUnuCM;ERuCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFysCJ;;AUntCE;ERUE;AF6sCJ;;AWrvCE;ETwCE;AFitCJ;;A0CvwCI;ExCsDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFguCJ;A0C/wCI;ExC+CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF8uCJ;A0CtxCI;ExCwCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF4vCJ;;A0C7wCE;ExCiBE;AFgwCJ;;Ac/zCI;EZ+DA;EAAA;EAAA;EAAA;EAAA;EAAA;EY/CE;AdyzCN;AcvzCM;EZ6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EYsBF;EACA;EACA;Ad8vCF;Ac/zCM;EZyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EYsBF;EACA;EACA;Ad0wCF;Acv0CM;EZqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EYsBF;EACA;EACA;AdsxCF;;ACj3CW;ECmEP;EAAA;EAAA;EAAA;EAAA;AFszCJ;;Ae32CE;EbqDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF00CJ;;Ae33CE;;EbiDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFu1CJ;;Ael4CI;;Eb2CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFo2CJ;;Aex4CI;;EboCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFi3CJ;;Ae/4CE;Eb8BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFq4CJ;;Aeh6CE;Eb2BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFy5CJ;;Aej7CE;EbwBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF66CJ;;A2CntBE;;EzC1tBE;AFk7CJ;A2CzCI;;EzCz4CA;AFs7CJ;;Aeh8CI;;;EAGE;Afm8CN;;Aez7CE;EbHE;EAAA;EAAA;AFk8CJ;;Aen7CM;EACE;Afs7CR;Ae56CM;EACE;Af86CR;;AC5gDW;ECmEP;EAAA;EAAA;EAAA;AFg9CJ;;ACnhDW;ECmEP;AFo9CJ;;AwC19CE;EACE,gBA7BO;AxC0/CX;AwCt9CE;EACE;AxCw9CJ;AwCl9CE;EAEE;;qEAAA;EAGA;AxCm9CJ;AwCnhDE;EACE;EACA;AxCqhDJ;AwCviDE;EACE;EACA;AxCyiDJ;AwCtiDE;EAEE;EACA;AxCuiDJ;AwCh9CI;EACI;AxCk9CR;;AgB/iDE;Ed+DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFggDJ;AgB5jDI;Ed4DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF+gDJ;AgBvkDI;EdwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF8hDJ;AgBllDI;EdoDA;EAAA;AFkiDJ;AgBllDI;EdgDA;EAAA;AFsiDJ;AgBllDI;Ed4CA;EAAA;AF0iDJ;;AgB9iDE;EdIE;AF8iDJ;;ACjnDW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFkkDJ;;A4C5nDI;E1C0DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFslDJ;A4C3oDI;E1CqDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFymDJ;AWjpDE;ETwCE;AF4mDJ;A4CvpDI;EAEE;A5CwpDN;;AClrDW;ECmEP;AFmnDJ;;A6CzoDM;E3CsBF;AFunDJ;A6CzoDM;E3CkBF;AF0nDJ;A6CxoDM;E3CcF;AF6nDJ;A6CvoDM;E3CUF;AFgoDJ;A8CzpDE;E5CyBE;EAAA;AFooDJ;;A6C/nDM;E3CLF;EAAA;AFyoDJ;A6ChoDM;E3CTF;EAAA;AF6oDJ;A6ChoDM;E3CbF;EAAA;AFipDJ;A6ChoDM;E3CjBF;EAAA;AFqpDJ;A8C9qDE;E5CyBE;EAAA;EAAA;EAAA;AF2pDJ;;A6CznDM;E3ClCF;EAAA;AFgqDJ;A6C1nDM;E3CtCF;EAAA;AFoqDJ;A6C1nDM;E3C1CF;EAAA;AFwqDJ;A6C1nDM;E3C9CF;EAAA;AF4qDJ;A8CrsDE;E5CyBE;EAAA;EAAA;EAAA;EAAA;AFmrDJ;;A6CpnDI;E3C/DA;AFurDJ;A6CnnDM;E3CpEF;AF0rDJ;A6ClnDM;E3CxEF;AF6rDJ;A6CjnDM;E3C5EF;AFgsDJ;A6ChnDM;E3ChFF;AFmsDJ;A8C5tDE;E5CyBE;EAAA;EAAA;EAAA;AFysDJ;;A6CxmDI;ECxKF;EACA;A9CoxDF;A8C5wDE;EACE;A9C8wDJ;A8CzwDI;EACE;A9C2wDN;A8CvwDE;EACE;A9CywDJ;A8CpwDE;EA1BA;EACA;A9CiyDF;A8CpwDE;EA9BA;EACA;A9CqyDF;A8CpwDE;EAlCA;EACA;A9CyyDF;;A6C9nDI;EC5KF;EACA;A9C8yDF;A8CtyDE;EACE;A9CwyDJ;A8CnyDI;EACE;A9CqyDN;A8CjyDE;EACE;A9CmyDJ;A8C9xDE;EA1BA;EACA;A9C2zDF;A8C9xDE;EA9BA;EACA;A9C+zDF;A8C9xDE;EAlCA;EACA;A9Cm0DF;;A6CnoDI;;;;E3C1HA;AFowDJ;;A+CjzDE;ED1BA;EACA;E5CsEE;E6CjEF;EACA;A/C40DF;A8C10DE;EACE;A9C40DJ;A8Cv0DI;EACE;A9Cy0DN;A8Cr0DE;EACE;A9Cu0DJ;A8Cl0DE;EA1BA;EACA;A9C+1DF;A8Cl0DE;EA9BA;EACA;A9Cm2DF;A8Cl0DE;EAlCA;EACA;A9Cu2DF;A+Cz0DI;E7CwCA;E6CjEF;EACA;A/Cs2DF;A+Cx0DI;E7CkCA;E6CjEF;EACA;A/C22DF;A+Cv0DI;E7C4BA;E6CjEF;EACA;A/Cg3DF;A8Cz0DE;E5CyBE;EAAA;AFozDJ;;A+C5yDE;E7CRE;E6CoBA;EACA;EACA;A/CqyDJ;;AmBt1DE;;E2B5CA;EACA;A9Cu4DF;A8C/3DE;;EACE;A9Ck4DJ;A8C73DI;;;EACE;A9Ci4DN;A8C73DE;;EACE;A9Cg4DJ;A8C33DE;;EA1BA;EACA;A9Cy5DF;A8C53DE;;EA9BA;EACA;A9C85DF;A8C73DE;;EAlCA;EACA;A9Cm6DF;A8Ct3DE;;E5CyBE;EAAA;EiBrDF;AnBw5DF;AmBj3DI;;EjBcA;EAAA;EiBrDF;AnB85DF;AmBn3DI;;EjBUA;EAAA;EiBrDF;AnBo6DF;AmBr3DI;;EjBMA;EAAA;EiBrDF;AnB06DF;AmBv3DI;;EjBEA;EAAA;EiBrDF;AnBg7DF;;AoB97DE;ElBmEE;EAAA;EAAA;AFi4DJ;;AqBr8DI;EnBoEA;EAAA;EAAA;EAAA;AFw4DJ;;AqB58DI;EnBoEA;EAAA;EAAA;AF84DJ;;AgDn9DE;E9CqEE;AFk5DJ;AgDp9DI;E9CkEA;AFq5DJ;AgDl9DI;E9C6DA;AFw5DJ;;AiD14DE;EACE;AjD64DJ;AiDv4DI;EACE;AjDy4DN;;AiDr4DE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;E/CpCA;EAAA;EAZE;EWZF;EXwBA;EAZE;EWZF;EXwBA;EAZE;EWZF;EXwBA;AFu7DJ;AuBn9DI;E0B2EE;EACA;AjD24DN;;AiDv4DE;E/CpDE;EAAA;AFg8DJ;;AiDr4DE;EACE;AjDw4DJ;;AiDr4DE;;EAEE;AjDw4DJ;;AiDn4DE;EAEE;AjDq4DJ;;AiD//DE;EACE,WAdS;EAeT,YAfS;EAgBT,iBAhBS;E/CmDP;EWZF;EXwBA;AFs9DJ;AiD3/DE;EACE;AjD6/DJ;AiD1/DE;EACE;AjD4/DJ;AiDz/DE;EACE;AjD2/DJ;AiDx/DE;EACE;EACA;AjD0/DJ;AiDv/DE;EACE;AjDy/DJ;AiDt/DE;EACE;EACA;AjDw/DJ;AiDp/DI;EACE;AjDs/DN;AiDn/DI;EACE;EACA;AjDq/DN;AiDl/DI;EACE;AjDo/DN;AiDj/DI;EACE;EACA;AjDm/DN;;AiD1iEE;EACE,WAfW;EAgBX,YAhBW;EAiBX,iBAjBW;AjD8jEf;AiDniEE;EACE;AjDqiEJ;AiDliEE;EACE;AjDoiEJ;AiDjiEE;EACE;AjDmiEJ;AiDhiEE;EACE;EACA;AjDkiEJ;AiD/hEE;EACE;AjDiiEJ;AiD9hEE;EACE;EACA;AjDgiEJ;AiD5hEI;EACE;AjD8hEN;AiD3hEI;EACE;EACA;AjD6hEN;AiD1hEI;EACE;AjD4hEN;AiDzhEI;EACE;EACA;AjD2hEN;;AiDllEE;EACE,WAbS;EAcT,YAdS;EAeT,iBAfS;E/CkDP;EWZF;EXwBA;AFyiEJ;AiD9kEE;EACE;AjDglEJ;AiD7kEE;EACE;AjD+kEJ;AiD5kEE;EACE;AjD8kEJ;AiD3kEE;EACE;EACA;AjD6kEJ;AiD1kEE;EACE;AjD4kEJ;AiDzkEE;EACE;EACA;AjD2kEJ;AiDvkEI;EACE;AjDykEN;AiDtkEI;EACE;EACA;AjDwkEN;AiDrkEI;EACE;AjDukEN;AiDpkEI;EACE;EACA;AjDskEN;;AC9oEW;ECmEP;EAAA;EAAA;EAAA;AFklEJ;;AiDh/DE;E/ClGE;EAAA;AFulEJ;;AiDh/DE;E/CvGE;EAAA;AF4lEJ;;AC/pEW;ECmEP;EAAA;AFimEJ;;ACpqEW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFqnEJ;;ACxrEW;ECmEP;AFynEJ;;AC5rEW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFwpEJ;;AkD9rEI;EhDsCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFqqEJ;AkDvsEI;EhDkCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFirEJ;;AkD7sEI;EhD4BA;AFqrEJ;AkD3sEI;EhDsBA;AFwrEJ;;A+ChrEE;E7CRE;E6CoBA;EACA;EACA;A/CyqEJ;A8ChtEI;EACE;A9CktEN;;ACrwEW;ECmEP;AFssEJ;;ACzwEW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFktEJ;;ACrxEW;ECmEP;EAAA;AFutEJ;;AC1xEW;ECmEP;AF2tEJ;;AmDnxEI;EjDwDA;AF+tEJ;AmDnxEI;EjDoDA;AFkuEJ;AmDlxEI;EjDgDA;AFquEJ;;ACxyEW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;AF8uEJ;;ACjzEW;ECmEP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFmwEJ;AoDh0EI;ElD6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AF4wEJ;AoDp0EI;ElDwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFqxEJ;;ACx1EW;ECmEP;AFyxEJ;;AqD71EE;EAYI;ArDq1EN;;ACh2EW;ECmEP;EAAA;AFkyEJ;;AsDt1EI;EpDoDA;EAAA;AFuyEJ;AsDv1EI;EpDgDA;EAAA;AF2yEJ;AsDv1EI;EpD4CA;EAAA;AF+yEJ;;ACl3EW;ECmEP;EAAA;AFozEJ;;AKt3EE;EACE;ALy3EJ;;AKt3EE;;EAEE;ALy3EJ;;AKj2EI;EACE,gBALK;ALy2EX;;AA92EA;EAAa;AAk3Eb;;AAj3EA;EACE;AAo3EF;;AA/2EA;AACA;;EAEE;EAA0B;AAm3E5B;;AAj3EA;AACA;EACE;AAo3EF;;AAj3EA;AACA,8B","sources":["./src/app/styles/cargodrom.css","./src/app/styles/material.css","./src/app/styles/btn.css","./src/app/styles/table.css","./src/app/styles/input.css","./src/app/styles/form.css","./src/app/styles/const.css","./src/styles.scss","./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_form-field.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@material/fab/_fab.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@material/dom/_dom.scss","./node_modules/@angular/material/form-field/_form-field-subscript.scss","./node_modules/@angular/material/form-field/_form-field-focus-overlay.scss","./node_modules/@angular/material/form-field/_mdc-text-field-theme-variable-refresh.scss","./node_modules/@angular/material/form-field/_form-field-native-select.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss"],"sourcesContent":["@font-face {\n  font-family: 'regular';\n  src: url('../../assets/lato-regular.eot');\n  src: url('../../assets/lato-regular.eot?#iefix') format('embedded-opentype'),\n  url('../../assets/lato-regular.ttf') format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'regular';\n  src: url('../../assets/lato-bold.eot');\n  src: url('../../assets/lato-bold.eot?#iefix') format('embedded-opentype'),\n  url('../../assets/lato-bold.ttf') format('truetype');\n  font-weight: bold;\n  font-style: normal;\n}\n\n/* html * {max-height: 1000000px; box-sizing: border-box } */\n/* html { height: 100%; padding: 0; margin: 0; font-family: 'regular', 'arial', 'sans-serif'; min-width: 1600px; } */\nhtml { height: 100%; padding: 0; margin: 0; font-family: 'regular', 'arial', 'sans-serif'; min-width: 1455px;}\nbody { height: 100%; padding: 0; margin: 0; background: #f7f9fc; }\n.content{color: var(--text); background-color: var(--background); }\n\ninput, textarea, a:focus{outline-width:0;outline:none;}\ninput[type=\"submit\"], input[type=\"button\"] , input[type=\"checkbox\"]{  cursor: pointer; -webkit-appearance: none; -moz-appearance: none; -o-appearance: none; appearance: none; }\ninput[type=\"checkbox\"], input[type=\"radio\"], label { vertical-align: middle; }\n\n.btn { background: var(--accent, #db563b); color: #fff; padding: 20px 16px; font-size: 15px; line-height: 17px; text-align: center; border-radius: 6px; display: inline-block; cursor: pointer; }\n\n\n.content {height: 100%;  }\napp-pages{ .content {min-height: 100%; height: auto; }}\n.user-module { height: 100%; display: flex; flex-direction: column;  }\n\n.auth-bg { background: #44f url('../../assets/auth-bg.png') no-repeat 50% 50%; background-size: cover;; display: flex; justify-content: center; align-items: center; height: 100%; }\n.auth-form { width: 560px; height: auto; background: #fff; position: absolute; }\n.auth-form .hdr { border-bottom: 1px solid #E0E5EB; padding: 27px 32px 24px; display: flex; align-items: center; }\n.auth-form .logo { display: inline-block; background: url('../../assets/logo-full.svg') no-repeat 0 0; width: 168px; height: 44px; }\n.auth-form .sep { flex-grow: 1; }\n.auth-form .fm-body { padding: 32px 0 15px; }\n.auth-form .form-row { padding: 0 32px 16px; display: flex; align-items: flex-end;  font-size: 13px; line-height: 17px;  }\n.auth-form .form-row.sp { padding-bottom: 24px; }\n.auth-form .form-row > * { width: 100%; }\n.auth-form .form-row.inline > * { width: 50%; }\n.auth-form .form-row.inline > *:first-child { margin-right: 16px; }\n.auth-form input[type=\"text\"], .auth-form input[type=\"password\"] { background: #F7F9FC; border: 1px solid #e0e5eb; font-size: 15px; line-height: 17px; padding: 10px 35px 10px 20px; border-radius: 6px; box-sizing: border-box; width: 100%; }\n.auth-form .form-label { font-size: 10px; line-height: 12px; padding: 0; text-transform: uppercase; color: #606A74; }\n.auth-form .form-input { margin-top: 6px; }\n.auth-form .btn { display: block; padding: 13px 0 10px; cursor: pointer; }\n.auth-form .btn.alt { background: #4B66AD; }\n.auth-form .form-hr { margin-top: 15px; margin-bottom: 32px; }\n.auth-form .desc { color: #606A74; }\n.auth-form .forgot { color: #DB563B; }\n.auth-form .forgot > span { cursor: pointer; }\n.auth-form .back { font-size: 24px; line-height: 24px; font-weight: bold; background: url('../../assets/pic-backto2.svg') no-repeat 0 0; padding-left: 27px; cursor: pointer; }\n.form-hr { border-top: 1px solid #E0E5EB; }\n\n.auth-form .form-row.form-error { color: #ff0000; font-weight: 600; }\n.auth-form .btn::before { display: none; }\n\n.header { box-shadow: 0 1px 6px rgba(0,0,0,0.08); z-index: 1; position: relative; }\n\n.main-menu { display: flex; background: var(--header_menu); color: var(--header_menu_text); height: 56px; box-shadow: 0 4px 5px rgba(0,0,0,0.1); }\n.main-menu > * { min-width: 56px; display: flex;  }\n.main-menu > * > span { margin: auto; }\n\n.main-menu .logo { \n  background: var(--logo_url, url('../../assets/logo-mini-white.svg')) no-repeat 50% 50%;\n  background-size: var(--bg_size, auto);\n}\n/* .main-menu .logo { background: url('../../assets/logo-mini-white.svg') no-repeat 50% 50%; } */\n.main-menu .item { font-size: 15px; padding: 0 24px; display: flex; align-items: center; cursor: pointer; box-shadow: inset 1px 0 0 color-mix(in srgb, var(--header_menu_text) 17%, transparent); text-decoration: none; color: var(--header_menu_text); flex-shrink: 0; }\n@media (max-width: 1750px) {\n  .main-menu .item {padding: 0 12px; font-size: 12px;}\n}\n.main-menu .item svg { margin-right: 10px; margin-top: -2px; opacity: 0.6;}\n/* .main-menu .item svg path { fill: #B4C3EB; } */\n.main-menu .item svg path { fill: var(--header_menu_text); opacity: 0.9; }\n/* .main-menu .item:hover { background: #5D76B9; } */ .main-menu .item:hover { opacity: 0.6; } \n/* .main-menu .item.sel { background: #fff; color: #4B66AD;  }*/\n.main-menu .item.sel { background: var(--accent_text, #fff); color: var(--header_menu, #4B66AD);}\n.main-menu .item.sel:hover { background: #F1F5FF; }\n.main-menu .item.sel svg path { fill: var(--header_menu, #4B66AD); }\n/* .main-menu .item.dashboard { } */\n.main-menu .item.request svg { margin-top: 5px; margin-right: 5px; }\n/* .main-menu .item.bit {} */\n/* .main-menu .item.order {} */\n/* .main-menu .item.tariff {} */\n/* .main-menu .item.contracor {} */\n/* .main-menu .item.report {} */\n/* .main-menu .item.client {} */\n/* .main-menu .item.guide {} */\n\n.main-menu .div { flex-grow: 1; }\n\n.main-menu .currency { font-size: 13px; min-width: 71px; }\n.main-menu .currency > span > * { display: block; text-align: left; }\n.main-menu .currency > span :first-child { font-size: 10px; color: var(--header_menu_text);opacity: 0.6; margin-bottom: 4px; }\n/* .main-menu .currency > span :last-child {} */\n\n.main-menu .fn { box-shadow: inset 1px 0 0 color-mix(in srgb, var(--header_menu_text) 17%, transparent); cursor: pointer; display: flex; align-items: center; }\n/* .main-menu .fn:hover { background: #5D76B9; } */ .main-menu .fn:hover { opacity: 0.6; } \n.main-menu .fn.sel { background: #fff; color: #4B66AD;  }\n/* .main-menu .fn.sel:hover { background: #F1F5FF; } */\n.main-menu .fn.sel svg path { fill: var(--header_menu); }\n.main-menu .fn svg { margin: 4px auto 0; }\n.main-menu .fn svg path { fill: var(--header_menu_text) }\n.main-menu .fn.msg { position: relative; }\n.main-menu .fn.msg span span { position: absolute; left: 32px; top: 32px; display: inline-block; background: #fff; color: #4B66AD; border-radius: 50%; font-size: 10px; font-weight: bold; min-width: 14px; padding: 1px 0; text-align: center; }\n.main-menu .fn.msg span span:empty { display: none; }\n/* .main-menu .fn.config {  } */\n/* .main-menu .fn.logout svg path { fill: #B4C3EB; } */\n\n.subheader { border-bottom: 1px solid var(--header_menu); padding: 15px 12px 12px 24px; background-color: var(--background2);}\n.subheader .placer { display: flex; align-items: center; min-height: 43px; box-sizing: border-box; width: 100%;}\n\n.subheader .div { flex-grow: 1; }\n.subheader .title { font-size: 26px; line-height: 30px; color: var(--header_menu); padding-right: 24px;  font-weight: bold; text-decoration: none; }\n.subheader a.title { position: relative; padding-left: 30px; cursor: pointer; }\n.subheader a.title:before { content: \"\"; position: absolute; left: 0; top: 0; bottom: 0; background: url('../../assets/pic-backto.svg') no-repeat 50% 50%; width: 13px; }\n.subheader .title div { font-size: 13px; line-height: 13px; color: #606A74; font-weight: normal; margin-top: 8px; }\n.subheader .item { margin-left: 24px; font-size: 13px; line-height: 12px; color: #606A74; }\n.subheader .item .val {  font-size: 15px; line-height: 17px; color: #2C3640; font-weight: bold; display: block; margin-top: 5px; }\n\n.subheader .links { border-left: 1px solid #C3CCD6; display: flex; align-items: center; min-height: 43px; box-sizing: border-box;  }\n\n.subheader .link { height: 25px; margin-left: 24px; font-size: 13px; line-height: 12px; color: #606A74; cursor: pointer; display: flex; align-items: center; text-decoration: none; }\n.subheader .link:hover { opacity: 0.7; }\n.subheader .link svg { margin: -2px 9px 0 0; }\n\n.table-footer { display: flex; padding: 20px 20px; background-color: var(--background); }\n.table-footer .limit { flex-grow: 1; display: flex; align-items: center; }\n.table-footer .note { font-size: 13px; line-height: 13px; color: #606A74; margin-left: 15px; }\n\n.table-footer select[name=\"limit\"] { width: 170px; }\n.table-footer .ui-select { display: inline-block; vertical-align: middle; width: auto; position: relative; margin-bottom: 0; text-align: left; font-size: 13px; line-height: 13px; border: none; box-sizing: border-box; }\n/* .table-footer .ui-select { display: inline-block; vertical-align: middle; width: auto; position: relative; margin-bottom: 0; text-align: left; font-size: 13px; line-height: 13px; border: none; box-shadow: 0 2px 8px rgba(36,45,67,0.08); box-sizing: border-box; } */\n.table-footer .ui-select-input { display: block; color: #606A74; background: #fff; padding: 15px 50px 12px 15px; box-sizing: border-box; overflow: hidden; white-space: nowrap; cursor: pointer; border-radius: 6px; }\n.table-footer .invert .ui-select-input { position: relative; z-index: 10001 }\n.table-footer .ui-select-input-open { border-radius: 6px 6px 0 0; }\n.table-footer .invert > .ui-select-input-open { border-radius: 0 0 6px 6px; }\n.table-footer .ui-select-button { display: flex; position: absolute; top: 0; right: 0; width: 40px; bottom: 0; cursor: pointer; font-size: 0; }\n.table-footer .invert > .ui-select-button { z-index: 10001; }\n.table-footer .ui-select-button:hover { opacity: 0.7; }\n.table-footer .ui-select-button:after { content: \"\"; transform: rotate(90deg); margin: auto; display: inline-block; width: 6px; height: 10px; transition: 0.1s; background: url('../../assets/pic-paginator-arrow.svg') no-repeat 50% 50%; }\n/* .table-footer .ui-select-button-open { } */\n.table-footer .ui-select-button-open:after { transform: rotate(270deg); }\n.table-footer .ui-select-fader { position: absolute; top: 0; bottom: 0; }\n.table-footer .ui-select-layer { display: block; position: absolute; border-collapse: separate; top: 40px; right: 0; left: 0; visibility: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.13); z-index: 10000; }\n.table-footer .invert > .ui-select-layer { top: auto; bottom: 41px; box-shadow: 0 2px 4px rgba(0,0,0,0.13); }\n.table-footer .ui-select-list-scroller { display: block; max-height: 240px; background: #fff;  overflow: auto;  }\n.table-footer .ui-select-list { display: block; height: auto; overflow: hidden; }\n.table-footer .ui-select-item { display: block; font-size: 13px; line-height: 13px; color: #db563b; text-decoration: none; padding: 10px 5px 7px 10px; cursor: pointer; border-top: 1px solid #e0e6ed; }\n.table-footer .ui-select-item:hover { color: #fff; background: #db563b;  }\n.table-footer .ui-select-item.disabled { cursor: default; opacity: 0.3; }\n/* .table-footer .ui-select-item.odd {} */\n/* .table-footer .ui-select-item.odd:hover {} */\n.table-footer .ui-select-item.selected { color: #fff; background: #db563b;   }\n.table-footer .ui-select-item.selected:hover { background: #e99786; }\n\n.navigator { font-size: 13px; line-height: 13px; }\n.navigator .item  { cursor: pointer; display: inline-block; padding: 15px 10px 12px; text-align: center; text-decoration: none; vertical-align: middle; background: #fff; color: #606A74; border-radius: 6px; box-shadow: 0 2px 8px rgba(36,45,67,0.08); min-width: 40px; box-sizing: border-box; }\n.navigator .item + .item  { margin-left: 8px; }\n.navigator .item.sel  { font-weight: bold; background: #83909E; color: #fff; box-shadow: inset 0 2px 1px rgba(44,54,64,0.2); }\n.navigator .item.arrow { background: #fff url('../../assets/pic-paginator-arrow.svg') no-repeat 50% 50%; padding: 0; width: 40px; height: 40px; }\n.navigator .item.arrow.left { transform: rotate(180deg); box-shadow: 0 -2px 8px rgba(36,45,67,0.08); }\n/* .navigator .item.arrow.right {} */\n.navigator .dot { margin: 0 15px; }\n/* .navigator .icon-control-end, .navigator .icon-control-start { font-size: 12px; font-weight: bold; } */\n.navigator .icon-control-end .n, .navigator .icon-control-start .n { display: none; }\n\n/* .table {} */\n.table table { border-collapse: collapse; font-size: 13px; line-height: 16px; width: 100%; }\n.table th { line-height: 16px; background: #83909E; color: #fff; font-weight: normal; text-align: left; vertical-align: middle; padding: 11px 10px 10px; }\n.table.ch th { padding: 4px 13px 4px; }\n.table th.l {border-left: 1px solid #9ca6b1 !important;  }\n.table th.lb { border-bottom: 1px solid #9ca6b1;  }\n.table th.c { text-align: center; }\n.table td.c { text-align: center; }\n.table th.r { text-align: right; }\n.table td.r { text-align: right; }\n.table td { padding: 11px 10px 10px; border-bottom: 1px solid #e0e5eb; background: #fff; vertical-align: middle; height: 34px; }\n.table.ch td { padding: 11px 13px 10px;  }\n.table td.l { border-left: 1px solid #e0e5eb !important; }\n.table .odd td { background: #F7F9FC; }\n.table .gray { color: #83909E; }\n.table-list .gray { color: #83909E; }\n.table .bk { color: #2C3640; }\n.table-list .bk { color: #2C3640; }\n.table .success { color: #61BA5D; }\n.table .fail { color: #FD7171; }\n.table-list .success { color: #61BA5D; }\n.table-list .fail { color: #FD7171; }\n.table .b { font-weight: bold; }\n.table .type { display: inline-block; width: 26px; height: 26px; }\n.table .type + .type { margin-left: 7px; }\n.table .type.air { background: url('../../assets/pic-service-air.svg') no-repeat 50% 50%; }\n.table .type.avia { background: url('../../assets/pic-service-air.svg') no-repeat 50% 50%; }\n.table-list .type.avia { background: url('../../assets/pic-service-air.svg') no-repeat 50% 50%; }\n.table .type.road { background: url('../../assets/pic-service-road.svg') no-repeat 50% 50%; }\n.table .type.rail { background: url('../../assets/pic-service-rail.svg') no-repeat 50% 50%; }\n.table .type.rw { background: url('../../assets/pic-service-rail.svg') no-repeat 50% 50%; }\n.table-list .type.rw { background: url('../../assets/pic-service-rail.svg') no-repeat 50% 50%; }\n.table .type.sea { background: url('../../assets/pic-service-sea.svg') no-repeat 50% 50%; }\n\n.table .kso { white-space: nowrap; }\n.table .kso span { display: inline-block; background: #FD7171; width: 8px; height: 28px; margin: 0 1px 0 1px; }\n.table .kso span.sel { background: #81DD7C;  }\n.table .nw { white-space: nowrap; }\n.table .amount { font-weight: bold; }\n.table .total  { font-weight: bold; }\n.table .total.bg  { color: #fff; }\n.table .profit  { color: #83909E; font-weight: bold; }\n.type { vertical-align: top;}\n/* .type { vertical-align: top; margin: -6px 9px -12px 0;} */\n\n\n.table > .filter { border: solid #e0e5eb; border-width: 1px 1px 0 1px; }\n.filter { display: flex; flex-direction: column;  }\n.filter .base { display: flex; }\n.filter .item { padding: 20px; display: flex; box-sizing: border-box; }\n@media (max-width: 1750px) {\n  .filter .item { padding: 10px; display: flex; }\n}\n.filter .item.func { flex-shrink: 0; }\n.filter .item .title { color: var(--text2); font-size: 13px; line-height: 12px; }\n.filter .item > div { margin: auto 0; }\n.filter .item .data { margin-top: 10px; }\n\n.filter .item .checkbox label { font-size: 13px; line-height: 13px; cursor: pointer; }\n.filter .item .checkbox label + label { margin-left: 14px; }\n.filter .item .checkbox input { display: none; }\n.filter .item .checkbox input + span { color: var(--text); border-bottom-color: transparent; }\n.filter .item .checkbox input:checked + span { color: var(--accent); border-bottom: 1px solid; }\n/* .filter .item .checkbox span {  } */\n\n.filter .item .btn { font-size: 15px; line-height: 14px; color: #fff; padding: 12px 13px 11px; cursor: pointer; }\n.filter .item .btn + .btn { margin-left: 7px; }\n.filter .item .btn span { display: inline-block; margin-left: 7px; }\n.filter .item .btn:before { content: \"\"; vertical-align: top; display: inline-block; width: 22px; height: 18px; background: no-repeat 50% 50%; margin-top: 1px; }\n.filter .item .btn span:empty { margin-left: 0; }\n.filter .item .btn.apply:before { background-image: url('../../assets/pic-refresh.svg'); }\n.filter .item .btn.reset { background: var(--background3); }\n.filter .item .btn.reset:before { background-image: url('../../assets/pic-cross.svg'); width: 14px; }\n.filter .item + .item { border-left: 1px solid var(--line); }\n.filter .addition-filter { font-size: 13px; position: relative; line-height: 13px; cursor: pointer; background: url('../../assets/pic-filter.svg') no-repeat 0 50%; padding: 5px 30px 2px 24px; }\n.filter .addition-filter:after { content: \"\"; position: absolute; width: 20px; height: 20px; right: 0; top: 50%; margin-top: -9px; background: url('../../assets/pic-filter-arrow.svg') no-repeat 50% 50%; transition: 0.3s; transform: rotate(180deg);  }\n.filter .item.open .addition-filter:after { transform: rotate(0); }\n.filter .item.open { background: #fff; }\n\n.filter .ui-select { display: inline-block; vertical-align: middle; width: auto; position: relative; margin-bottom: 0; text-align: left; font-size: 13px; line-height: 13px; border: none;  }\n.filter .ui-select-input { display: block; color: #000; padding: 0; overflow: hidden; white-space: nowrap; cursor: pointer; }\n/* .filter .ui-select-input-open {  } */\n.filter .ui-select-button { display: flex; position: absolute; top: -3px; right: 0; width: 20px; bottom: 0; cursor: pointer; font-size: 0; }\n.filter .ui-select-button:hover { opacity: 0.7; }\n.filter .ui-select-button:after { content: \"\"; margin: auto; display: inline-block; width: 10px; height: 6px; transition: 0.1s; background: url('../../assets/pic-select-arrow.svg') no-repeat 50% 50%; }\n/* .filter .ui-select-button-open { } */\n.filter .ui-select-button-open:after { transform: rotate(90deg); }\n.filter .ui-select-fader { position: absolute; top: 0; bottom: 0; }\n.filter .ui-select-layer { display: block; position: absolute; border-collapse: separate; top: 20px; right: 0; left: -10px; visibility: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.13); z-index: 10000; }\n.filter .ui-select-list-scroller { display: block; max-height: 240px; background: #fff;  overflow: auto;  }\n.filter .ui-select-list { display: block; height: auto; overflow: hidden; }\n.filter .ui-select-item { display: block; font-size: 13px; line-height: 13px; color: #db563b; text-decoration: none; padding: 10px 5px 7px 10px; cursor: pointer; border-top: 1px solid #e0e6ed; }\n.filter .ui-select-item:hover { color: #fff; background: #db563b;  }\n.filter .ui-select-item.disabled { cursor: default; opacity: 0.3; }\n/* .filter .ui-select-item.odd {} */\n/* .filter .ui-select-item.odd:hover {} */\n.filter .ui-select-item.selected { color: #fff; background: #db563b; }\n.filter .ui-select-item.selected:hover { background: #e99786; }\n\n.filter > .add { display: flex; flex-direction: column; background: var(--background2); border-top: 1px solid var(--line) }\n.filter > .add .row { display: flex; width: 100%; flex-wrap: wrap; }\n.filter > .add .item  { flex-grow: 1; }\n.filter > .add .item > div { width: 100%; }\n/* .filter > .add .item + .item { border-left: none; padding-left: 0; } */\n.filter > .add .item + .item { border-left: none; }\n.filter > .add .item .data { margin-top: 6px; }\n.filter > .add .title { font-size: 10px; text-transform: uppercase; }\n.filter > .add input[type=\"text\"] { font-family: regular; border: 1px solid var(--line); border-radius: 6px; font-size: 14px; color: #606A74; padding: 10px 10px 10px; width: 100%; box-sizing: border-box; }\n.filter > .add input[type=\"text\"]:focus { outline: none; }\n.filter > .add select { width: 100%; }\n\n.filter > .add .ui-select { display: inline-block; vertical-align: middle; width: auto; position: relative; margin-bottom: 0; text-align: left; font-size: 14px; line-height: 14px; border: none;  }\n.filter > .add .ui-select-input { display: block; font-size: 14px; color: #606A74; padding: 12px 10px 11px; border: 1px solid #E0E5EB; border-radius: 6px; overflow: hidden; white-space: nowrap; cursor: pointer; }\n.filter > .add .ui-select-input-open { border-radius: 6px 6px 0 0; }\n.filter > .add .ui-select-button { display: flex; position: absolute; top: 0; right: 0; width: 36px; bottom: 0; cursor: pointer; font-size: 0; }\n.filter > .add .ui-select-button:hover { opacity: 0.7; }\n.filter > .add .ui-select-button:after { content: \"\"; margin: auto; display: inline-block; width: 10px; height: 6px; transition: 0.1s; background: url('../../assets/pic-select-arrow.svg') no-repeat 50% 50%; }\n/* .filter > .add .ui-select-button-open { } */\n.filter > .add .ui-select-button-open:after { transform: rotate(90deg); }\n.filter > .add .ui-select-fader { position: absolute; top: 0; bottom: 0; }\n.filter > .add .ui-select-layer { display: block; position: absolute; border-collapse: separate; top: 38px; right: 0; left: 0; visibility: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.13); z-index: 10000; }\n.filter > .add .ui-select-list-scroller { display: block; max-height: 240px; background: #fff;  overflow: auto;  }\n.filter > .add .ui-select-list { display: block; height: auto; overflow: hidden; }\n.filter > .add .ui-select-item { display: block; font-size: 13px; line-height: 13px; color: #db563b; text-decoration: none; padding: 10px 5px 7px 10px; cursor: pointer; border-top: 1px solid #e0e6ed; }\n.filter > .add .ui-select-item:hover { color: #fff; background: #db563b;  }\n.filter > .add .ui-select-item.disabled { cursor: default; opacity: 0.3; }\n/* .filter > .add .ui-select-item.odd {} */\n/* .filter > .add .ui-select-item.odd:hover {} */\n.filter > .add .ui-select-item.selected { color: #fff; background: #db563b; }\n.filter > .add .ui-select-item.selected:hover { background: #e99786; }\n.filter .sep { flex-grow: 1; }\n.filter .buttons { margin: 13px 13px 0 0; }\n.filter .buttons .btn.v + .btn.v { margin-left: 13px; }\n\n\n.edit-form { color: #606A74; width: 1144px; margin: 20px auto; }\n.edit-form .hdr { display: flex; margin-bottom: 40px; }\n.edit-form .hdr.ftr { margin-top: 17px; }\n.edit-form .hdr .title { flex-grow: 1; }\n.edit-form .hdr .title > div:first-child { color: #4B66AD; font-size: 32px; line-height: 32px; font-weight: bold; }\n.edit-form .hdr .req-fields { font-size: 13px; line-height: 13px; margin-top: 10px; }\n.edit-form .req { font-size: 10px; line-height: 10px; color: #DB563B; }\n\n.btn:before { content: \"\"; display: inline-block; vertical-align: top; height: 20px; width: 20px; /* margin-right: 8px; */ background: no-repeat 50% 50%;  }\n.btn > span { display: inline-block; vertical-align: top; margin-top: 2px; }\n.btn.send { background: #DB563B; color: rgb(111, 77, 77); padding: 11px 17px; }\n.btn.send:before { background-image: url('../../assets/pic-btn-send-white.svg'); }\n\n.btn.add { padding: 12px 13px 11px; }\n.btn.add:before { background-image: url('../../assets/pic-btn-add.svg'); }\n\n.btn.v { display: inline-block; vertical-align: top; padding: 9px 8px 7px; min-width: 64px; box-sizing: border-box; font-size: 10px; line-height: 10px; text-transform: uppercase; text-align: center; color: #fff; cursor: pointer; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }\n.btn.v + .btn.v { margin-left: 8px; }\n.btn.v:before { content: \"\"; display: block; height: 20px; background: no-repeat 50% 50%; margin: 0; }\n.btn.v > span { display: block; margin-top: 9px; }\n.btn.v.save:before { background-image: url('../../assets/pic-btn-save.svg'); }\n.btn.v.del { background: #000; }\n.btn.v.del.alt { background: #606A74; }\n.btn.v.del:before {  background-image: url('../../assets/pic-btn-del.svg'); }\n.btn.v.cancel { background: #606A74;  }\n.btn.v.cancel:before { background-image: url('../../assets/pic-btn-cancel.svg'); }\n/* .btn.v.add {  } */\n.btn.v.add:before { background-image: url('../../assets/pic-btn-plus.svg'); }\n.btn.v.calc { background: #fff; color: #2C3640; }\n.btn.v.calc:before { background-image: url('../../assets/pic-btn-calc.svg'); }\n.btn.v.send { background: #fff; color: #2C3640; }\n.btn.v.send:before { background-image: url('../../assets/pic-btn-send.svg'); }\n.btn.v.def { background: #fff; color: #2C3640; }\n.btn.v.detail:before { background-image: url('../../assets/pic-btn-detail.svg'); }\n.btn.v.double:before { background-image: url('../../assets/pic-btn-double.svg'); }\n.btn.v.edit:before { background-image: url('../../assets/pic-btn-edit-w.svg'); }\n.btn.v.def.edit:before { background-image: url('../../assets/pic-btn-edit.svg'); }\n.btn.v.add-kp:before { background-image: url('../../assets/pic-btn-add-kp.svg'); }\n.btn.v.add-bit:before { background-image: url('../../assets/pic-btn-add-bit-w.svg'); }\n.btn.v.def.trade:before { background-image: url('../../assets/pic-btn-trade.svg'); }\n\n\n\n.form-block-title { font-size: 24px; line-height: 24px; font-weight: bold; color: #2C3640; padding: 26px 0 22px; }\n.form-block-title.between { padding: 2px 0 20px; }\n.form-block-title .btn.v { padding: 15px 16px 10px; font-size: 13px; line-height: 13px; text-transform: none; font-weight: normal; }\n.form-block-title .btn.v.del { background: #606A74; display: inline-block; vertical-align: top; margin: -10px 0 -10px 20px; }\n.form-block-title .btn.v.add {  display: inline-block; vertical-align: top; margin: -10px 0 -10px 20px; font-size: 15px; }\n.form-block-title .btn.v:before { display: inline-block; margin-bottom: 0; width: 20px; vertical-align: top; margin-right: 6px; margin-top: -5px; }\n\n\n.form-block { border: 1px solid #c3ccd6; padding: 40px 40px; box-shadow: 0 2px 8px rgba(0,0,0,0.08); background-color: var(--background2);}\n.form-block .form-row-sm { padding: 23px 40px 19px; margin: 0 -40px; display: flex; }\n.form-block .form-row-sm + .form-row-sm { border-top: 1px solid #C3CCD6; }\n.form-block .form-row-sm:first-child { margin-top: -40px; }\n.form-block .form-row-sm:last-child { margin-bottom: -40px; }\n.form-block .form-row-sm .title { width: 270px; color: #2C3640; }\n.form-block .form-row-sm .data { flex-grow: 1; font-size: 20px; line-height: 20px; color: #2C3640; font-weight: bold; }\n.form-block .form-row-sm .link { width: 90px; }\n.form-block .form-row-sm .link a { font-size: 13px; line-height: 13px; color: #DB563B; text-decoration: none; display: inline-block; }\n.form-block .form-row-sm .link a:after { content: \"\"; display: inline-block; margin-left: 6px; width: 10px; height: 10px; background: url('../../assets/pic-readmore.svg') no-repeat 100% 2px; }\n.form-block .stars { display: inline-block; vertical-align: top; margin: -2px 0 0 10px; }\n.form-block .stars span { display: inline-block; vertical-align: top; width: 20px; height: 20px; background: url('../../assets/pic-star.svg') no-repeat 50% 50%; }\n.form-block .stars span + span { margin-left: 5px; }\n.form-block .stars span.sel { background-image: url('../../assets/pic-star-sel.svg') }\n.form-block .flags > * + * { margin-left: 20px; }\n.form-block .plus { background: url('../../assets/pic-flag-plus.svg') no-repeat 0 -2px; padding-left: 25px; color: #81DD7C; }\n.form-block .minus { background: url('../../assets/pic-flag-minus.svg') no-repeat 0 -2px; padding-left: 25px; color: #FD7171; }\n.form-block .neutral { background: url('../../assets/pic-flag-neutral.svg') no-repeat 0 -2px; padding-left: 25px; color: #83909E; }\n.form-block .win { background: url('../../assets/pic-flag2-accept.svg') no-repeat 0 0; padding-left: 25px; color: #81DD7C; }\n.form-block .fail { background: url('../../assets/pic-flag2-decline.svg') no-repeat 0 0; padding-left: 25px; color: #FD7171; }\n\n.form-block * { outline: none; }\n.form-block .form-row { padding: 40px 40px; margin: 0 -40px; }\n.form-block .form-row + .form-row { border-top: 1px solid #C3CCD6; }\n.form-block .form-row:first-child { margin-top: -40px; }\n.form-block .form-row:last-child { margin-bottom: -40px; }\n.form-block .form-row.bg { background: var(--background, #F7F9FC)}\n.form-block .form-item-layout { display: flex; }\n.form-block .form-item-layout.padd { padding: 17px 0 39px; }\n.form-block .form-item-layout + .form-item-layout { margin-top: 25px; }\n.form-block .form-item-layout .form-item { width: 25%; }\n.form-block .form-item-layout .form-item + .form-item { margin-left: 24px; }\n.form-block .form-item-layout .form-item + .form-item.ms { margin-left: 5px; }\n.form-block .form-item-layout .form-item.w50 { width: 52.5%; }\n.form-block .form-item-layout .form-item.w37 { width: 37%; }\n\n.form-block .form-item.i2 { width: 50%; }\n.form-block .form-item.i3 { width: 33.3%; }\n.form-block .form-item.i4 { width: 25%; }\n.form-block .form-item.i5 { width: 20%; }\n.form-block .form-item.i6 { width: 16.6%; }\n.form-block .form-item.i8- { width: 12.5%; }\n.form-block .form-item.i8 { width: 11.677%; flex-shrink: 0; }\n.form-block .form-item.i9 { width: 10.547%; flex-shrink: 0; }\n.form-block .form-item.i10 { width: 10.547%; flex-shrink: 0; }\n.form-block .input.w70 { width: 70px; }\n.form-block .input.w72 { width: 72px; }\n.form-block .input.w80 { width: 80px; }\n.form-block .input.w96 { width: 96px; }\n.form-block .input.w168 { width: 168px; }\n.form-block .form-item.w { width: auto; flex-grow: 1; }\n.form-block .form-item.wa { width: auto; }\n.form-block .form-item.f { flex-shrink: 0; }\n.form-block .form-label { font-size: 10px; line-height: 10px; color: var(--text2, #606A74 ); text-transform: uppercase; margin-bottom: 7px; }\n.form-block .form-label sup { margin-top: -3px; vertical-align: top; display: inline-block; }\n/* .form-block input[type=\"text\"], .form-block select, .form-block textarea { font-family: 'regular', 'arial', 'sans-serif'; background: #F7F9FC; border: 1px solid #E0E5EB; color: #2C3640; font-size: 15px; line-height: 15px; border-radius: 6px; width: 100%; box-sizing: border-box; padding: 11px 13px 9px; }\n.form-block input[type=\"text\"][readonly], .form-block select[readonly], .form-block textarea[readonly] { background: transparent; border: 1px dashed #C3CCD6; color: #2C3640; }\n.form-block input[type=\"text\"]::placeholder { color: #606A74; } */\n\n.form-block .options { background: #F7F9FC; border-top: 1px solid #c3ccd6; margin: 0 -40px -40px; padding: 41px 40px 37px; }\n.form-block .options .lnk { display: flex; }\n.form-block .options .lnk .ttl { flex-grow: 1; font-size: 20px; line-height: 20px; color: #2C3640; font-weight: bold; }\n.form-block .options .lnk .link { font-size: 13px; line-height: 13px; color: #DB563B; cursor: pointer; margin-top: 4px;  }\n/* .form-block .options .lnk .link span {  } */\n.form-block .options .lnk .link span:after { content: \"\"; display: inline-block; margin-left: 6px; width: 10px; height: 10px; background: url('../../assets/pic-select-arrow.svg') no-repeat 100% 2px; }\n/* .form-block .options .lnk .link.show {  } */\n/* .form-block .options .lnk .link.show span {  } */\n.form-block .options .lnk-data { display: none; }\n\n.form-block [type=\"checkbox\"] { display: none; }\n.form-block [type=\"checkbox\"] + i { cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #F7F9FC; width: 18px; min-width: 18px; height: 18px; margin: -2px 10px -3px 0; }\n.form-block [type=\"checkbox\"] + i + span { color: #83909E; cursor: pointer; }\n.form-block [type=\"checkbox\"]:checked + i:before { content: \"\"; position: absolute; vertical-align: top; left: 5px; top: 5px; background: #DB563B; width: 8px; height: 8px; }\n.form-block [type=\"checkbox\"]:checked + i + span { color: #2C3640; }\n.form-block [type=\"checkbox\"]:checked + i + span span { color: #83909E; }\n\n.form-block [type=\"radio\"] { display: none; }\n.form-block [type=\"radio\"] + i { cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #F7F9FC; width: 18px; height: 18px; margin: -2px 10px -3px 0; border-radius: 50%; }\n.form-block [type=\"radio\"] + i + span { color: #83909E; cursor: pointer;  }\n.form-block [type=\"radio\"]:checked + i:before { content: \"\"; position: absolute; vertical-align: top; left: 5px; top: 5px; background: #DB563B; width: 8px; height: 8px; border-radius: 50%; }\n.form-block [type=\"radio\"]:checked + i + span { color: #2C3640; }\n\n.form-block .sep label { margin-left: 20px; }\n.form-block .sep2 label { margin-left: 20px; }\n.form-block .sep2 label:first-child { margin-left: 0; }\n\n/* .form-block select { width: 100%; }\n.form-block .ui-select { display: inline-block; vertical-align: middle; width: 100%; position: relative; margin-bottom: 0; text-align: left; font-size: 15px; line-height: 14px; border: none; box-sizing: border-box; }\n.form-block .ui-select-input { display: block; color: #2C3640; border: 1px solid #E0E5EB; background: #F7F9FC; padding: 13px 50px 11px 15px; box-sizing: border-box; overflow: hidden; white-space: nowrap; cursor: pointer; border-radius: 6px; }\n.form-block .ui-select-input-open { border-radius: 6px 6px 0 0; }\n.form-block .ui-select-button { display: flex; position: absolute; top: 0; right: 0; width: 40px; bottom: 0; cursor: pointer; font-size: 0; }\n.form-block .ui-select-button:hover { opacity: 0.7; }\n.form-block .ui-select-button:after { content: \"\"; transform: rotate(90deg); margin: auto; display: inline-block; width: 6px; height: 10px; transition: 0.1s; background: url('../../assets/pic-paginator-arrow.svg') no-repeat 50% 50%; }\n.form-block .ui-select-button-open:after { transform: rotate(270deg); }\n.form-block .ui-select-fader { position: absolute; top: 0; bottom: 0; }\n.form-block .ui-select-layer { display: block; position: absolute; border-collapse: separate; top: 39px; right: 0; left: 0; visibility: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.13); z-index: 10000; }\n.form-block .ui-select-list-scroller { display: block; max-height: 240px; background: #fff;  overflow: auto;  }\n.form-block .ui-select-list { display: block; height: auto; overflow: hidden; }\n.form-block .ui-select-item { display: block; font-size: 13px; line-height: 13px; color: #db563b; text-decoration: none; padding: 10px 5px 7px 10px; cursor: pointer; border-top: 1px solid #e0e6ed; }\n.form-block .ui-select-item:hover { color: #fff; background: #db563b;  }\n.form-block .ui-select-item.disabled { cursor: default; opacity: 0.3; }\n.form-block .ui-select-item.selected { color: #fff; background: #db563b; }\n.form-block .ui-select-item.selected:hover { background: #e99786; }\n.form-block .form-row.bg .ui-select-input { background: #fff; } */\n\n.table [type=\"checkbox\"] { display: none; }\n.table [type=\"checkbox\"] + i { cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #fff; width: 18px; height: 18px; margin: -2px 0 -3px 0; }\n.table [type=\"checkbox\"] + i + span { color: #83909E; cursor: pointer; }\n.table [type=\"checkbox\"] + i:before { content: \"\"; position: absolute; vertical-align: top; left: 5px; top: 5px; background: #DB563B; width: 8px; height: 8px; opacity: 0; transition: 0.05s; }\n.table [type=\"checkbox\"]:checked + i:before { opacity: 1; }\n.table [type=\"checkbox\"]:checked + i + span { color: #2C3640; margin-left: 10px; }\n.table [type=\"checkbox\"]:checked + i + span span { color: #83909E; }\n\n.table [type=\"checkbox\"].switch { display: none; }\n.table [type=\"checkbox\"].switch + i { cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #fff; width: 38px; height: 14px; margin: 0 0 -3px 0; border-radius: 8px; }\n.table [type=\"checkbox\"].switch + i + span { color: #83909E; cursor: pointer; }\n.table [type=\"checkbox\"].switch + i:before { opacity: 1; content: \"\"; position: absolute; vertical-align: top; left: 2px; top: 2px; background: #E0E5EB; width: 16px; height: 10px; transition: 0.05s; border-radius: 5px; }\n.table [type=\"checkbox\"].switch:checked + i:before {  left: 20px; background: #DB563B; }\n.table [type=\"checkbox\"].switch:checked + i + span { color: #2C3640; margin-left: 10px; }\n.table [type=\"checkbox\"].switch:checked + i + span span { color: #83909E; }\n\n\n\n\n\n\n.t1 + .t1 { margin-top: 40px; }\n\n.t1 { width: 100%; border-collapse: collapse; box-shadow: 0 2px 8px rgba(0,0,0,0.08); margin-top: 38px; }\n.t1 th { background: #83909e; font-size: 13px; line-height: 15px; font-weight: normal; color: #fff; padding: 8px 11px 13px; text-align: center; }\n.t1 th.bg { background: #778490; }\n.t1 th.s { border-left: 1px solid #9ca6b1; }\n.t1 th.name { border-left: 1px solid #83909e; }\n.t1 th.name div { font-size: 15px; line-height: 20px; font-weight: bold; height: 31px; margin-top: 4px; padding-left: 7px; white-space: nowrap;}\n\n.t1 th.name input::-webkit-input-placeholder { color: #606A74; }\n.t1 th.name input:-ms-input-placeholder { color: #606A74; }\n.t1 th.name input::-moz-placeholder { color: #606A74; opacity: 1; }\n.t1 th.name input:-moz-placeholder { color: #606A74; opacity: 1; }\n\n.t1 th .l { display: flex; justify-content: center; align-items: center; height: 50px; flex-direction: column; margin-bottom: 10px; }\n.t1 .ico { width: 20px; height: 20px; background: no-repeat 50% 50%; margin-bottom: 13px; }\n.t1 .ico.air { background-image: url('../../assets/pic-service-air-w.svg'); }\n.t1 .ico.road { background-image: url('../../assets/pic-service-road-w.svg'); }\n.t1 .ico.sea { background-image: url('../../assets/pic-service-sea-w.svg'); }\n.t1 .ico.rail { background-image: url('../../assets/pic-service-rail-w.svg'); }\n.t1 td { padding: 15px 11px 12px; text-align: center; }\n.t1 .s { padding-left: 20px; }\n.t1 .e { padding-right: 20px; }\n.t1 .name { width: 308px; text-align: left; }\n.t1 .all { width: 20px; }\n.t1 [type=\"checkbox\"] + i { margin-right: 0; background: #fff; }\n.t1 .row td { border-bottom: 1px solid #e0e5eb; background: #fff; }\n.t1 .row td.bg { background: #f7f9fc; }\n.t1 .row td:first-child { border-left: 1px solid #e0e5eb; }\n.t1 .row td:last-child { border-right: 1px solid #e0e5eb; }\n.t1 .row td.s { border-left: 1px solid #e0e5eb; }\n.t1 .row .name div { display: flex; }\n.t1 .row .name div :first-child { flex-grow: 1; color: #2C3640; font-size: 15px; line-height: 20px; }\n.t1 .row .name .del { width: 16px; height: 16px; background: url('../../assets/pic-btn-del-gray.svg') no-repeat 50% 50%; cursor: pointer; margin: 1px 5px 0 0; }\n\n\n\n\n\n.radio-btn { display: inline-block; vertical-align: top; margin-top: -1px; }\n.radio-btn + .radio-btn { margin-left: 8px; }\n.radio-btn span { display: flex; vertical-align: top; border-radius: 6px; background: #fff; border: 1px solid transparent; width: 55px; height: 39px; text-align: center; box-shadow: 0 2px 8px rgba(0,0,0,0.08); box-sizing: border-box; cursor: pointer; }\n.radio-btn span svg { margin: auto; }\n.radio-btn :checked + span { border-color: #DB563B; }\n.radio-btn :checked + span svg path { fill: #DB563B; }\n\n.helper { display: inline-block; background: #DB563B; color: #fff; font-size: 10px; line-height: 10px; font-weight: bold; border-radius: 50%; width: 12px; text-align: center; padding: 2px 0 0; text-transform: none; margin-right: 4px; cursor: pointer; margin-top: -6px; }\n.helper span { display: none; }\n* + .helper { margin-left: 4px; }\n\n.form-block-sub-title { color: #2C3640; font-weight: bold; font-size: 20px; line-height: 20px; }\n\n.file-list { margin: 38px 0 15px;  }\n.file-list div { display: flex; border-top: 1px solid #E0E5EB; padding: 14px 0; width: 400px; }\n.file-list div:last-child { border-bottom: 1px solid #E0E5EB; }\n.file-list div > :first-child  {  color: #DB563B; font-weight: bold; flex-grow: 1; }\n.file-list div > :last-child { cursor: pointer; width: 16px; height: 16px; background: url('../../assets/pic-btn-del-gray.svg') no-repeat 50% 50%; }\n\n.btn.add-file { display: inline-block; color: #fff; padding: 13px 31px 10px 48px; cursor: pointer; background: #83909E url('../../assets/pic-btn-plus.svg') no-repeat 31px 50%; }\n.btn.add-item { display: inline-block; color: #fff; padding: 13px 31px 10px 48px; cursor: pointer; background: #83909E url('../../assets/pic-btn-plus.svg') no-repeat 31px 50%; }\n.btn.add-item-text { display: inline-block; color: #fff; text-decoration: none; white-space: nowrap; padding: 12px 13px 11px; cursor: pointer; background: #83909E ; }\n.btn.add-item-text:before { background: url('../../assets/pic-btn-plus.svg') no-repeat center; }\n\n.form-block .check-item { margin-top: 40px; }\n.form-block .check-item + .check-item { margin-top: 25px; }\n\n.form-block .temperature { font-size: 15px; line-height: 14px; margin-top: -11px; margin-bottom: -20px; }\n.form-block .temperature input { width: 50px; padding-left: 5px; padding-right: 5px; text-align: center; background: #fff; }\n.form-block .temperature .t { font-size: 13px; line-height: 12px; }\n.form-block .temperature .t sup { font-size: 7px; line-height: 12px; vertical-align: top; margin-top: 10px; display: inline-block; }\n.form-block .temperature .s { margin-left: 5px; margin-right: 5px; }\n\n.switch-block table.alt { margin-top: 40px; }\n.switch-block .btn.add-item { margin-top: 15px; }\n\ntable.alt { border-collapse: collapse; width: 100%; }\ntable.alt th { color: #606A74; font-size: 10px; line-height: 14px; font-weight: normal; text-align: left; text-transform: uppercase; border: solid #E0E5EB; border-width: 1px 0 1px; padding: 13px 6px 12px 0; width: 1%; }\ntable.alt th.sep { padding-right: 24px; }\ntable.alt th.r { text-align: right; }\ntable.alt .wa { width: auto; }\ntable.alt .wf { width: 244px; }\ntable.alt .nm { font-weight: bold; color: #2C3640; }\ntable.alt .r input { text-align: right; }\ntable.alt th:last-child { padding-right: 0; }\ntable.alt td { border-bottom: 1px solid #E0E5EB; padding: 15px 6px 16px 0; }\ntable.alt td.sep { padding-right: 24px; }\ntable.alt td:last-child { padding-right: 0; }\ntable.alt .del { width: 14px; height: 16px; display: inline-block; background: url('../../assets/pic-btn-del-gray.svg') no-repeat 50% 50%; cursor: pointer; }\n\n\n\n\n\n.main-field { padding: 0px 24px 24px; }\n/* .main-field .fn { ; } */\n.main-field .table { box-shadow: 0 2px 8px rgba(0,0,0,0.08); /*border: 1px solid #e0e5eb;*/ }\n.main-field .table th:first-child { border-left: 1px solid #83909E; }\n.main-field .table td:first-child { border-left: 1px solid #e0e5eb; }\n.main-field .table td:last-child { border-right: 1px solid #e0e5eb; }\n.main-field .table tr:last-child td { border-bottom: 1px solid #e0e5eb; }\n\n.table th .btn { background: #fff; padding: 7px 8px 6px; color: #2C3640; font-size: 10px; line-height: 10px; text-transform: uppercase; cursor: pointer; }\n.table th .btn.send span { background: url('../../assets/pic-btn-send.svg') no-repeat 0 0; background-size: 12px auto; display: inline-block; padding: 2px 0 1px 17px;  }\n\n.table .fn { display: inline-block; width: 36px; height: 36px; background: no-repeat 50% 50%; font-size: 11px; line-height: 11px; color: #DB563B; vertical-align: top; text-align: center; }\n.table .fn.edit { background-image: url('../../assets/pic-btn-edit.svg'); }\n.table .fn.double { background-image: url('../../assets/pic-btn-double.svg'); }\n.table .fn.nodouble { background-image: url('../../assets/pic-btn-nodouble.svg'); }\n.table .fn.pdf { padding-top: 14px; text-decoration: none; height: 22px; }\n.table .fn.txt { padding-top: 14px; text-decoration: none; height: 22px; }\n.table .fn.del { background-image: url('../../assets/pic-btn-del-gray.svg'); }\n\n\n/* .table .route-type {} */\n.table .route-type.air { width: 22px; height: 20px;; display: inline-block; vertical-align: top; }\n.table .route-type.air.direct { background: url('../../assets/pic-transport-type-air.svg') no-repeat 50% 50%;  }\n.table .route-type.air.transit { background: url('../../assets/pic-transport-type-air2.svg') no-repeat 50% 50%; }\n.table tr.sel td { background: #EDF2F7 !important; }\n\n\n/* .detail {} */\n.detail * { box-sizing: border-box; }\n.detail > td { padding: 0 !important; height: auto; border-bottom: none; }\n.detail .layout { background: #fff; border: 1px solid #E0E5EB; }\n.detail .layout .top { display: flex; border-bottom: 1px solid #E0E5EB; }\n.detail .layout .bottom { padding: 40px 40px 37px; }\n.detail .layout .bottom .title { color: #606A74; }\n.detail .layout .bottom .title:before { content: \"i\"; margin-right: 5px; display: inline-block; background: #83909E; vertical-align: top; width: 12px; height: 12px; font-size: 10px; line-height: 14px; text-align: center; color: #fff; font-weight: bold; border-radius: 50%; }\n.detail .layout .bottom .text { font-size: 15px; line-height: 22px; margin-top: 14px; }\n.detail .layout .top > div + div { border-left: 1px solid #E0E5EB; }\n.detail .detail-block { padding: 25px 25px 24px; background: #EDF2F7; display: none;  }\n.detail .info { width: 456px; flex-shrink: 0; border: 1px solid #E0E5EB; padding: 33px 40px; }\n.detail .included { border: 1px solid #E0E5EB; padding: 33px 40px; flex-grow: 1; }\n.detail .block-title { font-size: 22px; line-height: 22px; font-weight: bold; margin-bottom: 38px; }\n.detail .block-title span { color: #606A74; }\n.detail .summary-amount { display: flex; margin-bottom: 23px; }\n.detail .summary-amount .box { background: #fff; border: 1px solid #E0E5EB; padding: 15px 22px; }\n.detail .summary-amount .sign { font-size: 32px; line-height: 32px; color: #83909E; font-weight: bold; width: 40px; text-align: center; margin: auto 0; }\n.detail .summary-amount .lbl { font-size: 13px; line-height: 12px; color: #2C3640; margin-bottom: 8px; }\n.detail .summary-amount .lbl.arr { color: #DB563B; }\n.detail .summary-amount .lbl.arr:before { content: \"\"; display: inline-block; margin: 0 5px 0 0; vertical-align: top; width: 8px; height: 8px; background: url('../../assets/pic-double-arrow.svg') no-repeat 50% 50%;  }\n.detail .summary-amount .price { font-size: 32px; line-height: 32px; color: #2C3640; font-weight: bold; }\n.detail .summary-amount .price.total { color: #DB563B; }\n.detail .summary { width: 456px; flex-shrink: 0; }\n.detail .summary .acc { padding: 34px 40px 30px; background: #83909E; color: #fff; }\n.detail .summary .acc.int { background: transparent; border-bottom: 1px solid #E0E5EB; }\n.detail .summary .acc.int .summ { font-size: 32px; line-height: 32px; color: #DB563B; }\n.detail .summary .acc .summ { font-size: 32px; line-height: 32px; }\n.detail .summary .acc .summ span { font-weight: bold; }\n.detail .summary .acc .desc { font-size: 13px; line-height: 13px; margin-top: 11px; }\n.detail .summary .card { padding: 39px 40px 43px; display: flex; }\n.detail .summary .f { padding: 5px 40px 40px; display: flex; }\n.detail .summary .f > * { width: 50%; }\n.detail .summary .f .title { color: #606A74; }\n.detail .summary .f .stars { display: block; margin-top: 5px; }\n.detail .summary .f .stars span { display: inline-block; width: 14px; height: 14px; background: url('../../assets/pic-star.svg') no-repeat; background-size: 14px; }\n.detail .summary .f .stars span + span { margin-left: 2px; }\n.detail .summary .f .stars span.sel { background-image: url('../../assets/pic-star-sel.svg');  }\n.detail .summary .f .rating .val { font-size: 22px; line-height: 22px; font-weight: bold; margin-top: 5px; }\n.detail .summary .f .torg .data { margin-top: 2px; }\n.detail .summary .f .torg .data span { font-size: 22px; line-height: 22px; font-weight: bold; padding: 27px 0 0 0; background: no-repeat center top; display: inline-block; vertical-align: top; }\n.detail .summary .f .torg .data span + span { margin-left: 17px; }\n.detail .summary .f .torg .data span.win { color: #81DD7C; background-image: url('../../assets/pic-flag-plus.svg'); }\n.detail .summary .f .torg .data span.fail { color: #FD7171; background-image: url('../../assets/pic-flag-minus.svg'); }\n.detail .summary .card .w { flex-grow: 1; }\n.detail .summary .card .lbl { color: #606A74; }\n.detail .summary .card .name { font-size: 22px; line-height: 26px; margin-top: 7px; margin-bottom: 5px; font-weight: bold; }\n.detail .summary .card .readmore { color: #DB563B; padding-right: 16px; background: url('../../assets/pic-readmore.svg') no-repeat right center; }\n.detail .summary .card .msg { width: 16px; height: 16px; margin-top: 1px; background: url('../../assets/pic-card-msg.svg') no-repeat; position: relative; }\n.detail .summary .card .msg span { position: absolute; top: -8px; right: -8px; background: #DB563B; color: #fff; width: 16px; height: 16px; border-radius: 50%; font-size: 10px; line-height: 10px; text-align: center; padding: 3px 0 0; }\n.detail .summary .card .msg span:empty { display: none; }\n.detail .summary .card .phone { width: 16px; height: 16px; background: url('../../assets/pic-card-phone.svg') no-repeat; margin-top: 20px; }\n.detail .summary .card .email { width: 16px; height: 16px; background: url('../../assets/pic-card-mail.svg') no-repeat; margin-top: 20px; }\n.detail .col-list { display: flex; }\n.detail .col-list > div { width: 50%; margin-left: 20px; }\n.detail .col-list > div:first-child { margin-left: 0; }\n/* .detail .info-list {  } */\n/* .detail .info-list .item {  } */\n.detail .info-list .item + .item { margin-top: 25px; }\n.detail .info-list .title { font-size: 13px; line-height: 12px; color: #606A74; margin-bottom: 8px; }\n.detail .info-list .val { font-size: 15px; line-height: 14px; font-weight: bold; }\n\n/* .detail .include-list {  } */\n/* .detail .include-list .item {  } */\n.detail .include-list .item + .item { margin-top: 25px; }\n.detail .include-list .title { font-size: 15px; line-height: 17px; margin-bottom: 11px; padding-left: 20px; background: url('../../assets/pic-include-decline.svg') no-repeat 0 1px; }\n.detail .include-list .title.allow { background: url('../../assets/pic-include-accept.svg') no-repeat 0 1px; }\n.detail .include-list .val { font-size: 13px; line-height: 12px; color: #606A74; }\n.detail .include-list .val span { color: #4B66AD; font-weight: bold; }\n\n.title-tab-header { display: inline-block; font-size: 15px; line-height: 14px; color: #83909E; margin-left: 10px; vertical-align: top; margin-top: -6px; }\n.title-tab-header span { display: inline-block; vertical-align: top; padding: 10px 12px 7px; border-bottom: 1px solid transparent; cursor: pointer; }\n.title-tab-header span + span { margin-left: 5px; }\n.title-tab-header span.sel { color: #2C3640; background: #fff; border-bottom-color: #DB563B; }\n\n\nth.clp { width: 20px; background: #606A74; }\n.collapser { display: inline-block; width: 16px; height: 16px; background: url('../../assets/pic-select-arrow.svg') no-repeat center center; cursor: pointer; transition: 0.15s; }\n.collapser.open { transform: rotate(180deg); }\n.detail-block { position: relative; }\n.detail-block .buttons { position: absolute; right: 13px; top: 38px; }\n.detail-block .buttons > * { display: block; margin-left: 0; min-width: 40px; height: 40px; }\n.detail-block .buttons .btn.v + .btn.v { margin-left: 0; margin-top: 12px; }\n/* .detail-block .buttons .edit {  } */\n/* .detail-block .buttons .double {  } */\n/* .detail-block .buttons .del {  } */\n\n\n/* .ui-tab {} */\n.ui-tab-body { display: none; }\n.ui-tab-body.sel { display: block; }\n\n\n.popup-field { position: absolute; top: 0; left: 0; right: 0; width: 100%; z-index: 100; }\n.popup-bg { position: fixed; left: 0; top: 0; right: 0; bottom: 0; background: rgba(44, 54, 64, 0.5); z-index: 100; }\n.popup { position: absolute; background: #fff; margin: 10px; z-index: 101; box-shadow: 0px 20px 10px rgba(36, 45, 67, 0.2); }\n.popup-body { height: 100%; display: flex; flex-direction: column; position: relative; }\n.popup-title { background: #fff; color: #2C3640; padding: 43px 35px 39px; font-weight: 700; font-size: 24px; line-height: 24px; }\n.popup-title ~ .popup-content { border-right: none; border-left: none; }\n.popup-content { flex-grow: 1; background: #F7F9FC; border: 1px solid #E0E5EB; padding: 25px 35px; font-size: 15px; line-height: 23px; }\n/* .popup-content-scrollable {  } */\n.popup-close { position: absolute; width: 20px; height: 20px; right: 14px; top: 14px; background: url('../../assets/pic-close.svg') no-repeat center center; cursor: pointer; }\n.popup-button-field {  background: #fff; padding: 40px 35px; display: flex; }\n.popup-button { background: #DB563B; color: #fff; padding: 10px 10px; text-align: center; min-width: 100px; border-radius: 6px; cursor: pointer; }\n.popup-arrow { position: absolute; width: 0; height: 0; border: solid transparent; box-sizing: content-box; }\n.popup-arrow.left { border-width: 10px 10px 10px 0; border-right-color: #F7F9FC; left: -18px; margin: 10px 0 10px 10px; }\n.popup-arrow.right { border-width: 10px 0 10px 10px; border-left-color: #F7F9FC; right: -18px; margin: 10px 10px 10px 0; }\n.popup-arrow.up { border-width: 0 10px 10px 10px; border-bottom-color: #F7F9FC; top: -18px; margin: 10px 10px 0; }\n.popup-arrow.down { border-width: 10px 10px 0 10px; border-top-color: #F7F9FC; bottom: -18px; margin: 0 10px 10px; }\n\n/* .popup-block-scroll {  } */\n.popup-body-scroll { background: #d6d6d6; position: absolute; right: 0; top: 0; bottom: 0; }\n.popup-body-scroll-horizontal { background: #d6d6d6; position: absolute; right: 0; left: 0; bottom: 0; }\n\n.popup-helper .popup-content { border: 1px solid #E0E5EB; }\n\n\n\n\n\n\n\n\n\n\n.main-table .form-placer { margin: 0; padding: 0; }\n.main-table .form-title { display: none; }\n\n\n.form-placer { margin: 0; padding-bottom: 50px; }\n.form-placer.simple { background: #fff; border: 1px solid #C3CCD6; box-shadow: 0 2px 8px rgba(36, 45, 67, 0.08); padding: 40px 40px; margin-bottom: 40px; }\n.form-placer.simple .form-items > .form-item + .form-item { margin-top: 25px; }\n.form-placer.simple .btn.v { padding: 10px 15px 8px; font-size: 15px; line-height: 15px; text-transform: none;  }\n.form-placer.simple .btn.v::before { display: inline-block; width: 16px; }\n.form-placer.simple .btn.v > span { display: inline-block; vertical-align: top; margin: 6px 0 0 10px; }\n.form-placer.simple .form-button-placer { text-align: left; border-top: 1px solid #C3CCD6; margin: 40px -40px 0; padding: 40px 40px 0; }\n\n/* .form-items {  } */\n.form-item { flex-grow: 1; }\n.form-button-placer { margin-top: 70px; text-align: right; }\n/* .form-group {  } */\n.form-group + .form-group { margin-top: 25px; }\n.form-group > div > .form-item + .form-item { margin-top: 25px; }\n.form-group-title { font-size: 24px; line-height: 24px; font-weight: bold;  margin-bottom: 24px; }\n.form-group-title + div { background: #fff; border: 1px solid #C3CCD6; box-shadow: 0 2px 8px rgba(36, 45, 67, 0.08); padding: 40px 40px; }.form-line { border-top: 1px solid #C3CCD6; margin: 40px -40px 40px; }\n.form-sub-title { font-size: 20px; line-height: 20px; font-weight: bold; color: #2C3640; margin: 40px 0 39px; }\n.form-sub-title:first-child { margin-top: 0; }\n.form-inline-group + .form-inline-group {/* margin-top: 25px;*/ }\n.form-inline-group > :first-child { display: none; }\n.form-inline-group > .form-data { flex-grow: 1; }\n.form-inline-group > .form-data > div { display: flex; gap: 24px; }\n.form-inline-group > .form-data .form-group-row { display: flex; gap: 24px;  }\n\n.form-inline-group .width_50 { width: 50%;}\n.form-inline-group .width_25 { width: 25%;}\n/* .form-data {  } */\n.text-control { background: #F7F9FC; border: 1px solid #E0E5EB; box-sizing: border-box; border-radius: 6px; font-size: 15px; line-height: 15px; padding: 10px 16px 10px; width: 100%; }\n.form-title { font-size: 10px; line-height: 10px; text-transform: uppercase; color: #606A74; margin-bottom: 7px; }\n.form-title .req { font-size: 16px; line-height: 10px;  color: #f00; vertical-align: top; margin: 2px 0 -6px 1px; display: inline-block; }\n\n.form-placer .ui-select { display: inline-block; vertical-align: middle; width: auto; position: relative; margin-bottom: 0; text-align: left; font-size: 15px; line-height: 14px; border: none; box-sizing: border-box; }\n.form-placer .ui-select-color { display: inline-block; width: 64px; height: 12px; position: relative; margin: -1px 10px 0 0; }\n.form-placer .ui-select-color:before { content: \"\"; display: block; position: absolute; left: 0; top: 0; right: 0; bottom: 0; border: 1px solid rgba(0,0,0,0.15); }\n.form-placer .ui-select-input { display: block; color: #2C3640; border: 1px solid #E0E5EB; background: #F7F9FC; padding: 13px 50px 11px 15px; box-sizing: border-box; overflow: hidden; white-space: nowrap; cursor: pointer; border-radius: 6px; }\n.form-placer .ui-select-input-open { border-radius: 6px 6px 0 0; }\n.form-placer .ui-select-button { display: flex; position: absolute; top: 0; right: 0; width: 40px; bottom: 0; cursor: pointer; font-size: 0; }\n.form-placer .ui-select-button:hover { opacity: 0.7; }\n.form-placer .ui-select-button:after { content: \"\";  margin: auto; display: inline-block; width: 10px; height: 6px; transition: 0.1s; background: url('../../assets/pic-select-arrow.svg') no-repeat 50% 50%; }\n/* .form-placer .ui-select-button-open { } */\n.form-placer .ui-select-button-open:after { transform: rotate(180deg); }\n.form-placer .ui-select-fader { position: absolute; top: 0; bottom: 0; }\n.form-placer .ui-select-layer { display: block; position: absolute; border-collapse: separate; top: 39px; right: 0; left: 0; visibility: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.13); z-index: 10000; }\n.form-placer .ui-select-list-scroller { display: block; max-height: 240px; background: #fff;  overflow: auto;  }\n.form-placer .ui-select-list { display: block; height: auto; overflow: hidden; }\n.form-placer .ui-select-item { display: block; font-size: 13px; line-height: 13px; color: #db563b; text-decoration: none; padding: 10px 5px 7px 10px; cursor: pointer; border-top: 1px solid #e0e6ed; }\n.form-placer .ui-select-item:hover { color: #fff; background: #db563b;  }\n.form-placer .ui-select-item.disabled { cursor: default; opacity: 0.3; }\n/* .form-placer .ui-select-item.odd {} */\n/* .form-placer .ui-select-item.odd:hover {} */\n.form-placer .ui-select-item.selected { color: #fff; background: #db563b; }\n.form-placer .ui-select-item.selected:hover { background: #e99786; }\n\n/* .form-placer .form-checkbox-group {  } */\n/* .form-placer .form-checkbox-group > div {  } */\n.form-placer .form-checkbox-group > div + div { margin-top: 25px; }\n\n.form-placer .checkbox-group-inline { display: flex; }\n.form-placer .checkbox-group-inline .form-checkbox-group { display: flex; }\n.form-placer .checkbox-group-inline .form-title { font-size: 16px; line-height: 18px; text-transform: none; color: #606A74; margin-bottom: 0; margin-right: 20px; }\n.form-placer .checkbox-group-inline .form-checkbox-group > div + div { margin-top: 0; margin-left: 20px; }\n\n/* .form-placer .form-radio-group {  } */\n/* .form-placer .form-radio-group > div {  } */\n.form-placer .form-radio-group > div + div { margin-top: 25px; }\n\n.form-placer .radio-group-inline { display: flex; }\n.form-placer .radio-group-inline .form-radio-group { display: flex; }\n.form-placer .radio-group-inline .form-title { font-size: 16px; line-height: 18px; text-transform: none; color: #606A74; margin-bottom: 0; margin-right: 20px; }\n.form-placer .radio-group-inline .form-radio-group > div + div { margin-top: 0; margin-left: 20px; }\n\n.form-placer .checkbox { display: flex; }\n.form-placer [type=\"checkbox\"] { display: none; }\n.form-placer [type=\"checkbox\"] + i { flex-shrink: 0; cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #F7F9FC; width: 18px; height: 18px; margin: -2px 10px -3px 0; }\n.form-placer [type=\"checkbox\"] + i + div { color: #83909E; cursor: pointer; display: inline-block; vertical-align: top; }\n.form-placer [type=\"checkbox\"]:checked + i:before { content: \"\"; position: absolute; vertical-align: top; left: 5px; top: 5px; background: #DB563B; width: 8px; height: 8px; }\n.form-placer [type=\"checkbox\"]:checked + i + div { color: #2C3640; }\n.form-placer [type=\"checkbox\"]:checked + i + div span { color: #83909E; }\n\n.form-placer .radio { display: flex; }\n.form-placer [type=\"radio\"] { display: none; }\n.form-placer [type=\"radio\"] + i { flex-shrink: 0; cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #F7F9FC; width: 18px; height: 18px; margin: -2px 10px -3px 0; border-radius: 50%; }\n.form-placer [type=\"radio\"] + i + div { color: #83909E; cursor: pointer; display: inline-block; vertical-align: top; }\n.form-placer [type=\"radio\"]:checked + i:before { content: \"\"; position: absolute; vertical-align: top; left: 5px; top: 5px; background: #DB563B; width: 8px; height: 8px; border-radius: 50%; }\n.form-placer [type=\"radio\"]:checked + i + div { color: #2C3640; }\n\n.form-placer [type=\"checkbox\"].switch { display: none; }\n.form-placer [type=\"checkbox\"].switch + i { cursor: pointer; display: inline-block; vertical-align: top; position: relative; border: 1px solid #E0E5EB; background: #fff; width: 38px; height: 14px; margin: 0 0 -3px 0; border-radius: 8px; }\n.form-placer [type=\"checkbox\"].switch + i + span { color: #83909E; cursor: pointer; }\n.form-placer [type=\"checkbox\"].switch + i:before { opacity: 1; content: \"\"; position: absolute; vertical-align: top; left: 2px; top: 2px; background: #E0E5EB; width: 16px; height: 10px; transition: 0.05s; border-radius: 5px; }\n.form-placer [type=\"checkbox\"].switch:checked + i:before {  left: 20px; background: #DB563B; }\n.form-placer [type=\"checkbox\"].switch:checked + i + span { color: #2C3640; margin-left: 10px; }\n.form-placer [type=\"checkbox\"].switch:checked + i + span span { color: #83909E; }\n\n/* .switch {} */\n.switch .switch-title { cursor: pointer; font-size: 15px; line-height: 14px; vertical-align: top; margin: 2px 0 0 6px; display: inline-block; color: #606A74; }\n.switch input { display: none; }\n.switch .switcher { box-sizing: border-box; border: 1px solid #E0E5EB; width: 40px; height: 16px; border-radius: 50px; position: relative; display: inline-block; vertical-align: top; overflow: hidden; cursor: pointer; }\n.switch .switcher .bg { display: flex; width: 200%; height: 100%; margin-left: -100%; transition: margin 0.1s ease-in 0s; text-transform: uppercase; }\n.switch .switcher .bg:before,\n.switch .switcher .bg:after { display: block; float: left; text-align: center; width: 50%;  padding: 0; line-height: 10px; font-size: 10px; color: white; font-weight: bold; margin: auto 0; }\n.switch .switcher .bg:before { content: attr(data-on); padding-right: 21px; color: #919191; }\n.switch .switcher .bg:after { content: attr(data-off); padding-left: 22px;  color: #919191;  }\n.switch .switcher .thumb { background: #E0E5EB; display: block; width: 16px; right: calc(100% - 18px); margin: 0; filter: grayscale(1); opacity: 0.7; border-radius: 50px; position: absolute; top: 2px; bottom: 2px;  transition: all 0.1s ease-in 0s; }\n\n.switch.outer .switcher .bg:before,\n.switch.outer .switcher .bg:after { display: none; }\n.switch.outer .switch-title:before { display: block; content: attr(data-off); }\n\n.switch input:checked ~ .switcher  {  border-color: #C3CCD6; background: #fff; }\n.switch input:checked ~ .switcher .bg { margin-left: 0; }\n.switch input:checked ~ .switcher .thumb { right: 2px; filter: grayscale(0); opacity: 1; background: #DB563B; }\n.switch input:checked ~ .switch-title { color: #2C3640; }\n.switch.outer input:checked ~.switch-title:before { content: attr(data-on); }\n\n.ui-file { display: flex; position: relative; background: #F7F9FC; border: 1px solid #E0E5EB; box-sizing: border-box; border-radius: 6px; font-size: 15px; line-height: 15px; width: 100%; overflow: hidden; }\n.ui-file-button { position: absolute; right: 40px; top: 0; bottom: 0; border-left: 1px solid #E0E5EB; width: 40px; font-size: 0; background: #fff url('../../assets/pic-btn-edit.svg') no-repeat center center; cursor: pointer; }\n.ui-file-reset-button { position: absolute; right: 0; top: 0; bottom: 0; border-left: 1px solid #E0E5EB; width: 40px; background: #fff url('../../assets/pic-btn-del-gray.svg') no-repeat center center; cursor: pointer; }\n.ui-file-filename { padding: 12px 16px 11px }\n/* .ui-file-filename span {  } */\n.ui-file-input { display: none; }\n\n.form-input-prepend { font-size: 15px; line-height: 22px; color: #606A74; padding: 0 0 3px 14px; border-left: 2px solid #DB563B; margin: 0 0 22px; }\n\n/* .form-tab { } */\n.form-tab .tab-header-placer { display: flex; border-bottom: 1px solid #C3CCD6; }\n.form-tab .form-tab-header { background: #F7F9FC; border: 1px solid #C3CCD6; border-left: none; color: #606A74; padding: 12px 24px 12px; cursor: pointer; margin-bottom: -1px; }\n.form-tab .form-tab-header:first-child {  border-left: 1px solid #C3CCD6; }\n.form-tab .form-tab-header.last {  border-right: 1px solid #C3CCD6; }\n.form-tab .form-tab-header.sel { background: #FFFFFF; border-bottom-color: transparent; }\n.form-tab .tab-body-placer { margin-top: 24px; }\n.form-tab .form-tab-body { display: none; }\n.form-tab .form-tab-body.sel { display: block; }\n\n.break-crumbs { color: #4B66AD; display: flex; gap: 12px; flex-direction: row; font-size: 13px; line-height: 1; margin-left: 24px; }\n.break-crumbs .del-crumbs { color: #83909E; }\n.break-crumbs a { color: #83909E; text-decoration: none; }\n\n/* .mat-select-panel { background: #f00; } */\n\n\n/* mat-form-field .mat-form-field-infix { border: none; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-wrapper { margin: 0; padding: 0; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-flex { margin-top: 0; padding: 0 13px 0 13px; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-outline { top: 0; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-outline > * { background: #F7F9FC; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-outline-thick { color: rgba(0, 0, 0, 0.3); }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-outline-thick > * { border-width: 1px !important; }\nmat-form-field.mat-form-field-appearance-outline .mat-form-field-infix { padding: 11px 0 12px; }\nmat-form-field.mat-form-field-appearance-outline .mat-select-arrow-wrapper { transform: none; }\nmat-form-field.mat-form-field-appearance-outline .mat-select-arrow { width: 10px; height: 6px; border: none; margin: 0; background: url('../../assets/pic-select-arrow.svg') no-repeat; } */\n\napp-settings { display: flex; flex-direction: column; flex: 1 1 auto; }\n\n.hidden { display: none !important; }\n.error { color: hsl(0, 100%, 47%); padding: 5px 0 0 5px; font-size: 13px; }\n\n.sort-dir-asc, .sort-dir-desc { position: relative; }\n.sort-dir-asc::after { content: \"↓\"; position: relative; left: 0.5rem; }\n.sort-dir-desc::after { content: \"↑\"; position: relative; left: 0.5rem; }\n\n.form-button-right {\n  padding-top: 40px;\n  padding-bottom: 40px;\n  text-align: right;\n}\n\n\n/* table list begin */\n.nowrap { white-space: nowrap; }\n\ntable {\n  font-size: 13px; line-height: 16px;\n  th.setting,td.setting{\n    min-width: 32px;\n  }\n}\n\n\n\n.table-form table { border-collapse: collapse;}\n.table-form table .td-block .column { display: flex; flex-grow: 1; box-sizing: border-box; padding: 0 8px; }\n.table-form table th {  background: #83909E;  color: #fff;  font-weight: normal; border-left: 1px solid #9ca6b1; padding: 0; text-align: left; height: 100%;  }\n.table-form table th .td-block-line { background: inherit;  }\n.table-form table th .td-block-line .column { background: #83909E; height: 22px; }\n.table-form table th:first-child { border-left: none; }\n.table-form table td {  background: #fff; font-weight: normal; border-left: 1px solid #E0E5EB; border-bottom: 1px solid #e0e5eb; padding: 0; box-sizing: border-box; height: 100%;  }\n.table-form table td:last-child { border-right: 1px solid #E0E5EB; }\n.table-form table tr:nth-child(odd) td {  background: #F7F9FC;  }\n.table-form table .td-block {  display: flex; flex-direction: row; width: 100%; align-items: center; box-sizing: border-box; padding: 9px 8px 7px; min-height: 48px; height: 100%;    }\n.table-form table .td-block .column { display: flex; padding: 0 8px; }\n.table-form table .td-block-column { display: flex; flex-direction: column; height: 100%;   }\n.table-form table .td-block-title { padding: 0 13px ; border-bottom: 1px solid #9ca6b1;  flex-grow: 1; display: flex; align-items: center; justify-content: center;  }\n.table-form table .td-block-line {  display: flex; flex-direction: row; height: 100%; align-items: center;  flex-grow: 1; gap: 1px; width: 100%; }\n.table-form table .td-block-line .column { padding: 0 13px; text-align: center; box-sizing: border-box; display: flex;  flex-grow: 1; align-items: center; }\n\n.table-border-block{\n  margin: 0 20px; border: 1px solid #E0E5EB; border-left: none;\n  /* flex-grow: 1; position: relative; */\n  /* background: #8a9099;\n  box-shadow: inset 0 0 5px rgba(0,0,0,0.3); */\n}\n.table-list {\n  \n  overflow-y: auto;\n  /* width: fit-content; */\n  max-width: 100%;\n  /* background: #e4e6e8; */\n  box-shadow: inset 0 0 4px rgba(0,0,0,0.1);\n\n  /* background-color: #ffffff;\n  background-image:\n    linear-gradient(#e0e0e0 1px, transparent 1px),\n    linear-gradient(90deg, #e0e0e0 1px, transparent 1px);\n  background-size: 20px 20px; */\n}\n.table-list table { width: 0; min-width: 0%; }\n\n.table-list.no-resize {width: auto; }\n.table-list.no-resize table {min-width: 100%;}\n\n\n\n/* .table-list { max-height: 650px; overflow: auto; } */\n/* .table-list { max-height: 650px; overflow: auto; width: fit-content; } */\n/* .table-list table {min-width: 100%;font-size: 13px; line-height: 16px;} */\n/* .table-list table { width: 100%; font-size: 13px; line-height: 16px;} */\n/* .table-list table { width: 100%; font-size: 13px; border-collapse: collapse; line-height: 16px; } */\n/* .table-list table { width: 100%; font-size: 13px; border-collapse: collapse; line-height: 16px; height: 100%; } */\n/* .table-list table tbody { border-left: 2px solid red; border-right: 1px solid #E0E5EB;} */\n/* .table-list td:first-child { border-left: none; } */\n/* .table-list .td-block .column { display: flex; flex-grow: 1; box-sizing: border-box; padding: 0 8px; } */\n/* .table-list .td-block .column { display: flex; flex-grow: 1; padding: 0 8px; } */\n.table-list th { color: var(--text3);  font-weight: normal;  padding: 0; text-align: left; height: 100%; box-shadow: inset 1px 0 0 color-mix(in srgb, var(--text3) 50%, transparent)}\n.table-list th:first-child { border-left: none; }\n.table-list td {  font-weight: normal; border-left: 1px solid var(--line); padding: 0; box-sizing: border-box; height: 100%;  }\n.table-list td:last-child { border-right: 1px solid #E0E5EB; }\n.table-list table tr:nth-child(even) td {  background: var(--background);  }\n.table-list .td-block {  display: flex; flex-direction: row; width: 100%; align-items: center; box-sizing: border-box; padding: 9px 8px 7px; min-height: 48px; height: 100%;    }\n.table-list .td-block .column { display: flex; padding: 0 8px; flex-grow: 1; }\n.table-list .td-block-column { display: flex; flex-direction: column; height: 100%;   }\n.table-list .td-block-title { height: 22px; padding: 0 13px ; box-shadow: inset 0 -1px 0 color-mix(in srgb, var(--text3) 50%, transparent);  flex-grow: 1; display: flex; align-items: center; justify-content: center;  }\n.table-list .td-block-line {  display: flex; flex-direction: row; height: 100%; align-items: center;  flex-grow: 1; gap: 1px; width: 100%; }\n.table-list .td-block-line .column { padding: 0 13px; text-align: center; box-sizing: border-box; display: flex;  flex-grow: 1; align-items: center; }\n.table-list th .td-block-line { background: inherit; }\n.table-list th .td-block-line .column { height: 22px; font-size: 12px; }\n\n.table-list .w5 { width: 5%; flex-grow: 0 !important; }\n.table-list .w6 { width: 6%; flex-grow: 0 !important; }\n.table-list .w7 { width: 7%; flex-grow: 0 !important; }\n.table-list .w10 { width: 10%; flex-grow: 0 !important; }\n.table-list .w15 { width: 15%; flex-grow: 0 !important; }\n.table-list .w20 { width: 20%; flex-grow: 0 !important; }\n.table-list .w25 { width: 25%; flex-grow: 0 !important; }\n.table-list .w30 { width: 30%; flex-grow: 0 !important; }\n.table-list .w33 { width: 33%; flex-grow: 0 !important; }\n.table-list .w40 { width: 40%; flex-grow: 0 !important; }\n.table-list .w50 { width: 50%; flex-grow: 0 !important; }\n.table-list .w60 { width: 60%; flex-grow: 0 !important; }\n.table-list .w70 { width: 70%; flex-grow: 0 !important; }\n.table-list .w80 { width: 80%; flex-grow: 0 !important; }\n.table-list .w90 { width: 90%; flex-grow: 0 !important; }\n.table-list .no-grow { flex-grow: 0 !important; }\n\n.table-list .center {  text-align: center; justify-content: center;  }\n.table-list .left {  text-align: left; justify-content: left;  }\n.table-list .right {  text-align: right; justify-content: right;  }\n.table-list .bold { font-weight: bold; }\n.table-list .gray { color: #83909E; }\n.table-list .bg_gray { background-color: #AAB7C5; color: #fff; }\n.table-list .red { color: #FD7171; }\n.table-list .bg_red { background-color: #FD7171; color: #fff; }\n.table-list .green { color: #61BA5D; }\n.table-list .bg_green { background-color: #81DD7C; color: #fff; }\n\ntd,th{\n  position: relative;\n}\n.table-list td.setting, .table-list th.setting { width: 32px; border-left: none; }\n.table-list th.setting {filter: brightness(90%); }\n.table-list .setting-link { width: 100%; height: 100%; background: url('../../assets/pic-dot-white-h.svg') center no-repeat; cursor: pointer; position: absolute;left: 0; top: 0; }\n\n.table-list .kso { white-space: nowrap; }\n.table-list .kso span { display: inline-block; background: #FD7171; width: 8px; height: 28px; margin: 0 1px 0 1px; }\n.table-list .kso span.sel { background: #81DD7C;  }\n\n.table-list .transport { white-space: nowrap; display: flex; align-items: center; gap: 8px; }\n\n.table-list .type { display: inline-block; width: 26px; height: 26px; min-width: 26px; }\n.table-list .type + .type { margin-left: 7px; }\n.table-list .type.air { background: url('../../assets/pic-service-air.svg') no-repeat 50% 50%; }\n.table-list .type.road { background: url('../../assets/pic-service-road.svg') no-repeat 50% 50%; }\n.table-list .type.rail { background: url('../../assets/pic-service-rail.svg') no-repeat 50% 50%; }\n.table-list .type.sea { background: url('../../assets/pic-service-sea.svg') no-repeat 50% 50%; }\n.table-list .type2 {  margin: -6px 9px -12px 0;}\n\n.table-list sup { line-height: 0; }\n\n\n/*РґРѕРїРёСЃР°С‚СЊ*/\n.subheader .search-box { display: flex; }\n.subheader .search-box:before { content: \"\"; width: 20px; background: url('../../assets/submenu-search.svg') no-repeat 50% 50%; margin-right: 6px; margin-top: -2px; }\n/* .subheader .search-box .holder {  } */\n.subheader .search-box input { border: none; font-size: 13px; line-height: 22px; color: var(--header_menu); background-color: inherit;\n &::placeholder {\n  color: var(--header_menu);\n} }\n/* .subheader .search-box input:focus { border: 1px solid var(--header_menu);}\n.subheader .search-box input:not(:placeholder-shown){ border: 1px solid var(--header_menu);} */\n\n\n/* table list end */\n\n.table-list .link-edit {\n  background: url('../../assets/pic-btn-edit.svg') no-repeat center center;\n}\n\n.table-list .link-del {\n  background: url('../../assets/pic-btn-del-gray.svg') no-repeat center center;\n}\n\n.table-list .link-pic {\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  text-decoration: none;\n  text-align: center;\n  vertical-align: top;\n}\n\nth.mat-header-cell:last-of-type, td.mat-cell:last-of-type, td.mat-footer-cell:last-of-type {\n  padding-right: unset !important;\n}\n\nth.mat-header-cell:first-of-type, td.mat-cell:first-of-type, td.mat-footer-cell:first-of-type {\n  padding-left: 0  !important;;\n}\n\n.mat-mdc-table {\n  font-family: unset !important;\n  background-color: #83909E;\n}\n\n.mat-header-cell {\n  font-size: 13px  !important;\n  font-weight: normal  !important;\n}\n\n.filter-item {\n  margin: auto;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n}\n\n.column-sortable {\n  cursor: pointer;\n}\n\n.datepiker{\n  display: flex;\n  justify-content: space-between;\n  background: inherit;\n  border: none;\n  color: #DB563B;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 15px;\n  width: 100%;\n  .btn-date{\n    margin-left: 5px;\n    display: block;\n    cursor: pointer;\n    background-image: url('../../assets/pic-btn-calendar.svg');\n    background-repeat: no-repeat;\n    width: 14px;\n    height: 14px;\n  }\n}\n\n.filter .input input{\n  background: #F7F9FC;\n  border: 1px solid #E0E5EB;\n  color: #2C3640;\n  font-size: 15px;\n  line-height: 15px;\n  border-radius: 6px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 11px 6px 9px;\n}\n\n\n\n.add.show.additional {\n  /* min-height: 100px; */\n  visibility: visible;  /* Элемент становится видимым */\n  opacity: 1;           /* Элемент становится прозрачным */\n  max-height: 400px;/*   Ширина становится 200px */\n  transform: translateY(0);\n  transition: opacity 1s ease, max-height 1s ease, visibility 1s ease, transform 1s ease;\n}\n\n.add.show.additional.hidden-filter {\n  /* min-height: 0; */\n  visibility: hidden;   /* Скрывает элемент изначально */\n  opacity: 0;           /* Элемент скрыт */\n  max-height: 0;         /* Начальная ширина 0 */\n  transform: translateY(-200px); /* Сдвиг влево на 20px */\n  transition: opacity 1s ease, max-height 1s ease, visibility 1s ease, transform 1s ease;\n}\n\n\n.table-list.kp {\n  min-height: 101px;\n  max-height: 205px;\n  border-bottom: 1px solid #E0E5EB;\n  overflow: auto;\n  margin: 0 20px;\n  table {\n    width: 100%;\n  }\n}\n\n\n.table-list .td-block .column.link:hover,\n.table-list .td-block .link:hover {\n  cursor: pointer;\n  text-decoration-line: underline;\n}\n\n/* .filter-item .search-box input{\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 12px;\n} */\n\na{\n  text-decoration: none;\n}\n\n.main_page_info{\n  display: flex;\n  .rate_info{\n    border-right: 1px solid #C3CCD6;\n    margin-right: 24px;\n    .title{\n      color:#DB563B;\n      font-size: 26px;\n      font-weight: 700;\n      line-height: 26px;\n      text-align: left;\n      margin-bottom: 5px;\n    }\n    .subtitle{\n      font-size: 13px;\n      font-weight: 400;\n      line-height: 12px;\n      text-align: left;\n      color: #606A74;\n    }\n  }\n}\n.subheader .back{\n  margin-right: 15px;\n  cursor: pointer;\n  background: url('../../assets/pic-backto2.svg') no-repeat 50% 50%;\n  width: 13px;\n}\n\n.inverted_exclamation_mark{\n  min-height: 16px;\n  min-width: 16px;\n  height: 16px;\n  width: 16px;\n  border-radius: 50%;\n  border: none;\n  padding: 0;\n  margin: 0 10px 0 0;\n  background-image: url('../../assets/pic-btn-inverted-exclamation-mark.svg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #DB563B;\n  cursor: pointer;\n}\n.btn-map-blue{\n  min-height: 16px;\n  min-width: 16px;\n  height: 16px;\n  width: 16px;\n  border: none;\n  padding: 0;\n  margin: 0 10px 0 auto;\n  background-image: url('../../assets/pic-btn-map-blue.svg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: inherit;\n  cursor: pointer;\n}\n.btn-globe-blue{\n  min-height: 16px;\n  min-width: 16px;\n  height: 16px;\n  width: 16px;\n  border: none;\n  padding: 0;\n  margin: 0;\n  background-image: url('../../assets/globe.svg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: inherit;\n  cursor: pointer;\n}\n","/* const */\nbody{\n  --mat-option-selected-state-label-text-color: #DB563B;\n  --mat-option-label-text-line-height: 15px;\n  --mat-option-label-text-size: 13px;\n\n  --mat-menu-item-label-text-line-height:13px;\n  --mat-menu-item-label-text-size:13px;\n\n  --mat-table-header-container-height:48px;\n  --mat-table-header-headline-line-height:13px;\n  --mat-table-header-headline-size:13px;\n}\n\n/* components */\n/* popap-analytics */\n.popap-analytics .cross {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n}\n.popap-analytics .mat-mdc-dialog-content {\n  border-top: 1px solid #9ca6b1;\n  background-color: #F7F9FC;\n}\n\n/* MAT SELECT */\nform mat-select.mat-mdc-select, /* для форм */\n.filter .additional mat-select.mat-mdc-select { /* для доп фильтров */\n  /* базовый дизайн мат селектора */\n  background: #F7F9FC;\n  font-size: 15px;\n  line-height: 15px;\n  border-radius: 6px;\n  .mat-mdc-select-trigger {\n    border: 1px solid var(--line);\n    border-radius: 6px;\n    padding: 0 13px; margin: 0;\n    box-sizing: border-box;\n    height: 40px;\n  } \n}\nform .bg mat-select.mat-mdc-select {background: white;}\napp-paginator mat-select.mat-mdc-select/* для пагинатора */{\n  font-size: 13px;\n  line-height: 15px;\n  color: #606A74;\n  .mat-mdc-select-trigger {\n    box-shadow: 0px 2px 8px 0px rgba(36, 45, 67, 0.08);\n    background: white;\n    border-radius: 6px;\n    padding: 0 13px; margin: 0;\n    box-sizing: border-box;\n    height: 40px;\n  } \n}\n/* стрелочка в мат селекторах */\nmat-select .mat-mdc-select-arrow {\n  background: url('../../assets/pic-select-arrow.svg') no-repeat;\n  width: 10px; height: 10px;\n  background-position: center;\n  svg {display: none;}\n}\nmat-select[aria-expanded='true'] .mat-mdc-select-arrow {\n  transform: scaleY(-1);\n}\n\n/* MAT OPTION */\nmat-option.mat-mdc-option{\n  min-height: auto;\n  padding-top: 6px; \n  padding-bottom: 6px;\n  .mat-mdc-option-pseudo-checkbox{\n    display: none;\n  }\n}\n\n/* MAT CHECKBOX */\nmat-checkbox.mat-mdc-checkbox .mat-mdc-checkbox-ripple, \nmat-checkbox.mat-mdc-checkbox .mdc-checkbox__ripple,\nmat-checkbox.mat-mdc-checkbox .mat-mdc-checkbox-touch-target,\nmat-checkbox.mat-mdc-checkbox .mdc-checkbox__background {\n  display: none; \n}\n\nmat-checkbox.mat-mdc-checkbox{\n  margin: 0;\n  padding: 0;\n  --mdc-checkbox-state-layer-size: 20px;\n}\nmat-checkbox.mat-mdc-checkbox input[type=\"checkbox\"] {\n  width: 20px; height: 20px;\n  border: 1px solid #E0E5EB;\n  background: #F7F9FC;\n  display: block;\n  opacity: 1;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n}\nmat-checkbox.mat-mdc-checkbox input[type=\"checkbox\"]::after {\n  content: '';\n  display: block;\n  width: 9px;\n  background-color: #DB563B;\n  padding: 0;\n  margin: auto 0;\n}\n/* mat-checkbox.mat-mdc-checkbox input[type=\"checkbox\"].mdc-checkbox--selected::after {\n  height: 9px;\n} */\nmat-checkbox.mat-mdc-checkbox-checked{\n  label{\n    font-weight: bold;\n  }\n  input[type=\"checkbox\"].mdc-checkbox--selected::after {\n    height: 9px;\n  }\n}\nmat-checkbox.mat-mdc-checkbox input[type=\"checkbox\"]:indeterminate::after {\n  height: 2px;\n}\n\n.switcher .mdc-checkbox{\n  width: 40px;\n  height: 18px;\n  flex: none;\n\n}\nmat-checkbox.mat-mdc-checkbox.switcher input[type=\"checkbox\"] {\n  width: 40px;\n  height: 18px;\n  border-radius: 8px;\n  border: 1px solid #C3CCD6;\n  justify-content: stretch;\n}\nmat-checkbox.mat-mdc-checkbox.switcher  input[type=\"checkbox\"]::after {\n  width: 16px;\n  height: 10px;\n  border-radius: 5px;\n  margin: auto 3px;\n  margin-left: 3px;\n  background-color: #E0E5EB;\n}\nmat-checkbox.mat-mdc-checkbox.switcher input[type=\"checkbox\"].mdc-checkbox--selected::after {\n  margin-left: auto;\n  background-color: #DB563B;\n}\n\n\n\n/* если надо поменять местами чекбокс и текс добавляем класс reverse */\nmat-checkbox.mat-mdc-checkbox.reverse{ \n  .mdc-form-field {flex-direction: row-reverse;}\n}  \n\n/* MAT MENU PANEL */\n/* для попапа валют */\n.mat-mdc-menu-panel.currencys-popap-menu {\n  margin-top: 4px;\n  margin-left: -15px;\n  pointer-events: none;\n  .mat-mdc-menu-content {\n    padding: 0;\n  }\n}\n\n/* .mat-mdc-checkbox .mdc-form-field .mdc-checkbox,\n.mat-mdc-checkbox .mdc-form-field .mdc-label {\n  display: none !important;\n}\n.checkbox-label .mat-mdc-checkbox{\n  display: flex;\n}\n.mat-mdc-checkbox .mdc-form-field {\n  cursor: pointer;\n  vertical-align: top; position: relative;\n  border: 1px solid #E0E5EB;\n  background: #F7F9FC;\n  width: 18px; height: 18px;\n  display: flex; justify-content: center; align-items: center;\n}\n.mat-mdc-checkbox .mdc-form-field::after {\n  content: \"\";\n  display: block;\n  background: #F7F9FC;\n  width: 8px; height: 8px;\n  margin: 0 ; padding: 0;\n}\n.mat-mdc-checkbox.mat-mdc-checkbox-checked .mdc-form-field::after{\n  content: \"\";\n  display: block;\n  background: #DB563B;\n  width: 8px; height: 8px;\n  margin: 0; padding: 0;\n}\n.mat-mdc-checkbox.mat-mdc-checkbox-indeterminate .mdc-form-field::after {\n  content: \"\";\n  display: block;\n  background: #DB563B;\n  width: 10px; height: 3px;\n  margin: 0; padding: 0;\n}\n.mat-mdc-checkbox.mat-mdc-checkbox-disabled {\n  opacity: 0.4;\n} */\n\n/* optgroup */\n/* optgroup-label */\n.mat-mdc-optgroup {\n  --mat-optgroup-label-text-color: #606A74;\n  --mat-optgroup-label-text-line-height: 10px;\n  --mat-optgroup-label-text-size: 10px;\n  \n  text-transform: uppercase;  \n  /* --mat-optgroup-label-text-tracking; */\n  /* --mat-optgroup-label-text-weight; */  \n  /* --mat-optgroup-label-text-font: */\n}","button{\n  border: none;\n  &:disabled {\n    cursor: auto;\n  } \n  &:hover:not(:disabled) {\n    opacity: 0.6;\n  }\n}\n\nbutton.icon {\n  background-color: inherit;\n  min-width: 16px;\n  min-height: 16px;\n  margin: 0;\n  padding: 0;\n  background-repeat: no-repeat;\n  background-position: center;\n}\nbutton.icon.delete-gr{\n  background-image: url('../../assets/pic-btn-del-gray.svg');  \n}\nbutton.icon.delete{\n  background-image: url('../../assets/pic-btn-del.svg');  \n}\nbutton.icon.edit{\n  background-image: url('../../assets/pic-btn-edit.svg');  \n}\nbutton.icon.edit-w{\n  background-image: url('../../assets/pic-btn-edit-w.svg');  \n}\n\n\n.edit-form .btns.size56 {\n  gap: 8px;\n  display: flex;\n  button{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    color: white;\n    height: 56px;\n    min-width: 56px;\n    border-radius: 6px;\n    padding: 6px;\n\n    font-size: 10px;\n    line-height: 10px;\n    text-transform: uppercase;\n    text-align: center;\n  }\n\n  button.save {\n    background-color: #DB563B;\n  }\n  button.del {\n    background-color: black;\n  }\n  button.cancel {\n    background-color: #606A74;\n  }\n\n  button::before{\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n  button.save::before {\n    background-image: url('../../assets/pic-btn-save.svg');\n  }\n  button.del::before {\n    background-image: url('../../assets/pic-btn-del.svg');\n  }\n  button.cancel::before {\n    background-image: url('../../assets/pic-btn-cancel.svg');\n  }\n\n}\n\nbutton.long{\n  height: 40px;\n  display: flex;\n  align-items: center;\n  border-radius: 6px;\n  &::before{\n    display: block;\n    width: 20px;\n    height: 20px;\n    content: '';\n    background-repeat: no-repeat;\n    background-position: center;\n    margin-right: 6px;\n  }\n  &.save{\n    background-color: #DB563B;\n    color: white;\n    &::before{\n      background-image: url('../../assets/pic-btn-save.svg');\n    }\n  }\n}",".table-list table .compact-abbr .col-content {\n  letter-spacing: 2px;\n  white-space: nowrap;\n}\n.table-list table .flex-wrap {\n  display: flex;\n  gap: 6px;\n  flex-wrap: wrap;\n}\n\n.table-list table tbody tr td.light-green{\n  background: #e4ffe3 !important;\n}\n/* statuses in order-table */\n.table-list .td-block .column.status{ padding: 0;}\n.status .col-content{width: 30px; height: 30px; background-size: contain; background-repeat: no-repeat; background-position: center; margin: 0 auto;}\n.icon-status-1 .col-content{ background-image: url(../../assets/pic_cargo-status/1_departure_storage.svg) }\n.icon-status-2 .col-content{ background-image: url(../../assets/pic_cargo-status/2_transport_to_point.svg) }\n.icon-status-3 .col-content{ background-image: url(../../assets/pic_cargo-status/3_at_point.svg) }\n.icon-status-4 .col-content{ background-image: url(../../assets/pic_cargo-status/4_custom.svg) }\n.icon-status-5 .col-content{ background-image: url(../../assets/pic_cargo-status/5_transport.svg) }\n.icon-status-6 .col-content{ background-image: url(../../assets/pic_cargo-status/6_at_arrival_point.svg) }\n.icon-status-7 .col-content{ background-image: url(../../assets/pic_cargo-status/7_custom_import.svg) }\n.icon-status-8 .col-content{ background-image: url(../../assets/pic_cargo-status/8_delivery.svg) }\n.icon-status-9 .col-content{ background-image: url(../../assets/pic_cargo-status/9_delivered.svg) }\n\ntable{\n  --mat-table-row-item-label-text-color: var(--text);\n  --mat-table-row-item-outline-color: var(--line);\n  --mat-table-background-color: var(--background2)\n}\ntable.cdk-table thead{\n  background-color: var(--background3);\n}\n\n.table,table{\n  background-color: var(--background2);\n}",".form-block input[type=\"text\"], input[type=\"number\"],.form-block select, .form-block textarea, .filter .main input[type=\"text\"] { \n  font-family: 'regular', 'arial', 'sans-serif'; \n  background: var(--background, #F7F9FC);\n  border: 1px solid var(--line, #E0E5EB ); \n  color: var(--text, #2C3640 ); \n  font-size: 15px; line-height: 15px; \n  border-radius: 6px; \n  height: 40px; width: 100%; \n  box-sizing: border-box;\n  padding: 11.5px 13px; margin: 0;\n}\n.form-block .form-row.bg input[type=\"text\"], input[type=\"number\"],.form-block select, .form-block textarea, .filter .main input[type=\"text\"] { \n  background: var(--background2, white);\n}\n.form-block textarea {\n  min-height: fit-content;\n}\n\n.form-block input[type=\"text\"][readonly],input[type=\"number\"][readonly], .form-block select[readonly], .form-block textarea[readonly] { background: transparent; border: 1px dashed #C3CCD6; color: #2C3640; }\n.form-block input[type=\"text\"]::placeholder,input[type=\"number\"]::placeholder { color: #606A74; }\n.form-block .form-row.bg input[type=\"text\"] { background: #fff; }\n.form-block .form-row.bg input[type=\"text\"][readonly] { background: #EDF2F7; }\n.form-block .form-row.bg textarea { background: #fff; resize: none; }","form.edit-form{\n  width: 1280px;\n}\n/* form{\n  background-color: var(--background2);\n} */","/* .content{\n  --header_menu: #4B66AD;\n  --header_menu_text: #FFFFFF;\n  --background: #F7F9FC;\n  --background2: #FFFFFF;\n  --background3: #83909e;\n  --text: #212121;\n  --text2: #606a74;\n  --text3: #FFFFFF;\n  --line: #E0E5EB;\n  --accent: #db563b;\n  --accent_text: #FFFFFF;\n  --event_positive: #81dd7c;\n  --event_positive_text: #FFFFFF;\n  --event_negative: #fd7171;\n  --event_negative_text: #FFFFFF;\n  --event_neutral: #aab7c5;\n  --event_neutral_text: #FFFFFF;\n} */\n\n","@use '@angular/material' as mat;\n\n@include mat.all-component-typographies();\n@include mat.core();\n\n// Определение палитр\n$cargodrom-frontend-primary: mat.define-palette(mat.$indigo-palette);\n$cargodrom-frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\n$cargodrom-frontend-warn: mat.define-palette(mat.$red-palette);\n\n// Определение темы\n$cargodrom-frontend-theme: mat.define-light-theme((\n  color: (\n    primary: $cargodrom-frontend-primary,\n    accent: $cargodrom-frontend-accent,\n    warn: $cargodrom-frontend-warn,\n  )\n));\n\n// Применение всех компонентов с новой темой\n@include mat.all-component-themes($cargodrom-frontend-theme);\n\n// Импорт других стилей\n@import url('./app/styles/cargodrom.css');\n@import url('./app/styles/material.css');\n@import url('./app/styles/btn.css');\n@import url('./app/styles/table.css');\n@import url('./app/styles/input.css');\n@import url('./app/styles/form.css');\n@import url('./app/styles/const.css');\n\n\n\nhtml, body { height: 100%; }\nbody {\n  margin: 0;\n}\n\n\n\n/* Убирает стрелочки в Chrome, Safari, Edge, Opera */\ninput[type=\"number\"]::-webkit-outer-spin-button,\ninput[type=\"number\"]::-webkit-inner-spin-button {\n  -webkit-appearance: none; margin: 0;\n}\n/* Убирает стрелочки в Firefox */\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n}\n\n/* Стили только для Firefox */\n@-moz-document url-prefix() {\n}\n\n\n\n\n// /* Стилизованный скроллбар */\n// ::-webkit-scrollbar {\n//   width: 14px;\n//   margin: 20px;\n//   padding: 20px;\n// }\n\n// ::-webkit-scrollbar-track {\n//   background: linear-gradient(to bottom, #ff7eb3, #ff758c);\n//   border-radius: 10px;\n\n// }\n\n// ::-webkit-scrollbar-thumb {\n//   background: rgba(255, 255, 255, 0.7);\n//   border-radius: 10px;\n//   border: 3px solid transparent;\n//   background-clip: content-box;\n// }\n\n// ::-webkit-scrollbar-thumb:hover {\n//   background: rgba(255, 255, 255, 0.9);\n//   background-clip: content-box;\n// }\n\n// html {\n//   scrollbar-color: rgba(255, 255, 255, 0.7) #ff758c;\n//   scrollbar-width: thin;\n//   scroll-margin-left: 10px;\n// }\n\n// @use '@angular/material' as mat;\n\n// @include mat.core();\n// @include mat.strong-focus-indicators((\n//   border-style: dotted,\n//   border-width: 4px,\n//   border-radius: 2px,\n// ));\n\n// $cargodrom-frontend-primary: mat.define-palette(mat.$indigo-palette, 500);\n// $cargodrom-frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\n// $cargodrom-frontend-warn: mat.define-palette(mat.$red-palette);\n\n// $cargodrom-frontend-theme: mat.define-light-theme((\n//   color: (\n//     primary: $cargodrom-frontend-primary,\n//     accent: $cargodrom-frontend-accent,\n//     warn: $cargodrom-frontend-warn,\n//   )\n// ));\n\n// @include mat.all-component-themes($cargodrom-frontend-theme);\n// // @include mat.strong-focus-indicators-theme(purple);\n\n// @import url('./app/cargodrom.css');\n// html, body { height: 100%; }\n// body {\n//   margin: 0;\n\n// }\n\n\n// до обновы\n// For more information: https://material.angular.io/guide/theming\n// @use '@angular/material' as mat;\n\n// @include mat.all-legacy-component-typographies();\n// @include mat.legacy-core();\n\n// $cargodrom-frontend-primary: mat.define-palette(mat.$indigo-palette);\n// $cargodrom-frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\n\n\n// $cargodrom-frontend-warn: mat.define-palette(mat.$red-palette);\n\n// $cargodrom-frontend-theme: mat.define-light-theme((\n//   color: (\n//     primary: $cargodrom-frontend-primary,\n//     accent: $cargodrom-frontend-accent,\n//     warn: $cargodrom-frontend-warn,\n//   )\n// ));\n\n\n// @include mat.all-legacy-component-themes($cargodrom-frontend-theme);\n\n// @import url('./app/cargodrom.css');\n// html, body { height: 100%; }\n// body {\n//   margin: 0;\n\n// }\n","@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @at-root #{& or $root} {\n    @content;\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'typography-utils';\n@use '../theming/theming';\n@use '@material/typography' as mdc-typography;\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n///\n/// @deprecated Use `mat.define-typography-config` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@function define-legacy-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Converts a map containing rem values to a map containing px values.\n@function _rem-to-px($x, $px-per-rem: 16px) {\n  @if meta.type-of($x) == 'map' {\n    @each $key, $val in $x {\n      $x: map.merge($x, ($key: _rem-to-px($val)));\n    }\n    @return $x;\n  }\n  @if meta.type-of($x) == 'number' and math.unit($x) == 'rem' {\n    @return math.div($x, 1rem) * $px-per-rem;\n  }\n  @else {\n    @return $x;\n  }\n}\n\n// Applies the default font family to all levels in a typography config.\n@function _apply-font-family($font-family, $initial-config) {\n  $config: $initial-config;\n\n  @each $key, $level in $config {\n    @if map.get($level, 'font-family') == null {\n      // Sass maps are immutable so we have to re-assign the variable each time.\n      $config: map.set($config, $key, map.set($level, 'font-family', $font-family));\n    }\n  }\n\n  @return map.set($config, 'font-family', $font-family);\n}\n\n// Converts an MDC typography level config to an Angular Material one.\n@function typography-config-level-from-mdc($mdc-level, $font-family: null) {\n  $mdc-level-config: map.get(mdc-typography.$styles, $mdc-level);\n\n  // Explicitly default the font family to null since we'll apply it globally\n  // through the `define-typgraphy-config`/`define-legacy-typography-config`.\n  @return define-typography-level(\n    $font-family: $font-family,\n    $font-size: map.get($mdc-level-config, font-size),\n    $line-height: map.get($mdc-level-config, line-height),\n    $font-weight: map.get($mdc-level-config, font-weight),\n    $letter-spacing: map.get($mdc-level-config, letter-spacing)\n  );\n}\n\n/// Generates an Angular Material typography config based on values from the official Material\n/// Design spec implementation (MDC Web). All arguments are optional, but may be passed to override\n/// the default values. The `mat-typography-level` function can be used to generate a custom\n/// typography level map which can be passed to this function to override one of the default levels.\n/// All default typography sizing generated by this function is in `px` units.\n///\n/// @param {String} $font-family The font family to use for levels where it is not explicitly\n///     specified.\n/// @param {Map} $headline-1 The font settings for the headline-1 font level.\n/// @param {Map} $headline-2 The font settings for the headline-2 font level.\n/// @param {Map} $headline-3 The font settings for the headline-3 font level.\n/// @param {Map} $headline-4 The font settings for the headline-4 font level.\n/// @param {Map} $headline-5 The font settings for the headline-5 font level.\n/// @param {Map} $headline-6 The font settings for the headline-6 font level.\n/// @param {Map} $subtitle-1 The font settings for the subtitle-1 font level.\n/// @param {Map} $subtitle-2 The font settings for the subtitle-2 font level.\n/// @param {Map} $body-1 The font settings for the body-1 font level.\n/// @param {Map} $body-2 The font settings for the body-2 font level.\n/// @param {Map} $caption The font settings for the caption font level.\n/// @param {Map} $button The font settings for the button font level.\n/// @param {Map} $overline The font settings for the overline font level.\n/// @return {Map} A map containing font settings for each of the levels in the Material Design spec.\n@function define-typography-config(\n  // TODO(mmalerba): rename this function to define-typography-config,\n  //  and create a predefined px based config for people that need it.\n  $font-family: mdc-typography.$font-family,\n  $headline-1: null,\n  $headline-2: null,\n  $headline-3: null,\n  $headline-4: null,\n  $headline-5: null,\n  $headline-6: null,\n  $subtitle-1: null,\n  $subtitle-2: null,\n  $body-1: null,\n  $body-2: null,\n  $caption: null,\n  $button: null,\n  $overline: null,\n) {\n  @return _apply-font-family($font-family, (\n    headline-1: $headline-1 or _rem-to-px(typography-config-level-from-mdc(headline1)),\n    headline-2: $headline-2 or _rem-to-px(typography-config-level-from-mdc(headline2)),\n    headline-3: $headline-3 or _rem-to-px(typography-config-level-from-mdc(headline3)),\n    headline-4: $headline-4 or _rem-to-px(typography-config-level-from-mdc(headline4)),\n    headline-5: $headline-5 or _rem-to-px(typography-config-level-from-mdc(headline5)),\n    headline-6: $headline-6 or _rem-to-px(typography-config-level-from-mdc(headline6)),\n    subtitle-1: $subtitle-1 or _rem-to-px(typography-config-level-from-mdc(subtitle1)),\n    subtitle-2: $subtitle-2 or _rem-to-px(typography-config-level-from-mdc(subtitle2)),\n    body-1: $body-1 or _rem-to-px(typography-config-level-from-mdc(body1)),\n    body-2: $body-2 or _rem-to-px(typography-config-level-from-mdc(body2)),\n    caption: $caption or _rem-to-px(typography-config-level-from-mdc(caption)),\n    button: $button or _rem-to-px(typography-config-level-from-mdc(button)),\n    overline: $overline or _rem-to-px(typography-config-level-from-mdc(overline)),\n  ));\n}\n\n/// Generates an Angular Material typography config based on values from the official Material\n/// Design spec implementation (MDC Web). All arguments are optional, but may be passed to override\n/// the default values. The `mat-typography-level` function can be used to generate a custom\n/// typography level map which can be passed to this function to override one of the default levels.\n/// All default typography sizing generated by this function is in `rem` units.\n///\n/// @param {String} $font-family The font family to use for levels where it is not explicitly\n///     specified.\n/// @param {Map} $headline-1 The font settings for the headline-1 font level.\n/// @param {Map} $headline-2 The font settings for the headline-2 font level.\n/// @param {Map} $headline-3 The font settings for the headline-3 font level.\n/// @param {Map} $headline-4 The font settings for the headline-4 font level.\n/// @param {Map} $headline-5 The font settings for the headline-5 font level.\n/// @param {Map} $headline-6 The font settings for the headline-6 font level.\n/// @param {Map} $subtitle-1 The font settings for the subtitle-1 font level.\n/// @param {Map} $subtitle-2 The font settings for the subtitle-2 font level.\n/// @param {Map} $body-1 The font settings for the body-1 font level.\n/// @param {Map} $body-2 The font settings for the body-2 font level.\n/// @param {Map} $caption The font settings for the caption font level.\n/// @param {Map} $button The font settings for the button font level.\n/// @param {Map} $overline The font settings for the overline font level.\n/// @return {Map} A map containing font settings for each of the levels in the Material Design spec.\n@function define-rem-typography-config(\n  // TODO(mmalerba): rename this function to define-typography-config,\n  //  and create a predefined px based config for people that need it.\n  $font-family: mdc-typography.$font-family,\n  $headline-1: null,\n  $headline-2: null,\n  $headline-3: null,\n  $headline-4: null,\n  $headline-5: null,\n  $headline-6: null,\n  $subtitle-1: null,\n  $subtitle-2: null,\n  $body-1: null,\n  $body-2: null,\n  $caption: null,\n  $button: null,\n  $overline: null,\n) {\n  @return _apply-font-family($font-family, (\n    headline-1: $headline-1 or typography-config-level-from-mdc(headline1),\n    headline-2: $headline-2 or typography-config-level-from-mdc(headline2),\n    headline-3: $headline-3 or typography-config-level-from-mdc(headline3),\n    headline-4: $headline-4 or typography-config-level-from-mdc(headline4),\n    headline-5: $headline-5 or typography-config-level-from-mdc(headline5),\n    headline-6: $headline-6 or typography-config-level-from-mdc(headline6),\n    subtitle-1: $subtitle-1 or typography-config-level-from-mdc(subtitle1),\n    subtitle-2: $subtitle-2 or typography-config-level-from-mdc(subtitle2),\n    body-1: $body-1 or typography-config-level-from-mdc(body1),\n    body-2: $body-2 or typography-config-level-from-mdc(body2),\n    caption: $caption or typography-config-level-from-mdc(caption),\n    button: $button or typography-config-level-from-mdc(button),\n    overline: $overline or typography-config-level-from-mdc(overline),\n  ));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        font-family: map.get($config, font-family),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-legacy-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        font-famiy: map.get($config, font-family),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2018-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline-5,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline-5,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline-5);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-headline-6,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-headline-6,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, headline-6);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subtitle-1,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subtitle-1,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subtitle-1);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-body-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-body-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, body-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.83),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.67),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-subtitle-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-subtitle-2 {\n    @include typography-utils.typography-level($config, subtitle-2);\n  }\n\n  .mat-body,\n  .mat-body-2,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-2,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-2);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-headline-1,\n  #{$selector} .mat-headline-1 {\n    @include typography-utils.typography-level($config, headline-1);\n    margin: 0 0 56px;\n  }\n\n  .mat-headline-2,\n  #{$selector} .mat-headline-2 {\n    @include typography-utils.typography-level($config, headline-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-3,\n  #{$selector} .mat-headline-3 {\n    @include typography-utils.typography-level($config, headline-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-4,\n  #{$selector} .mat-headline-4 {\n    @include typography-utils.typography-level($config, headline-4);\n    margin: 0 0 64px;\n  }\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n/// @deprecated Use `mat.typography-hierarchy` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @if meta.type-of($config) != 'map' {\n    @error 'Typography config must be a map. Received #{meta.type-of($config)}.';\n  }\n\n  @if not map.has-key($config, $level) {\n    @error 'Typography config does not have a level called \"#{$level}\". ' +\n           'Available levels are: #{map.keys($config)}.';\n  }\n\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  @if meta.type-of($config) != 'map' {\n    @error 'Typography config must be a map. Received #{meta.type-of($config)}.';\n  }\n\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  // we deliberately do not use the font shorthand here because it overrides\n  // certain font properties that can't be configured in the current typography\n  // config, e.g. the font-variant-caps or font-feature-settings property\n  font-size: font-size($config, $level);\n  font-weight: font-weight($config, $level);\n  line-height: line-height($config, $level);\n  font-family: font-family($config, $level);\n\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/card' as tokens-mat-card;\n@use '../core/tokens/m2/mdc/elevated-card' as tokens-mdc-elevated-card;\n@use '../core/tokens/m2/mdc/outlined-card' as tokens-mdc-outlined-card;\n@use '@material/card/elevated-card-theme' as mdc-elevated-card-theme;\n@use '@material/card/outlined-card-theme' as mdc-outlined-card-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-elevated-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-elevated-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color\n  );\n  $mdc-outlined-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-outlined-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color,\n  );\n  $mat-card-color-tokens: tokens-mat-card.get-color-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-color-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-color-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-elevated-card-typography-tokens: tokens-mdc-elevated-card.get-typography-tokens($config);\n  $mdc-outlined-card-typography-tokens: tokens-mdc-outlined-card.get-typography-tokens($config);\n  $mat-card-typography-tokens: tokens-mat-card.get-typography-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-typography-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-typography-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-elevated-card-density-tokens: tokens-mdc-elevated-card.get-density-tokens($density-scale);\n  $mdc-outlined-card-density-tokens: tokens-mdc-outlined-card.get-density-tokens($density-scale);\n  $mat-card-density-tokens: tokens-mat-card.get-density-tokens($density-scale);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-density-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-density-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    $elevated-card-tokens: map.get($tokens, tokens-mdc-elevated-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $elevated-card-tokens: token-utils.resolve-elevation(\n        $elevated-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    $outlined-card-tokens: map.get($tokens, tokens-mdc-outlined-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $outlined-card-tokens: token-utils.resolve-elevation(\n        $outlined-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    @include mdc-elevated-card-theme.theme($elevated-card-tokens);\n    @include mdc-outlined-card-theme.theme($outlined-card-tokens);\n    @include token-utils.create-token-values(\n        tokens-mat-card.$prefix, map.get($tokens, tokens-mat-card.$prefix));\n  }\n}\n","@use '@material/tooltip/plain-tooltip-theme' as mdc-plain-tooltip-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/plain-tooltip' as m2-mdc-plain-tooltip;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-tooltip-color-tokens: m2-mdc-plain-tooltip.get-color-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  $mdc-tooltip-typography-tokens: m2-mdc-plain-tooltip.get-typography-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-tooltip-density-tokens: m2-mdc-plain-tooltip.get-density-tokens($density-scale);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/dialog/dialog-theme' as mdc-dialog-theme;\n@use '../core/tokens/m2/mdc/dialog' as tokens-mdc-dialog;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n@function _get-default-palette($config) {\n  $is-dark: map.get($config, is-dark);\n  $grey-50: map.get(palette.$grey-palette, 50);\n  $grey-900: map.get(palette.$grey-palette, 900);\n  $default-foreground: if($is-dark, $grey-50, $grey-900);\n\n  $surface: map.get(map.get($config, background), card);\n  $on-surface: if(\n    mdc-helpers.variable-safe-contrast-tone($surface, $is-dark) == 'dark',\n    #000,\n    #fff\n  );\n  $default-background: if(\n    meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n    color.mix($on-surface, $surface, 12%),\n    $on-surface\n  );\n\n  @return (default: $default-background, default-contrast: $default-foreground);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-standard-chip {\n    $default-palette: _get-default-palette($config);\n    $default-config: map.merge($config, (primary: $default-palette));\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($default-config);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($config);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-config: map.merge($config, (primary: map.get($config, accent)));\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($accent-config);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-config: map.merge($config, (primary: map.get($config, warn)));\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($warn-config);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($config);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $density-tokens: tokens-mdc-chip.get-density-tokens($density-scale);\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $is-dark: map.get($config, is-dark);\n  $foreground: map.get($config, foreground);\n\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($config);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: theming.get-color-from-palette($foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, accent),\n          map.get($config, is-dark)\n        ));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, warn),\n          map.get($config, is-dark)\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($config);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($config);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","@use 'sass:map';\n\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-slider {\n      $is-dark: map.get($config, is-dark);\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n\n      @include mdc-slider-theme.theme((\n        label-container-color: if($is-dark, white, black),\n        label-label-text-color: if($is-dark, black, white),\n        disabled-handle-color: $on-surface,\n        disabled-active-track-color: $on-surface,\n        disabled-inactive-track-color: $on-surface,\n        with-tick-marks-disabled-container-color: $on-surface,\n      ));\n\n      // Note that technically we can control this using an `rgba` color in `label-container-color`.\n      // We don't do it, because the shapes MDC uses to construct the indicator overlap which causes\n      // their color opacities to stack with an `rgba` color.\n      --mat-mdc-slider-value-indicator-opacity: #{if($is-dark, 0.9, 0.6)};\n\n      &.mat-primary {\n        @include _slider-color(primary, on-primary);\n      }\n\n      &.mat-accent {\n        @include _slider-color(secondary, on-secondary);\n      }\n\n      &.mat-warn {\n        @include _slider-color(error, on-error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-slider {\n      @include mdc-slider-theme.theme((\n        label-label-text-font: mdc-typography.get-font(subtitle2),\n        label-label-text-size: mdc-typography.get-size(subtitle2),\n        label-label-text-line-height: mdc-typography.get-line-height(subtitle2),\n        label-label-text-tracking: mdc-typography.get-tracking(subtitle2),\n        label-label-text-weight: mdc-typography.get-weight(subtitle2),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin _slider-color($color, $on-color) {\n  $ripple-color: map.get(mdc-theme-variables.$property-values, $color);\n  $resolved-color: mdc-theme-color.prop-value($color);\n  $resolved-on-color: mdc-theme-color.prop-value($on-color);\n\n  @include mdc-slider-theme.theme((\n    handle-color: $resolved-color,\n    focus-handle-color: $resolved-color,\n    hover-handle-color: $resolved-color,\n    active-track-color: $resolved-color,\n    inactive-track-color: $resolved-color,\n    with-tick-marks-active-container-color: $resolved-on-color,\n    with-tick-marks-inactive-container-color: $resolved-color,\n  ));\n\n  --mat-mdc-slider-ripple-color: #{$ripple-color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($ripple-color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($ripple-color, 0.2)};\n}\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($config);\n  $inner-control-primary: map.merge($config, (accent: $primary));\n  $inner-control-accent: map.merge($config, (accent: $accent));\n  $inner-control-warn: map.merge($config, (accent: $warn));\n\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(theming.get-color-from-palette($primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($density-scale);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  $clamped-density-scale: theming.clamp-density($density-scale, -5);\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $clamped-density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $clamped-density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($config);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    @include typography-utils.typography-level($config, subtitle-1);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($config, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($config, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($config, warn);\n    }\n  }\n}\n\n@mixin _background-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($config));\n}\n\n@mixin _palette-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($config));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($config));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($config));\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($config));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($density-scale));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        @include rtl.ignore-next-line();\n        transform: translate(-50%, -50%);\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/elevation/elevation';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-custom-properties';\n@use './extended-fab-theme';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:list';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define fab\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include base_($query: $query);\n  }\n\n  .mdc-fab--mini {\n    @include mini_($query: $query);\n  }\n\n  .mdc-fab--extended {\n    @include extended_($query: $query);\n  }\n\n  .mdc-fab--touch {\n    @include touch-target-mixins.margin(\n      $component-height: fab-theme.$mini-height,\n      $component-width: fab-theme.$mini-height,\n      $query: $query\n    );\n\n    .mdc-fab__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-fab::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  .mdc-fab__label {\n    @include label_($query: $query);\n  }\n\n  .mdc-fab__icon {\n    @include icon_($query: $query);\n  }\n\n  // Increase specificity for FAB icon styles that need to override styles defined for .material-icons\n  // (which is loaded separately so the order of CSS definitions is not guaranteed)\n  .mdc-fab .mdc-fab__icon {\n    @include icon-overrides_($query: $query);\n  }\n\n  .mdc-fab--exited {\n    @include exited_($query: $query);\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-fab {\n    @include fab-theme.container-color(secondary, $query: $query);\n    @include fab-theme.icon-size(24px, $query: $query);\n    @include fab-theme.ink-color(on-secondary, $query: $query);\n    @include fab-theme.shape-radius(fab-theme.$shape-radius, $query: $query);\n    @include elevation-theme.elevation(6, $query: $query);\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    // Set `$opacity-map` to null to apply default opacity-map.\n    @include fab-theme.ripple-color(\n      on-secondary,\n      $opacity-map: null,\n      $query: $query\n    );\n\n    #{fab-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n    @include ripple-theme.behind-content(\n      fab-theme.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n$icon-enter-delay_: 90ms;\n$icon-enter-duration_: 180ms;\n\n@mixin base_($query: feature-targeting.all()) {\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: fab-theme.$height;\n    height: fab-theme.$height;\n    padding: 0;\n    border: none;\n    fill: currentColor;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    &[hidden] {\n      display: none;\n    }\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: box-shadow elevation-theme.$transition-duration\n        elevation-theme.$transition-timing-function,\n      opacity 15ms linear 30ms,\n      animation-functions.enter(\n        transform,\n        $icon-enter-duration_ + $icon-enter-delay_\n      );\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  &:hover {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  @include ripple-theme.focus() {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  .mdc-fab__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n    }\n  }\n\n  @include ripple-theme.focus() {\n    .mdc-fab__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n    }\n  }\n\n  // Increase active state specificity due to ripple-theme.focus().\n  &:active,\n  &:focus:active {\n    @include elevation-theme.elevation(12, $query: $query);\n  }\n\n  &:active,\n  &:focus {\n    // TODO(acdvorak): Should this be paired with states and/or ripple? We don't want to disable outline\n    // (an accessibility/usability feature) unless we're confident that there is also a visual indication that the\n    // element has focus. If the client has customized the DOM in some unexpected way, and is certain that another\n    // element will receive focus instead, they can always override this property manually in their CSS.\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // postcss-bem-linter: ignore\n  > svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // stylelint-enable selector-max-type\n}\n\n@mixin mini_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: fab-theme.$mini-height;\n    height: fab-theme.$mini-height;\n  }\n}\n\n@mixin extended_($query: feature-targeting.all()) {\n  @include typography.typography(button, $query: $query);\n  @include extended-fab-theme.extended-shape-radius(\n    fab-theme.$shape-radius,\n    $query: $query\n  );\n  $extended-icon-padding: custom-properties.create(\n    fab-custom-properties.$extended-icon-padding,\n    extended-fab-theme.$extended-icon-padding\n  );\n  $extended-label-padding: custom-properties.create(\n    fab-custom-properties.$extended-label-padding,\n    extended-fab-theme.$extended-label-padding\n  );\n  @include extended-fab-theme.extended-padding(\n    extended-fab-theme.$extended-icon-padding,\n    extended-fab-theme.$extended-label-padding,\n    $query: $query\n  );\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: auto;\n    max-width: 100%;\n    height: extended-fab-theme.$extended-height;\n    // This allows the text within the extended fab to be centered for varying font sizes.\n    /* @alternate */\n    line-height: normal;\n  }\n}\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation-functions.enter(\n      transform,\n      $icon-enter-duration_,\n      $icon-enter-delay_\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    fill: currentColor;\n    will-change: transform;\n  }\n}\n\n@mixin label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow-x: hidden;\n    overflow-y: visible;\n  }\n}\n\n@mixin icon-overrides_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n@mixin exited_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity 15ms linear 150ms,\n      animation-functions.exit-permanent(transform, 180ms);\n  }\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scale(0);\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-permanent(transform, 135ms);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/typography/typography';\n\n@mixin _fab-variant($config, $foreground, $background) {\n  $color-config: map.merge(\n    $config,\n    (\n      primary: (\n        default: $background,\n        default-contrast: $foreground,\n      ),\n    )\n  );\n  $color-tokens: tokens-mdc-fab.get-color-tokens($color-config);\n  @include mdc-fab-theme.theme($color-tokens);\n\n  --mat-mdc-fab-color: #{$foreground};\n}\n\n@function white-or-black($color, $is-dark) {\n  @return if(mdc-helpers.variable-safe-contrast-tone($color, $is-dark) == 'dark', #000, #fff);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  $is-dark: map.get($config, is-dark);\n  $background: map.get($config, background);\n\n  $surface: theming.get-color-from-palette($background, card);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n\n  $on-surface: white-or-black($surface, $is-dark);\n  $on-primary: white-or-black($primary, $is-dark);\n  $on-accent: white-or-black($accent, $is-dark);\n  $on-warn: white-or-black($warn, $is-dark);\n\n  $disabled: rgba($on-surface, 0.12);\n  $on-disabled: rgba($on-surface, if(map.get($config, is-dark), 0.5, 0.38));\n\n  .mat-mdc-fab,\n  .mat-mdc-mini-fab {\n    // TODO(wagnermaciel): The ripple-theme-styles mixin depends heavily on\n    // being wrapped by using-mdc-theme. This workaround needs to be\n    // revisited w/ a more holistic solution.\n    @include mdc-helpers.using-mdc-theme($config) {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      @include _fab-variant($config, $on-disabled, $disabled);\n    }\n\n    &.mat-unthemed {\n      @include _fab-variant($config, $on-surface, $surface);\n    }\n\n    &.mat-primary {\n      @include _fab-variant($config, $on-primary, $primary);\n    }\n\n    &.mat-accent {\n      @include _fab-variant($config, $on-accent, $accent);\n    }\n\n    &.mat-warn {\n      @include _fab-variant($config, $on-warn, $warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($config);\n  .mat-mdc-extended-fab {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/snackbar/snackbar-theme' as mdc-snackbar-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mdc/snack-bar' as tokens-mdc-snack-bar;\n@use '../core/tokens/m2/mat/snack-bar' as tokens-mat-snack-bar;\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-color-tokens($config));\n    @include token-utils.create-token-values(\n      tokens-mat-snack-bar.$prefix,\n      tokens-mat-snack-bar.get-color-tokens($config)\n    );\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../core/tokens/m2/mat/table' as tokens-mat-table;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin _output-tokens {\n  @if (&) {\n    @content;\n  }\n  @else {\n    html {\n      @content;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.get-color-tokens($config));\n    }\n\n    .mat-accent {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-warn {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n@use 'sass:map';\n\n@mixin _palette-styles($config, $palette-name) {\n  $palette-config: map.merge($config, (primary: map.get($config, $palette-name)));\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($palette-config);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-progress-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/textfield/variables' as mdc-textfield-variables;\n\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/tokens/token-utils';\n@use './form-field-sizing';\n\n@mixin private-form-field-subscript() {\n  // Wrapper for the hints and error messages.\n  .mat-mdc-form-field-subscript-wrapper {\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n\n  .mat-mdc-form-field-hint-wrapper,\n  .mat-mdc-form-field-error-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 mdc-textfield-variables.$padding-horizontal;\n  }\n\n  .mat-mdc-form-field-subscript-dynamic-size {\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-error-wrapper {\n      position: static;\n    }\n  }\n\n  .mat-mdc-form-field-bottom-align::before {\n    content: '';\n    display: inline-block;\n    height: 16px;\n  }\n\n  .mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before {\n    content: unset;\n  }\n\n  .mat-mdc-form-field-hint-end {\n    order: 1;\n  }\n\n  // Clears the floats on the hints. This is necessary for the hint animation to work.\n  .mat-mdc-form-field-hint-wrapper {\n    display: flex;\n  }\n\n  // Spacer used to make sure start and end hints have enough space between them.\n  .mat-mdc-form-field-hint-spacer {\n    flex: 1 0 form-field-sizing.$mat-form-field-hint-min-space;\n  }\n\n  // Single error message displayed beneath the form field underline.\n  .mat-mdc-form-field-error {\n    display: block;\n  }\n}\n\n@mixin private-form-field-subscript-color() {\n  // MDC does not have built-in error treatment.\n  .mat-mdc-form-field-error {\n    @include mdc-theme.prop(color, mdc-textfield.$error);\n  }\n\n  // The subscript wrapper has a minimum height to avoid that the form-field\n  // jumps when hints or errors are displayed.\n  .mat-mdc-form-field-subscript-wrapper,\n  .mat-mdc-form-field-bottom-align::before {\n    @include token-utils.use-tokens(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-token-slots()) {\n      @include mdc-typography.smooth-font();\n      @include token-utils.create-token-slot(font-family, subscript-text-font);\n      @include token-utils.create-token-slot(line-height, subscript-text-line-height);\n      @include token-utils.create-token-slot(font-size, subscript-text-size);\n      @include token-utils.create-token-slot(letter-spacing, subscript-text-tracking);\n      @include token-utils.create-token-slot(font-weight, subscript-text-weight);\n    }\n  }\n}\n","@use '@material/ripple/functions' as mdc-ripple-functions;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/style/layout-common';\n\n// MDC text-field uses `@material/ripple` in order to show a focus and hover effect for\n// text-fields. This is unnecessary because the ripples bring in a lot of unnecessary\n// styles and runtime code while the actual goal for the text-field is simply showing a\n// focus and hover effect. The ripples will unnecessarily provide CSS selectors and JS\n// runtime code for launching interaction ripples at pointer location. This is not needed\n// for the text-field, so we create our own minimal focus overlay styles. Our focus overlay\n// uses the exact same logic to compute the colors as in the default MDC text-field ripples.\n@mixin private-form-field-focus-overlay() {\n  .mat-mdc-form-field-focus-overlay {\n    @include layout-common.fill;\n    opacity: 0;\n    // Make sure we don't block click on the prefix/suffix.\n    pointer-events: none;\n  }\n}\n\n@mixin private-form-field-focus-overlay-color() {\n  $focus-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, focus);\n  $hover-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, hover);\n\n  .mat-mdc-form-field-focus-overlay {\n    background-color: mdc-textfield.$ink-color;\n  }\n\n  .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n    opacity: $hover-opacity;\n  }\n\n  .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n    opacity: $focus-opacity;\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use 'sass:color';\n@use 'sass:meta';\n\n// Mixin that refreshes the MDC text-field theming variables. This mixin should be used when\n// the base MDC theming variables have been explicitly updated, but the component specific\n// theming-based variables are still based on the old MDC base theming variables. The mixin\n// restores the previous values for the variables to avoid unexpected global side effects.\n@mixin private-text-field-refresh-theme-variables() {\n  $_disabled-border: mdc-textfield.$disabled-border;\n  mdc-textfield.$disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_bottom-line-hover: mdc-textfield.$bottom-line-hover;\n  mdc-textfield.$bottom-line-hover:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_bottom-line-idle: mdc-textfield.$bottom-line-idle;\n  mdc-textfield.$bottom-line-idle:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.42);\n  $_label: mdc-textfield.$label;\n  mdc-textfield.$label: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_ink-color: mdc-textfield.$ink-color;\n  mdc-textfield.$ink-color: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(primary), 0.87);\n  $_placeholder-ink-color: mdc-textfield.$placeholder-ink-color;\n  mdc-textfield.$placeholder-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_disabled-label-color: mdc-textfield.$disabled-label-color;\n  mdc-textfield.$disabled-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-ink-color: mdc-textfield.$disabled-ink-color;\n  mdc-textfield.$disabled-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-placeholder-ink-color: mdc-textfield.$disabled-placeholder-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color:\n      _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_background: mdc-textfield.$background;\n  mdc-textfield.$background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 4%);\n  $_disabled-background: mdc-textfield.$disabled-background;\n  mdc-textfield.$disabled-background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 2%);\n  $_outlined-idle-border: mdc-textfield.$outlined-idle-border;\n  mdc-textfield.$outlined-idle-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_outlined-disabled-border: mdc-textfield.$outlined-disabled-border;\n  mdc-textfield.$outlined-disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_outlined-hover-border: mdc-textfield.$outlined-hover-border;\n  mdc-textfield.$outlined-hover-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n\n  // The content will be generated with the refreshed MDC text-field theming variables.\n  @content;\n\n  // Reset all variables to ensure that this mixin does not cause unexpected side effects.\n  mdc-textfield.$disabled-border: $_disabled-border;\n  mdc-textfield.$bottom-line-hover: $_bottom-line-hover;\n  mdc-textfield.$bottom-line-idle: $_bottom-line-idle;\n  mdc-textfield.$label: $_label;\n  mdc-textfield.$ink-color: $_ink-color;\n  mdc-textfield.$focused-label-color: $_focused-label-color;\n  mdc-textfield.$placeholder-ink-color: $_placeholder-ink-color;\n  mdc-textfield.$disabled-label-color: $_disabled-label-color;\n  mdc-textfield.$disabled-ink-color: $_disabled-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color: $_disabled-placeholder-ink-color;\n  mdc-textfield.$background: $_background;\n  mdc-textfield.$disabled-background: $_disabled-background;\n  mdc-textfield.$outlined-idle-border: $_outlined-idle-border;\n  mdc-textfield.$outlined-disabled-border: $_outlined-disabled-border;\n  mdc-textfield.$outlined-hover-border: $_outlined-hover-border;\n}\n\n@function _variable-safe-rgba($color, $opacity) {\n  @if (meta.type-of($color) == color) {\n    @return rgba($color, $opacity);\n  }\n  @return $color;\n}\n\n@function _variable-safe-mix($first-color, $second-color, $amount) {\n  @if (meta.type-of($first-color) == color and meta.type-of($second-color) == color) {\n    @return color.mix($first-color, $second-color, $amount);\n  }\n  @return $first-color;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Width of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-width: 10px;\n// Height of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-height: 5px;\n// Horizontal padding that needs to be applied to the native select in an form-field so\n// that the absolute positioned arrow does not overlap the select content.\n$mat-form-field-select-horizontal-end-padding: $mat-form-field-select-arrow-width + 5px;\n\n// Mixin that creates styles for native select controls in a form-field.\n@mixin private-form-field-native-select() {\n  // Remove the native select down arrow and ensure that the native appearance\n  // does not conflict with the form-field. e.g. Focus indication of the native\n  // select is undesired since we handle focus as part of the form-field.\n  select.mat-mdc-form-field-input-control {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    background-color: transparent;\n    display: inline-flex;\n    box-sizing: border-box;\n\n    // By default the cursor does not change when hovering over a select. We want to\n    // change this for non-disabled select elements so that it's more obvious that the\n    // control can be clicked.\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n\n  // Native select elements with the `matInput` directive should have Material Design\n  // styling. This means that we add an arrow to the form-field that is based on the\n  // Material Design specification. We achieve this by adding a pseudo element to the\n  // form-field infix.\n  .mat-mdc-form-field-type-mat-native-select {\n    .mat-mdc-form-field-infix::after {\n      content: '';\n      width: 0;\n      height: 0;\n      border-left: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-right: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-top: $mat-form-field-select-arrow-height solid;\n      position: absolute;\n      right: 0;\n      top: 50%;\n      margin-top: -#{math.div($mat-form-field-select-arrow-height, 2)};\n\n      // Make the arrow non-clickable so the user can click on the form control under it.\n      pointer-events: none;\n\n      [dir='rtl'] & {\n        right: auto;\n        left: 0;\n      }\n    }\n\n    // Add padding on the end of the native select so that the content does not\n    // overlap with the Material Design arrow.\n    .mat-mdc-form-field-input-control {\n      padding-right: $mat-form-field-select-horizontal-end-padding;\n      [dir='rtl'] & {\n        padding-right: 0;\n        padding-left: $mat-form-field-select-horizontal-end-padding;\n      }\n    }\n  }\n}\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-focused-arrow-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin private-form-field-native-select-color($config) {\n  @include mdc-helpers.using-mdc-theme($config) {\n    // These values are taken from the MDC select implementation:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-select/_select-theme.scss\n    $dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    $disabled-dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n\n    select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) {\n      // On dark themes we set the native `select` color to some shade of white,\n      // however the color propagates to all of the `option` elements, which are\n      // always on a white background inside the dropdown, causing them to blend in.\n      // Since we can't change background of the dropdown, we need to explicitly\n      // reset the color of the options to something dark.\n      @if (map.get($config, is-dark)) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n\n    .mat-mdc-form-field-type-mat-native-select {\n      .mat-mdc-form-field-infix::after {\n        color: $dropdown-icon-color;\n      }\n\n      &.mat-focused {\n        &.mat-primary {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(primary);\n          }\n        }\n\n        &.mat-accent {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(secondary);\n          }\n        }\n\n        &.mat-warn {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(error);\n          }\n        }\n      }\n\n      &.mat-form-field-disabled {\n        .mat-mdc-form-field-infix::after {\n          color: $disabled-dropdown-icon-color;\n        }\n      }\n    }\n  }\n}\n","@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n@use './form-field-subscript';\n@use './form-field-focus-overlay';\n@use './form-field-native-select';\n@use './mdc-text-field-theme-variable-refresh';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($config));\n  }\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {\n      @include form-field-subscript.private-form-field-subscript-color();\n      @include form-field-focus-overlay.private-form-field-focus-overlay-color();\n      @include form-field-native-select.private-form-field-native-select-color($config);\n\n      .mat-mdc-form-field.mat-accent {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, accent));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, accent));\n      }\n\n      .mat-mdc-form-field.mat-warn {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, warn));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, warn));\n      }\n\n      // This fixes an issue where the notch appears to be thicker than the rest of the outline when\n      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact\n      // that arises from a combination of the fact that the notch contains text, while the leading\n      // and trailing outline do not, combined with the fact that the border is semi-transparent.\n      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.\n      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.\n      // (hover, focus, etc.)\n      // TODO(mmalerba): port this fix into MDC\n      // TODO(crisbeto): move this into the structural styles\n      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n        &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n          border-left: 1px solid transparent;\n        }\n      }\n\n      [dir='rtl'] {\n        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n          &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n            border-left: none;\n            border-right: 1px solid transparent;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-density.private-form-field-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/theming';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","@use 'sass:map';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($config));\n\n    .mat-mdc-form-field.mat-accent {\n      $accent: map.get($config, accent);\n      $accent-config: map.merge($config, (primary: $accent));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($accent-config));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      $warn: map.get($config, warn);\n      $warn-config: map.merge($config, (primary: $warn));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/radio/radio' as mdc-radio;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n@use 'sass:map';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-radio-button {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n  }\n\n  .mat-mdc-radio-button {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($primary-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($primary-config));\n    }\n\n    &.mat-accent {\n      $accent-config: map.merge($config, (accent: $accent));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($accent-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($accent-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($warn-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-radio-button {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($config));\n    @include mdc-helpers.using-mdc-typography($config) {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-radio-button .mdc-radio {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-radio-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($primary-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($warn-config));\n    }\n\n    @include mdc-helpers.using-mdc-theme($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n\n    &.mat-mdc-checkbox-disabled label {\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    @include mdc-helpers.using-mdc-typography($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-checkbox-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n\n@use './button-theme-private';\n@use '../core/theming/theming';\n\n$_icon-size: 24px;\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@function _variable-safe-contrast-tone($value, $is-dark) {\n  @if ($value == 'dark' or $value == 'light' or type-of($value) == 'color') {\n    @return mdc-theme-color.contrast-tone($value);\n  }\n\n  @return if($is-dark, 'light', 'dark');\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $color-tokens: tokens-mdc-icon-button.get-color-tokens($config);\n  $background-palette: map.get($config, background);\n  $surface: theming.get-color-from-palette($background-palette, card);\n  $is-dark: map.get($config, is-dark);\n  $on-surface: if(_variable-safe-contrast-tone($surface, $is-dark) == 'dark', #000, #fff);\n\n  .mat-mdc-icon-button {\n    @include button-theme-private.ripple-theme-styles($config, false);\n    @include mdc-icon-button-theme.theme($color-tokens);\n    @include _ripple-color($on-surface);\n\n    &.mat-primary {\n      $color: theming.get-color-from-palette(map.get($config, primary));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n      @include mdc-icon-button-theme.theme((\n        icon-color: $disabled-color,\n        disabled-icon-color: $disabled-color,\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $_icon-size, 2);\n\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($config);\n\n  .mat-mdc-progress-spinner {\n    @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($config));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($warn));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($config, $palette) {\n  $palette-color: theming.get-color-from-palette(map.get($config, $palette));\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($config, $palette);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($config));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($config, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($config, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($config));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($config, $palette-name) {\n  $palette: map.get($config, $palette-name);\n  $color: theming.get-color-from-palette($palette, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($config));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($config, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/density/private/compatibility';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($config));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($palette) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: theming.get-color-from-palette($palette),\n      $text-color: theming.get-color-from-palette($palette, default-contrast)\n    )\n  );\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-color-tokens($config));\n  }\n\n  .mat-toolbar {\n    &.mat-primary {\n      @include _palette-styles(map.get($config, primary));\n    }\n\n    &.mat-accent {\n      @include _palette-styles(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _palette-styles(map.get($config, warn));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61]}